{
  "skriptVersion" : "2.2-dev36",

  "classes" : [
    {
  "id" : "biome",
  "name" : "Biome",
  "patterns" : [
    "Biome names; you can use F3 ingame",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "All possible biomes Minecraft uses to generate a world.",
  "examples" : "biome at the player is desert"
},
{
  "id" : "block",
  "name" : "Block",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A block in a <a href='#world'>world</a>. It has a <a href='#location'>location</a> and a <a href='#itemstack'>type</a>, and can also have a <a href='#direction'>direction</a> (mostly a <a href='../expressions/#ExprFacing'>facing</a>), an <a href='#inventory'>inventory</a>, or other special properties.",
  "examples" : ""
},
{
  "id" : "boolean",
  "name" : "Boolean",
  "patterns" : [
    "true/yes/on or false/no/off",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A boolean is a value that is either true or false. Other accepted names are 'on' and 'yes' for true, and 'off' and 'no' for false.",
  "examples" : "set {config.%player%.use mod} to false"
},
{
  "id" : "chunk",
  "name" : "Chunk",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "A chunk is a cuboid of 16×16×128 (x×z×y) blocks. Chunks are spread on a fixed rectangular grid in their world.",
  "examples" : ""
},
{
  "id" : "clicktype",
  "name" : "Click Type",
  "patterns" : [
    "left mouse button, left mouse button with shift, right mouse button, right mouse button with shift, window border using right mouse button, window border using left mouse button, middle mouse button, number key, double click using mouse, drop key, drop key with control, creative action, unknown",

    "pattern_end"
  ],
  "since" : "2.2-dev16b, 2.2-dev35 (renamed to click type)",
  "description" : "Click type, mostly for inventory events. Tells exactly which keys/buttons player pressed, assuming that default keybindings are used in client side.",
  "examples" : ""
},
{
  "id" : "color",
  "name" : "Colour",
  "patterns" : [
    "black, dark grey/dark gray, grey/light grey/gray/light gray/silver, white, blue/dark blue, cyan/aqua/dark cyan/dark aqua, light blue/light cyan/light aqua, green/dark green, light green/lime/lime green, yellow/light yellow, orange/gold/dark yellow, red/dark red, pink/light red, purple/dark purple, magenta/light purple, brown/indigo",

    "pattern_end"
  ],
  "since" : "",
  "description" : "Wool, dye and chat colours.",
  "examples" : "color of the sheep is red or black\\nset the colour of the block to green\\nmessage \"You're holding a <%color of tool%>%color of tool%<reset> wool block\""
},
{
  "id" : "commandsender",
  "name" : "Command Sender",
  "patterns" : [
    "use &lt;a href='../expressions/#LitConsole'&gt;the console&lt;/a&gt; for the console",
"see &lt;a href='#player'&gt;player&lt;/a&gt; for players.",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A player or the console.",
  "examples" : "on command /pm:\\n    command sender is not the console\\n    chance of 10%\\n    give coal to the player\\n    message \"You got a piece of coal for sending that PM!\""
},
{
  "id" : "damagecause",
  "name" : "Damage Cause",
  "patterns" : [
    "contact, attack, sweep attack, projectile, suffocation, fall, fire, burning, melting, lava, drowning, block explosion, entity explosion, void, lightning, suicide, starvation, poison, potion, wither, falling block, thorns, dragon's breath, unknown, hitting wall while flying, magma, cramming",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The cause/type of a <a href='../events/#damage'>damage event</a>, e.g. lava, fall, fire, drowning, explosion, poison, etc.\\nPlease note that support for this type is very rudimentary, e.g. lava, fire and burning, as well as projectile and attack are considered different types.",
  "examples" : ""
},
{
  "id" : "date",
  "name" : "Date",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "A date is a certain point in the real world's time which can currently only be obtained with <a href='../expressions/#ExprNow'>now</a>.\\nSee <a href='#time'>time</a> and <a href='#timespan'>timespan</a> for the other time types of Skript.",
  "examples" : "set {_yesterday} to now\\nsubtract a day from {_yesterday}\\n# now {_yesterday} represents the date 24 hours before now"
},
{
  "id" : "direction",
  "name" : "Direction",
  "patterns" : [
    "see &lt;a href='../expressions/#ExprDirection'&gt;direction (expression)&lt;/a&gt;",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "A direction, e.g. north, east, behind, 5 south east, 1.3 meters to the right, etc.\\n<a href='#location'>Locations</a> and some <a href='#block'>blocks</a> also have a direction, but without a length.\\nPlease note that directions have changed extensively in the betas and might not work perfectly. They can also not be used as command arguments.",
  "examples" : "set the block below the victim to a chest\\nloop blocks from the block infront of the player to the block 10 below the player:\\n    set the block behind the loop-block to water"
},
{
  "id" : "enchantment",
  "name" : "Enchantment",
  "patterns" : [
    "Protection, Fire Protection, Feather Falling, Blast Protection, Projectile Protection, Respiration, Aqua Affinity, Mending, Thorns, Curse of Vanishing, Depth Strider, Frost Walker, Curse of Binding, Sharpness, Smite, Bane of Arthropods, Knockback, Fire Aspect, Looting, Sweeping Edge, Efficiency, Silk Touch, Unbreaking, Fortune, Power, Punch, Flame, Infinity, Luck of the Sea, Lure",

    "pattern_end"
  ],
  "since" : "1.4.6",
  "description" : "An enchantment, e.g. 'sharpness' or 'furtune'. Unlike <a href='#enchantmenttype'>enchantment type</a> this type has no level, but you usually don't need to use this type anyway.",
  "examples" : ""
},
{
  "id" : "enchantmenttype",
  "name" : "Enchantment Type",
  "patterns" : [
    "&lt;code&gt;&amp;lt;enchantment&amp;gt; [&amp;lt;level&amp;gt;]&lt;/code&gt;",

    "pattern_end"
  ],
  "since" : "1.4.6",
  "description" : "An enchantment with an optional level, e.g. 'sharpness 2' or 'fortune'.",
  "examples" : "enchant the player's tool with sharpness 5\\nhelmet is enchanted with waterbreathing"
},
{
  "id" : "entity",
  "name" : "Entity",
  "patterns" : [
    "player, op, wolf, tamed ocelot, powered creeper, zombie, unsaddled pig, fireball, arrow, dropped item, item frame, etc.",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "An entity is something in a <a href='#world'>world</a> that's not a <a href='#block'>block</a>, e.g. a <a href='#player'>player</a>, a skeleton, or a zombie, but also <a href='#projectile'>projectiles</a> like arrows, fireballs or thrown potions, or special entities like dropped items, falling blocks or paintings.",
  "examples" : "entity is a zombie or creeper\\nplayer is an op\\nprojectile is an arrow\\nshoot a fireball from the player"
},
{
  "id" : "entitydata",
  "name" : "Entity Type",
  "patterns" : [
    "&lt;i&gt;Detailed usage will be added eventually&lt;/i&gt;",

    "pattern_end"
  ],
  "since" : "1.3",
  "description" : "The type of an <a href='#entity'>entity</a>, e.g. player, wolf, powered creeper, etc.",
  "examples" : "victim is a cow\\nspawn a creeper"
},
{
  "id" : "entitytype",
  "name" : "Entity Type with Amount",
  "patterns" : [
    "&amp;lt;&lt;a href='#number'&gt;number&lt;/a&gt;&amp;gt; &amp;lt;entity type&amp;gt;",

    "pattern_end"
  ],
  "since" : "1.3",
  "description" : "An <a href='#entitydata'>entity type</a> with an amount, e.g. '2 zombies'. I might remove this type in the future and make a more general 'type' type, i.e. a type that has a number and a type.",
  "examples" : "spawn 5 creepers behind the player"
},
{
  "id" : "experience",
  "name" : "Experience",
  "patterns" : [
    "&lt;code&gt;[&amp;lt;number&amp;gt;] ([e]xp|experience [point[s]])&lt;/code&gt;",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Experience points. Please note that Bukkit only allows to give XP, but not remove XP from players. You can however change a player's <a href='../expressions/#ExprLevel'>level</a> and <a href='../expressions/#ExprLevelProgress'>level progress</a> freely.",
  "examples" : "give 10 xp to the player"
},
{
  "id" : "gamemode",
  "name" : "Game Mode",
  "patterns" : [
    "creative/survival/adventure",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The game modes survival, creative and adventure.",
  "examples" : "player's gamemode is survival\\nset the player argument's game mode to creative"
},
{
  "id" : "inventory",
  "name" : "Inventory",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "An inventory of a <a href='#player'>player</a> or <a href='#block'>block</a>. Inventories have many effects and conditions regarding the items contained.\\nAn inventory has a fixed amount of <a href='#slot'>slots</a> which represent a specific place in the inventory, e.g. the <a href='../expressions/#ExprArmorSlot'>helmet slot</a> for players (Please note that slot support is still very limited but will be improved eventually).",
  "examples" : ""
},
{
  "id" : "inventoryaction",
  "name" : "Inventory Action",
  "patterns" : [
    "nothing, pickup all, pickup some, pickup half, pickup one item, place all, place some, place one, swap with cursor, drop all from cursor, drop one from cursor, drop all from slot, drop one from slot, instant move, hotbar move and readd, swap with hotbar, clone stack, collect to cursor, unknown",

    "pattern_end"
  ],
  "since" : "2.2-dev16",
  "description" : "What player just did in inventory event. Note that when in creative game mode, most actions do not work correctly.",
  "examples" : ""
},
{
  "id" : "slot",
  "name" : "Inventory Slot",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "",
  "description" : "Represents a single slot of an <a href='#inventory'>inventory</a>. Notable slots are the <a href='../expressions/#ExprArmorSlot'>armour slots</a> and <a href='../expressions/#ExprFurnaceSlot'>furnace slots</a>. \\nThe most important property that distinguishes a slot from an <a href='#itemstack'>item</a> is its ability to be changed, e.g. it can be set, deleted, enchanted, etc. (Some item expressions can be changed as well, e.g. items stored in variables. For that matter: slots are never saved to variables, only the items they represent at the time when the variable is set).\\nPlease note that <a href='../expressions/#ExprTool'>tool</a> can be regarded a slot, but it can actually change it's position, i.e. doesn't represent always the same slot.",
  "examples" : "set tool of player to dirt\\ndelete helmet of the victim\\nset the colour of the player's tool to green\\nenchant the player's chestplate with projectile protection 5"
},
{
  "id" : "inventorytype",
  "name" : "Inventory Type",
  "patterns" : [
    "chest inventory, dispenser inventory, dropper inventory, furnace inventory, workbench inventory, crafting table inventory, enchanting table inventory, brewing stand inventory, player inventory, creative inventory, merchant inventory, ender chest inventory, anvil inventory, beacon inventory, hopper inventory, shulker box inventory",

    "pattern_end"
  ],
  "since" : "2.2-dev32",
  "description" : "Minecraft has several different inventory types with their own use cases.",
  "examples" : ""
},
{
  "id" : "itemstack",
  "name" : "Item / Material",
  "patterns" : [
    "&lt;code&gt;[&amp;lt;number&amp;gt; [of]] &amp;lt;alias&amp;gt; [of &amp;lt;enchantment&amp;gt; &amp;lt;level&amp;gt;]&lt;/code&gt;, Where &amp;lt;alias&amp;gt; must be an alias that represents exactly one item (i.e cannot be a general alias like 'sword' or 'plant')",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "An item, e.g. a stack of torches, a furnace, or a wooden sword of sharpness 2. Unlike <a href='#itemtype'>item type</a> an item can only represent exactly one item (e.g. an upside-down cobblestone stair facing west), while an item type can represent a whole range of items (e.g. any cobble stone stairs regardless of direction).\\nYou don't usually need this type except when you want to make a command that only accepts an exact item.\\nPlease note that currently 'material' is exactly the same as 'item', i.e. can have an amount & enchantments.",
  "examples" : "set {_item} to type of the targeted block\\n{_item} is a torch"
},
{
  "id" : "itemtype",
  "name" : "Item Type",
  "patterns" : [
    "&lt;code&gt;[&amp;lt;number&amp;gt; [of]] [all/every] &amp;lt;alias&amp;gt; [of &amp;lt;enchantment&amp;gt; [&amp;lt;level&amp;gt;] [,/and &amp;lt;more enchantments...&amp;gt;]]&lt;/code&gt;",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "An item type is an alias, e.g. 'a pickaxe', 'all plants', etc., and can result in different items when added to an inventory, and unlike <a href='#itemstack'>items</a> they are well suited for checking whether an inventory contains a certain item or whether a certain item is of a certain type.\\nAn item type can also have one or more <a href='#enchantmenttype'>enchantments</a> with or without a specific level defined, and can optionally start with 'all' or 'every' to make this item type represent <i>all</i> types that the alias represents, including data ranges.",
  "examples" : "give 4 torches to the player\\nadd all slabs to the inventory of the block\\nplayer's tool is a diamond sword of sharpness\\nremove a pickaxes of fortune 4 from {stored items::*}\\nset {_item} to 10 of every upside-down stair\\nblock is dirt or farmland"
},
{
  "id" : "livingentity",
  "name" : "Living Entity",
  "patterns" : [
    "see &lt;a href='#entity'&gt;entity&lt;/a&gt;, but ignore inanimate objects",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A living <a href='#entity'>entity</a>, i.e. a mob or <a href='#player'>player</a>, not inanimate entities like <a href='#projectile'>projectiles</a> or dropped items.",
  "examples" : "spawn 5 powered creepers\\nshoot a zombie from the creeper"
},
{
  "id" : "location",
  "name" : "Location",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A location in a <a href='#world'>world</a>. Locations are world-specific and even store a <a href='#direction'>direction</a>, e.g. if you save a location and later teleport to it you will face the exact same direction you did when you saved the location.",
  "examples" : ""
},
{
  "id" : "metadataholder",
  "name" : "Metadata Holder",
  "patterns" : [
    
    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Something that can hold metadata (e.g. an entity or block)",
  "examples" : "set metadata value \"super cool\" of player to true"
},
{
  "id" : "money",
  "name" : "Money",
  "patterns" : [
    "&lt;code&gt;&amp;lt;number&amp;gt; $&lt;/code&gt; or &lt;code&gt;$ &amp;lt;number&amp;gt;&lt;/code&gt;, where '$' is your server's currency, e.g. '10 rupees' or '£5.00'",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "A certain amount of money. Please note that this differs from <a href='#number'>numbers</a> as it includes a currency symbol or name, but usually the two are interchangeable, e.g. you can both <code>add 100$ to the player's balance</code> and <code>add 100 to the player's balance</code>.",
  "examples" : "add 10£ to the player's account\\nremove Fr. 9.95 from the player's money\\nset the victim's money to 0\\nincrease the attacker's balance by the level of the victim * 100"
},
{
  "id" : "number",
  "name" : "Number",
  "patterns" : [
    "[-]###[.###]&lt;/code&gt; (any amount of digits; very large numbers will be truncated though)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A number, e.g. 2.5, 3, or -9812454.\\nPlease note that many expressions only need integers, i.e. will discard any frational parts of any numbers without producing an error.",
  "examples" : "set the player's health to 5.5\\nset {_temp} to 2*{_temp} - 2.5"
},
{
  "id" : "object",
  "name" : "Object",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The supertype of all types, meaning that if %object% is used in e.g. a condition it will accept all kinds of expressions.",
  "examples" : ""
},
{
  "id" : "offlineplayer",
  "name" : "Offlineplayer",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "",
  "description" : "A player that is possibly offline. See <a href='#player'>player</a> for more information. Please note that while all effects and conditions that require a player can be used with an offline player as well, they will not work if the player is not actually online.",
  "examples" : ""
},
{
  "id" : "player",
  "name" : "Player",
  "patterns" : [
    "",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A player. Depending on whether a player is online or offline several actions can be performed with them, though you won't get any errors when using effects that only work if the player is online (e.g. changing his inventory) on an offline player.\\nYou have two possibilities to use players as command arguments: &lt;player&gt; and &lt;offline player&gt;. The first requires that the player is online and also accepts only part of the name, while the latter doesn't require that the player is online, but the player's name has to be entered exactly.",
  "examples" : ""
},
{
  "id" : "potioneffecttype",
  "name" : "Potion Effect Type",
  "patterns" : [
    "null, speed, slowness, haste, mining fatigue, strength, instant health, instant damage, jump boost, nausea, regeneration, resistance, fire resistance, water breathing, invisibility, blindness, night vision, hunger, weakness, poison, wither, health boost, absorption, saturation, glowing, levitation, luck, bad luck",

    "pattern_end"
  ],
  "since" : "",
  "description" : "A potion effect type, e.g. 'strength' or 'swiftness'.",
  "examples" : "apply swiftness 5 to the player\\napply potion of speed 2 to the player for 60 seconds\\nremove invisibility from the victim"
},
{
  "id" : "projectile",
  "name" : "Projectile",
  "patterns" : [
    "arrow, fireball, snowball, thrown potion, etc.",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A projectile, e.g. an arrow, snowball or thrown potion.",
  "examples" : "projectile is a snowball\\nshoot an arrow at speed 5 from the player"
},
{
  "id" : "string",
  "name" : "Text",
  "patterns" : [
    "simple: &quot;...&quot;",
"quotes: &quot;...&quot;&quot;...&quot;",
"expressions: &quot;...%expression%...&quot;",
"percent signs: &quot;...%%...&quot;",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Text is simply text, i.e. a sequence of characters, which can optionally contain expressions which will be replaced with a meaningful representation (e.g. %player% will be replaced with the player's name).\\nBecause scripts are also text, you have to put text into double quotes to tell Skript which part of the line is an effect/expression and which part is the text.\\nPlease read the article on <a href='../strings/'>Texts and Variable Names</a> to learn more.",
  "examples" : "broadcast \"Hello World!\"\\nmessage \"Hello %player%\"\\nmessage \"The id of \"\"%type of tool%\"\" is %id of tool%.\""
},
{
  "id" : "time",
  "name" : "Time",
  "patterns" : [
    "&lt;code&gt;##:##&lt;/code&gt;",
"&lt;code&gt;##[:##][ ]am/pm&lt;/code&gt;",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A time is a point in a minecraft day's time (i.e. ranges from 0:00 to 23:59), which can vary per world.\\nSee <a href='#date'>date</a> and <a href='#timespan'>timespan</a> for the other time types of Skript.",
  "examples" : "at 20:00:\\n    time is 8 pm\\n    broadcast \"It's %time%\""
},
{
  "id" : "timeperiod",
  "name" : "Timeperiod",
  "patterns" : [
    "&lt;code&gt;##:## - ##:##&lt;/code&gt;",
"dusk/day/dawn/night",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A period of time between two <a href='#time'>times</a>. Mostly useful since you can use this to test for whether it's day, night, dusk or dawn in a specific world.\\nThis type might be removed in the future as you can use 'time of world is between x and y' as a replacement.",
  "examples" : "time in world is night"
},
{
  "id" : "timespan",
  "name" : "Timespan",
  "patterns" : [
    "&lt;code&gt;&amp;lt;number&amp;gt; [minecraft/mc/real/rl/irl] ticks/seconds/minutes/hours/days [[,/and] &amp;lt;more...&amp;gt;&lt;/code&gt;]",
"&lt;code&gt;[###:]##:##[.####]&lt;/code&gt; ([hours:]minutes:seconds[.milliseconds])",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A timespan is a difference of two different dates or times, e.g '10 minutes'. Timespans are always displayed as real life time, but can be defined as minecraft time, e.g. '5 minecraft days and 12 hours'.\\nSee <a href='#date'>date</a> and <a href='#time'>time</a> for the other time types of Skript.",
  "examples" : "every 5 minecraft days:\\n    wait a minecraft second and 5 ticks\\nevery 10 mc days and 12 hours:\\n    halt for 12.7 irl minutes, 12 hours and 120.5 seconds"
},
{
  "id" : "structuretype",
  "name" : "Tree Type",
  "patterns" : [
    "&lt;code&gt;[any] &amp;lt;general tree/mushroom type&amp;gt;&lt;/code&gt;, e.g. tree/any jungle tree/etc.",
"&lt;code&gt;&amp;lt;specific tree/mushroom species&amp;gt;&lt;/code&gt;, e.g. red mushroom/small jungle tree/big regular tree/etc.",

    "pattern_end"
  ],
  "since" : "",
  "description" : "A tree type represents a tree species or a huge mushroom species. These can be generated in a world with the <a href='../effects/#EffTree'>generate tree</a> effect.",
  "examples" : "grow any regular tree at the block\\ngrow a huge red mushroom above the block"
},
{
  "id" : "classinfo",
  "name" : "Type",
  "patterns" : [
    "See the type name patterns of all types - including this one",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Represents a type, e.g. number, object, item type, location, block, world, entity type, etc.\\nThis is mostly used for expressions like 'event-&lt;type&gt;', '&lt;type&gt;-argument', 'loop-&lt;type&gt;', etc., e.g. event-world, number-argument and loop-player.",
  "examples" : "{variable} is a number # check whether the variable contains a number, e.g. -1 or 5.5\\n{variable} is a type # check whether the variable contains a type, e.g. number or player\\n{variable} is an object # will always succeed if the variable is set as everything is an object, even types.\\ndisable PvP in the event-world\\nkill the loop-entity"
},
{
  "id" : "vector",
  "name" : "Vector",
  "patterns" : [
    "vector(x, y, z)",

    "pattern_end"
  ],
  "since" : "2.2-dev23",
  "description" : "Vector is a collection of numbers. In Minecraft, 3D vectors are used to express velocities of entities.",
  "examples" : ""
},
{
  "id" : "visualeffect",
  "name" : "Visual Effect",
  "patterns" : [
    "ender signal, mobspawner flames, potion break, smoke, hurt, sheep eating, wolf hearts, wolf shaking, wolf smoke, firework's spark, critical hit, magical critical hit, potion swirl, transparent potion swirl, spell, spell, witch spell, note, portal, flying glyph, flame, lava pop, footstep, water splash, smoke particle, huge explosion, large explosion, explosion, void fog, small smoke, cloud, coloured dust, snowball break, water drip, lava drip, snow shovel, slime, heart, angry villager, happy villager, large smoke, item crack, block break, block dust, totem, spit",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "A visible effect, e.g. particles.",
  "examples" : "show wolf hearts on the clicked wolf\\nplay mob spawner flames at the targeted block to the player"
},
{
  "id" : "weathertype",
  "name" : "Weather Type",
  "patterns" : [
    "clear/sun/sunny, rain/rainy/raining, and thunder/thundering/thunderstorm",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The weather types sunny, rainy, and thundering.",
  "examples" : "is raining\\nis sunny in the player's world\\nmessage \"It is %weather in the argument's world% in %world of the argument%\""
},
{
  "id" : "world",
  "name" : "World",
  "patterns" : [
    "&lt;code&gt;&quot;world_name&quot;&lt;/code&gt;, e.g. &quot;world&quot;",

    "pattern_end"
  ],
  "since" : "1.0, 2.2 (alternate syntax)",
  "description" : "One of the server's worlds. Worlds can be put into scripts by surrounding their name with double quotes, e.g. \"world_nether\", but this might not work reliably as <a href='#string'>text</a> uses the same syntax.",
  "examples" : "broadcast \"Hello!\" to the world \"world_nether\""
},

    {"end" : true}
  ],

  "conditions" : [
    {
  "id" : "CondCanHold",
  "name" : "Can Hold",
  "patterns" : [
    "%<a href='classes.html#inventory'>inventories</a>% (can hold|ha(s|ve) [enough] space (for|to hold)) %<a href='classes.html#itemtype'>item types</a>%",
"%<a href='classes.html#inventory'>inventories</a>% (can(no|')t hold|(ha(s|ve) not|ha(s|ve)n't|do[es]n't have) [enough] space (for|to hold)) %<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Tests whether a player or a chest can hold the given item.",
  "examples" : "block can hold 200 cobblestone\\nplayer has enough space for 64 feathers"
},
{
  "id" : "CondChance",
  "name" : "Chance",
  "patterns" : [
    "chance of %<a href='classes.html#number'>number</a>%[\\%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A condition that randomly succeeds or fails.\\nValid values are between 0% and 100%, or if the percent sign is omitted between 0 and 1.",
  "examples" : "chance of 50%:\\n    drop a diamond\\nchance of {var}% # {var} between 0 and 100\\nchance of {var} # {var} between 0 and 1"
},
{
  "id" : "CondCompare",
  "name" : "Comparison",
  "patterns" : [
    "[neither] %<a href='classes.html#object'>objects</a>% ((is|are)[((n't| not| neither)]) ((greater|more|higher|bigger|larger) than|above)|\\&gt;) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% ((is|are)[((n't| not| neither)]) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as)|\\&gt;=) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% ((is|are)[((n't| not| neither)]) ((less|smaller) than|below)|\\&lt;) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% ((is|are)[((n't| not| neither)]) (less|smaller|below) [than] or (equal to|the same as)|\\&lt;=) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% ((is|are) (not|neither)|isn't|aren't|!=) [equal to] %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (is|are|=) [(equal to|the same as)] %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (is|are) between %<a href='classes.html#object'>objects</a>% and %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (is not|are not|isn't|aren't) between %<a href='classes.html#object'>objects</a>% and %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was|were)[((n't| not| neither)]) ((greater|more|higher|bigger|larger) than|above) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was|were)[((n't| not| neither)]) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was|were)[((n't| not| neither)]) ((less|smaller) than|below) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was|were)[((n't| not| neither)]) (less|smaller|below) [than] or (equal to|the same as) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% ((was|were) (not|neither)|wasn't|weren't) [equal to] %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was|were) [(equal to|the same as)] %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was|were) between %<a href='classes.html#object'>objects</a>% and %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (was not|were not|wasn't|weren't) between %<a href='classes.html#object'>objects</a>% and %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (will be|(will (not|neither) be|won't be)) ((greater|more|higher|bigger|larger) than|above) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (will be|(will (not|neither) be|won't be)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (will be|(will (not|neither) be|won't be)) ((less|smaller) than|below) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (will be|(will (not|neither) be|won't be)) (less|smaller|below) [than] or (equal to|the same as) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% ((will (not|neither) be|won't be)|(isn't|aren't|is not|are not) (turning|changing) [in]to) [equal to] %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (will be [(equal to|the same as)]|(is|are) (turning|changing) [in]to) %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% will be between %<a href='classes.html#object'>objects</a>% and %<a href='classes.html#object'>objects</a>%",
"[neither] %<a href='classes.html#object'>objects</a>% (will not be|won't be) between %<a href='classes.html#object'>objects</a>% and %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A very general condition, it simply compares two values. Usually you can only compare for equality (e.g. block is/isn't of &lt;type&gt;), but some values can also be compared using greater than/less than. In that case you can also test for whether an object is between two others.\\nNote: This is the only element where not all patterns are shown. It has actually another two sets of similar patters, but with <code>(was|were)</code> or <code>will be</code> instead of <code>(is|are)</code> respectively, which check different <a href='expressions.html#ExprTimeState'>time states</a> of the first expression.",
  "examples" : "the clicked block is a stone slab or a double stone slab\\ntime in the player's world is greater than 8:00\\nthe creature is not an enderman or an ender dragon"
},
{
  "id" : "CondContains",
  "name" : "Contains",
  "patterns" : [
    "%<a href='classes.html#inventory'>inventories</a>% ha(s|ve) %<a href='classes.html#itemtype'>item types</a>% [in [(the[ir]|his|her|its)] inventory]",
"%<a href='classes.html#inventory'>inventories</a>/<a href='classes.html#string'>texts</a>/<a href='classes.html#object'>objects</a>% contain[s] %<a href='classes.html#itemtype'>item types</a>/<a href='classes.html#string'>texts</a>/<a href='classes.html#object'>objects</a>%",
"%<a href='classes.html#inventory'>inventories</a>% do[es](n't| not) have %<a href='classes.html#itemtype'>item types</a>% [in [(the[ir]|his|her|its)] inventory]",
"%<a href='classes.html#inventory'>inventories</a>/<a href='classes.html#string'>texts</a>/<a href='classes.html#object'>objects</a>% do[es](n't| not) contain %<a href='classes.html#itemtype'>item types</a>/<a href='classes.html#string'>texts</a>/<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Checks whether an inventory contains the given item, a text contains another piece of text, or a list of objects (e.g. a {list variable::*}) contains another object.",
  "examples" : "block contains 20 cobblestone\\nplayer has 4 flint and 2 iron ingots"
},
{
  "id" : "CondDamageCause",
  "name" : "Damage Cause",
  "patterns" : [
    "[the] damage (was|is|has)[(n('|o)]t) [been] (caused|done|made) by %<a href='classes.html#damagecause'>damage cause</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Tests what kind of damage caused a <a href='events.html#damage'>damage event</a>. Refer to the <a href='classes.html#damagecause'>Damage Cause</a> type for a list of all possible causes.",
  "examples" : "# make players use their potions of fire resistance whenever they take any kind of fire damage\\non damage:\\n    damage was caused by lava, fire or burning\\n    victim is a player\\n    victim has a potion of fire resistance\\n    cancel event\\n    apply fire resistance to the victim for 30 seconds\\n    remove 1 potion of fire resistance from the victim\\n# prevent mobs from dropping items under certain circumstances\\non death;\\n    entity is not a player\\n    damage wasn't caused by a block explosion, an attack, a projectile, a potion, fire, burning, thorns or poison\\n    clear drops"
},
{
  "id" : "CondCancelled",
  "name" : "Event Cancelled",
  "patterns" : [
    "[the] event is cancel[l]ed",
"[the] event (is not|isn't) cancel[l]ed",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks whether or not the event is cancelled",
  "examples" : "on click:\\n    if event is cancelled:\\n        broadcast \"no clicks allowed!\""
},
{
  "id" : "CondIsSet",
  "name" : "Exists/Is Set",
  "patterns" : [
    "%~<a href='classes.html#object'>objects</a>% (exist[s]|(is|are) set)",
"%~<a href='classes.html#object'>objects</a>% (do[es](n't| not) exist|(is|are)(n't| not) set)",

    "pattern_end"
  ],
  "since" : "1.2",
  "description" : "Checks whether a given expression or variable is set.",
  "examples" : "{teams::%player's uuid%::preferred-team} is not set\\non damage:\\n    projectile exists\\n    broadcast \"%attacker% used a %projectile% to attack %victim%!\""
},
{
  "id" : "CondHasMetadata",
  "name" : "Has Metadata",
  "patterns" : [
    "%<a href='classes.html#metadataholder'>types.metadataholder</a>% (has|have) metadata [(value|tag)[s]] %<a href='classes.html#string'>texts</a>%",
"%<a href='classes.html#metadataholder'>types.metadataholder</a>% (doesn't|does not|do not|don't) have metadata [(value|tag)[s]] %<a href='classes.html#string'>texts</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks whether a metadata holder has a metadata tag.",
  "examples" : "if player has metadata value \"healer\":"
},
{
  "id" : "CondPermission",
  "name" : "Has Permission",
  "patterns" : [
    "[%<a href='classes.html#commandsender'>players/console</a>%] (do[es]n't|don't|do[es] not) have [the] permission[s] %<a href='classes.html#string'>texts</a>%",
"[%<a href='classes.html#commandsender'>players/console</a>%] ha(s|ve) [the] permission[s] %<a href='classes.html#string'>texts</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Test whether a player has a certain permission.",
  "examples" : "player has permission \"skript.tree\"\\nvictim has the permission \"admin\":\\n    send \"You're attacking an admin!\" to attacker"
},
{
  "id" : "CondPlayedBefore",
  "name" : "Has Played Before",
  "patterns" : [
    "%<a href='classes.html#offlineplayer'>offline player</a>% [(has|did)] [already] play[ed] [on (this|the) server] (before|already)",
"%<a href='classes.html#offlineplayer'>offline player</a>% (has not|hasn't|did not|didn't) [(already|yet)] play[ed] [on (this|the) server] (before|already|yet)",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Checks whether a player has played on this server before. You can also use <a href='events.html#first_join'>on first join</a> if you want to make triggers for new players.",
  "examples" : "player has played on this server before\\nplayer hasn't played before"
},
{
  "id" : "CondIsAlive",
  "name" : "Is Alive",
  "patterns" : [
    "%<a href='classes.html#livingentity'>living entities</a>% (is|are) (alive|dead)",
"%<a href='classes.html#livingentity'>living entities</a>% (isn't|is not|aren't|are not) (alive|dead)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Checks whether an entity is alive. This is mostly useful to check whether an entity stored in a variable does still exist.",
  "examples" : "{villager-buddy::%player's uuid%} is dead"
},
{
  "id" : "CondIsBanned",
  "name" : "Is Banned",
  "patterns" : [
    "%<a href='classes.html#offlineplayer'>offline players</a>/<a href='classes.html#string'>texts</a>% (is|are) banned",
"%<a href='classes.html#player'>players</a>/<a href='classes.html#string'>texts</a>% [(is|are) IP(-| )]banned",
"%<a href='classes.html#offlineplayer'>offline players</a>/<a href='classes.html#string'>texts</a>% (isn't|is not|aren't|are not) banned",
"%<a href='classes.html#player'>players</a>/<a href='classes.html#string'>texts</a>% [(isn't|is not|aren't|are not) IP(-| )]banned",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Checks whether a player or IP is banned.",
  "examples" : "player is banned\\nvictim is not IP-banned\\n\"127.0.0.1\" is banned"
},
{
  "id" : "CondIsBlocking",
  "name" : "Is Blocking",
  "patterns" : [
    "%<a href='classes.html#player'>players</a>% (is|are) (blocking|defending)",
"%<a href='classes.html#player'>players</a>% (isn't|is not|aren't|are not) (blocking|defending)",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Checks whether a player is blocking with his shield.",
  "examples" : "on damage of player:\\n    victim is blocking\\n    damage attacker by 0.5 hearts"
},
{
  "id" : "CondIsBurning",
  "name" : "Is Burning",
  "patterns" : [
    "%<a href='classes.html#entity'>entities</a>% (is|are) (burning|ignited|on fire)",
"%<a href='classes.html#entity'>entities</a>% (isn't|is not|aren't|are not) (burning|ignited|on fire)",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Checks whether an entity is on fire, e.g. a zombie due to being in sunlight, or any entity after falling into lava.",
  "examples" : "# increased attack against burning targets\\nvictim is burning:\\n    increase damage by 2"
},
{
  "id" : "CondIsEdible",
  "name" : "Is Edible",
  "patterns" : [
    "%<a href='classes.html#itemstack'>item stacks</a>% (is|are) edible",
"%<a href='classes.html#itemstack'>item stacks</a>% (isn't|is not|aren't|are not) edible",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks whether an item is edible.",
  "examples" : "steak is edible\\nplayer's tool is edible"
},
{
  "id" : "CondIsEmpty",
  "name" : "Is Empty",
  "patterns" : [
    "%<a href='classes.html#inventory'>inventories</a>/<a href='classes.html#slot'>slots</a>/<a href='classes.html#string'>texts</a>% (is|are) empty",
"%<a href='classes.html#inventory'>inventories</a>/<a href='classes.html#slot'>slots</a>/<a href='classes.html#string'>texts</a>% (isn't|is not|aren't|are not) empty",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Checks whether an inventory, an inventory slot, or a text is empty.",
  "examples" : "player's inventory is empty"
},
{
  "id" : "CondIsEnchanted",
  "name" : "Is Enchanted",
  "patterns" : [
    "%<a href='classes.html#itemtype'>item types</a>% (is|are) enchanted [with %<a href='classes.html#enchantmenttype'>enchantment type</a>%]",
"%<a href='classes.html#itemtype'>item types</a>% (isn't|is not|aren't|are not) enchanted [with %<a href='classes.html#enchantmenttype'>enchantment type</a>%]",

    "pattern_end"
  ],
  "since" : "1.4.6",
  "description" : "Checks whether an item is enchanted.",
  "examples" : "tool of the player is enchanted with efficiency 2\\nhelm, chestplate, leggings or boots are enchanted"
},
{
  "id" : "CondIsFlammable",
  "name" : "Is Flammable",
  "patterns" : [
    "%<a href='classes.html#itemstack'>item stacks</a>% (is|are) flammable",
"%<a href='classes.html#itemstack'>item stacks</a>% (isn't|is not|aren't|are not) flammable",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks whether an item is flammable.",
  "examples" : "wood is flammable\\nplayer's tool is flammable"
},
{
  "id" : "CondIsFlying",
  "name" : "Is Flying",
  "patterns" : [
    "%<a href='classes.html#player'>players</a>% (is|are) flying",
"%<a href='classes.html#player'>players</a>% (isn't|is not|aren't|are not) flying",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Checks whether a player is flying.",
  "examples" : "player is not flying"
},
{
  "id" : "CondItemInHand",
  "name" : "Is Holding",
  "patterns" : [
    "[%<a href='classes.html#livingentity'>living entities</a>%] ha(s|ve) %<a href='classes.html#itemtype'>item types</a>% in [main] hand",
"[%<a href='classes.html#livingentity'>living entities</a>%] (is|are) holding %<a href='classes.html#itemtype'>item types</a>% [in main hand]",
"[%<a href='classes.html#livingentity'>living entities</a>%] ha(s|ve) %<a href='classes.html#itemtype'>item types</a>% in off[(-| )]hand",
"[%<a href='classes.html#livingentity'>living entities</a>%] (is|are) holding %<a href='classes.html#itemtype'>item types</a>% in off[(-| )]hand",
"[%<a href='classes.html#livingentity'>living entities</a>%] (ha(s|ve) not|do[es]n't have) %<a href='classes.html#itemtype'>item types</a>% in [main] hand",
"[%<a href='classes.html#livingentity'>living entities</a>%] (is not|isn't) holding %<a href='classes.html#itemtype'>item types</a>% [in main hand]",
"[%<a href='classes.html#livingentity'>living entities</a>%] (ha(s|ve) not|do[es]n't have) %<a href='classes.html#itemtype'>item types</a>% in off[(-| )]hand",
"[%<a href='classes.html#livingentity'>living entities</a>%] (is not|isn't) holding %<a href='classes.html#itemtype'>item types</a>% in off[(-| )]hand",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Checks whether a player is holding a specific item. Cannot be used with endermen, use 'entity is [not] an enderman holding &lt;item type&gt;' instead.",
  "examples" : "player is holding a stick\\nvictim isn't holding a sword of sharpness"
},
{
  "id" : "CondIsOnline",
  "name" : "Is Online",
  "patterns" : [
    "%<a href='classes.html#offlineplayer'>offline players</a>% ((is|are) online|(is not|isn't|are not|aren't) offline)",
"%<a href='classes.html#offlineplayer'>offline players</a>% ((is|are) offline|(is not|isn't|are not|aren't) online)",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Checks whether a player is online.",
  "examples" : "player is online\\nplayer-argument is offline"
},
{
  "id" : "CondIsPoisoned",
  "name" : "Is Poisoned",
  "patterns" : [
    "%<a href='classes.html#livingentity'>living entities</a>% (is|are) poisoned",
"%<a href='classes.html#livingentity'>living entities</a>% (isn't|is not|aren't|are not) poisoned",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Checks whether an entity is poisoned.",
  "examples" : "player is poisoned:\\n    cure the player from poison\\n    message \"You have been cured!\""
},
{
  "id" : "CondIsRiding",
  "name" : "Is Riding",
  "patterns" : [
    "%<a href='classes.html#entity'>entities</a>% (is|are) riding [%<a href='classes.html#entitydata'>entity types</a>%]",
"%<a href='classes.html#entity'>entities</a>% (isn't|is not|aren't|are not) riding [%<a href='classes.html#entitydata'>entity types</a>%]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Tests whether an entity is riding another or is in a vehicle.",
  "examples" : "player is riding a saddled pig"
},
{
  "id" : "CondScriptLoaded",
  "name" : "Is Script Loaded",
  "patterns" : [
    "script[s] [%<a href='classes.html#string'>texts</a>%] (is|are) loaded",
"script[s] [%<a href='classes.html#string'>texts</a>%] (isn't|is not|aren't|are not) loaded",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Check if the current script or another script, is current loaded.",
  "examples" : "script is loaded\\nscript \"example.sk\" is loaded"
},
{
  "id" : "CondIsSleeping",
  "name" : "Is Sleeping",
  "patterns" : [
    "%<a href='classes.html#player'>players</a>% (is|are) sleeping",
"%<a href='classes.html#player'>players</a>% (isn't|is not|aren't|are not) sleeping",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Checks whether a player is sleeping.",
  "examples" : "# cut your enemies' throats in their sleep >=)\\non attack:\\n    attacker is holding a sword\\n    victim is sleeping\\n    increase the damage by 1000"
},
{
  "id" : "CondIsSneaking",
  "name" : "Is Sneaking",
  "patterns" : [
    "%<a href='classes.html#player'>players</a>% (is|are) sneaking",
"%<a href='classes.html#player'>players</a>% (isn't|is not|aren't|are not) sneaking",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Checks whether a player is sneaking.",
  "examples" : "# prevent mobs from seeing sneaking players if they are at least 4 meters apart\\non target:\\n    target is sneaking\\n    distance of target and the entity is bigger than 4\\n    cancel the event"
},
{
  "id" : "CondIsSolid",
  "name" : "Is Solid",
  "patterns" : [
    "%<a href='classes.html#itemstack'>item stacks</a>% (is|are) solid",
"%<a href='classes.html#itemstack'>item stacks</a>% (isn't|is not|aren't|are not) solid",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks whether an item is solid.",
  "examples" : "grass block is solid\\nplayer's tool isn't solid"
},
{
  "id" : "CondIsSprinting",
  "name" : "Is Sprinting",
  "patterns" : [
    "%<a href='classes.html#player'>players</a>% (is|are) sprinting",
"%<a href='classes.html#player'>players</a>% (isn't|is not|aren't|are not) sprinting",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Checks whether a player is sprinting.",
  "examples" : "player is not sprinting"
},
{
  "id" : "CondIsTransparent",
  "name" : "Is Transparent",
  "patterns" : [
    "%<a href='classes.html#itemstack'>item stacks</a>% (is|are) transparent",
"%<a href='classes.html#itemstack'>item stacks</a>% (isn't|is not|aren't|are not) transparent",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks whether an item is transparent.",
  "examples" : "glass is transparent\\nplayer's tool is transparent."
},
{
  "id" : "CondIsWearing",
  "name" : "Is Wearing",
  "patterns" : [
    "%<a href='classes.html#livingentity'>living entities</a>% (is|are) wearing %<a href='classes.html#itemtype'>item types</a>%",
"%<a href='classes.html#livingentity'>living entities</a>% (isn't|is not|aren't|are not) wearing %<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Checks whether a player is wearing some armour.",
  "examples" : "player is wearing an iron chestplate and iron leggings\\nplayer is wearing all diamond armour"
},
{
  "id" : "CondIsInWorld",
  "name" : "Is in World",
  "patterns" : [
    "%<a href='classes.html#entity'>entities</a>% (is|are) in [[the] world[s]] %<a href='classes.html#world'>worlds</a>%",
"%<a href='classes.html#entity'>entities</a>% (is not|isn't|are not|aren't) in [[the] world[s]] %<a href='classes.html#world'>worlds</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Checks whether an entity is in a specific world.",
  "examples" : "player is in \"world\"\\nargument isn't in world \"world_nether\"\\nthe player is in the world of the victim"
},
{
  "id" : "CondIsOfType",
  "name" : "Is of Type",
  "patterns" : [
    "%<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#entity'>entities</a>% (is|are) of type[s] %<a href='classes.html#itemtype'>item types</a>/<a href='classes.html#entitydata'>entity types</a>%",
"%<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#entity'>entities</a>% (isn't|is not|aren't|are not) of type[s] %<a href='classes.html#itemtype'>item types</a>/<a href='classes.html#entitydata'>entity types</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Checks whether an item of entity is of the given type. This is mostly useful for variables, as you can use the general 'is' condition otherwise (e.g. 'victim is a creeper').",
  "examples" : "tool is of type {*selected type}\\nvictim is of type {villager type}"
},
{
  "id" : "CondIsOnGround",
  "name" : "Is on Ground",
  "patterns" : [
    "%<a href='classes.html#entity'>entities</a>% (is|are) on ground",
"%<a href='classes.html#entity'>entities</a>% (isn't|is not|aren't|are not) on ground",

    "pattern_end"
  ],
  "since" : "2.2-dev26",
  "description" : "Checks whether an entity is on ground.",
  "examples" : "player is not on ground"
},
{
  "id" : "CondPvP",
  "name" : "PvP",
  "patterns" : [
    "(is PvP|PvP is) enabled [in %<a href='classes.html#world'>worlds</a>%]",
"(is PvP|PvP is) disabled [in %<a href='classes.html#world'>worlds</a>%]",

    "pattern_end"
  ],
  "since" : "1.3.4",
  "description" : "Checks the PvP state of a world.",
  "examples" : "PvP is enabled\\nPvP is disabled in \"world\""
},
{
  "id" : "CondStartsWith",
  "name" : "Starts/Ends With",
  "patterns" : [
    "%<a href='classes.html#string'>texts</a>% (start|end)[s] with %<a href='classes.html#string'>text</a>%",
"%<a href='classes.html#string'>texts</a>% do[es](n't| not) (start|end) with %<a href='classes.html#string'>text</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Checks if a text starts or ends with another.",
  "examples" : "if the argument starts with \"test\":\\n    send \"Stop!\""
},
{
  "id" : "CondDate",
  "name" : "Time",
  "patterns" : [
    "%<a href='classes.html#date'>date</a>% (was|were)( more|(n't| not) less) than %<a href='classes.html#timespan'>time span</a>% [ago]",
"%<a href='classes.html#date'>date</a>% (was|were)((n't| not) more| less) than %<a href='classes.html#timespan'>time span</a>% [ago]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Tests whether a given <a href='classes.html#date'>real time</a> was more or less than some <a href='classes.html#timespan'>time span</a> ago.",
  "examples" : "command /command-with-cooldown:\\n    trigger:\\n        {command::%player's uuid%::last-usage} was less than a minute ago:\\n            message \"Please wait a minute between uses of this command.\"\\n            stop\\n        set {command::%player's uuid%::last-usage} to now\\n        # ... actual command trigger here ..."
},
{
  "id" : "CondWeather",
  "name" : "Weather",
  "patterns" : [
    "is %<a href='classes.html#weathertype'>weather types</a>% [in %<a href='classes.html#world'>worlds</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Checks whether the weather in a world is of a specific type.\\n<i>I welcome any ideas how to write this condition differently.</i>",
  "examples" : "is thundering\\nis raining in \"world\" or \"world2\""
},

    {"end" : true}
  ],

  "effects" : [
    {
  "id" : "EffBan",
  "name" : "Ban",
  "patterns" : [
    "ban %<a href='classes.html#string'>texts</a>/<a href='classes.html#offlineplayer'>offline players</a>% [(by reason of|because [of]|on account of|due to) %<a href='classes.html#string'>text</a>%]",
"unban %<a href='classes.html#string'>texts</a>/<a href='classes.html#offlineplayer'>offline players</a>%",
"ban %<a href='classes.html#player'>players</a>% by IP [(by reason of|because [of]|on account of|due to) %<a href='classes.html#string'>text</a>%]",
"unban %<a href='classes.html#player'>players</a>% by IP",
"IP(-| )ban %<a href='classes.html#player'>players</a>% [(by reason of|because [of]|on account of|due to) %<a href='classes.html#string'>text</a>%]",
"(IP(-| )unban|un[-]IP[-]ban) %<a href='classes.html#player'>players</a>%",

    "pattern_end"
  ],
  "since" : "1.4, 2.1.1 (ban reason)",
  "description" : "Bans/unbans a player or IP.\\nStarting with Skript 2.1.1 and Bukkit 1.7.2 R0.4, one can also ban players with a reason.",
  "examples" : "unban player\\nban \"127.0.0.1\"\\nIP-ban the player because \"he is an idiot\""
},
{
  "id" : "EffBroadcast",
  "name" : "Broadcast",
  "patterns" : [
    "broadcast %<a href='classes.html#string'>texts</a>% [(to|in) %<a href='classes.html#world'>worlds</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Broadcasts a message to the server.",
  "examples" : "broadcast \"Welcome %player% to the server!\"\\nbroadcast \"Woah! It's a message!\""
},
{
  "id" : "EffCancelCooldown",
  "name" : "Cancel Command Cooldown",
  "patterns" : [
    "(cancel|ignore) [the] [current] [command] cooldown",
"un(cancel|ignore) [the] [current] [command] cooldown",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Only usable in command events. Makes it so the current command usage isn't counted towards the cooldown.",
  "examples" : "command /nick <text>:\\n    executable by: players\\n    cooldown: 10 seconds\\n    trigger:\\n        if length of arg-1 is more than 16:\\n            # Makes it so that invalid arguments don't make you wait for the cooldown again\\n            cancel the cooldown\\n            send \"Your nickname may be at most 16 characters.\"\\n            stop\\n        set the player's display name to arg-1"
},
{
  "id" : "EffCancelEvent",
  "name" : "Cancel Event",
  "patterns" : [
    "cancel [the] event",
"uncancel [the] event",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Cancels the event (e.g. prevent blocks from being placed, or damage being taken).",
  "examples" : "on damage:\\n    victim is a player\\n    victim has the permission \"skript.god\"\\n    cancel the event"
},
{
  "id" : "EffChange",
  "name" : "Change: Set/Add/Remove/Delete/Reset",
  "patterns" : [
    "(add|give) %<a href='classes.html#object'>objects</a>% to %~<a href='classes.html#object'>objects</a>%",
"increase %~<a href='classes.html#object'>objects</a>% by %<a href='classes.html#object'>objects</a>%",
"give %~<a href='classes.html#object'>objects</a>% %<a href='classes.html#object'>objects</a>%",
"set %~<a href='classes.html#object'>objects</a>% to %<a href='classes.html#object'>objects</a>%",
"remove (all|every) %<a href='classes.html#object'>objects</a>% from %~<a href='classes.html#object'>objects</a>%",
"(remove|subtract) %<a href='classes.html#object'>objects</a>% from %~<a href='classes.html#object'>objects</a>%",
"reduce %~<a href='classes.html#object'>objects</a>% by %<a href='classes.html#object'>objects</a>%",
"(delete|clear) %~<a href='classes.html#object'>objects</a>%",
"reset %~<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "1.0 (set, add, remove, delete), 2.0 (remove all)",
  "description" : "A very general effect that can change many <a href='../expressions'>expressions</a>. Many expressions can only be set and/or deleted, while some can have things added to or removed from them.",
  "examples" : "# set:\\nSet the player's display name to \"<red>%name of player%\"\\nset the block above the victim to lava\\n# add:\\nadd 2 to the player's health # preferably use '<a href='#heal'>heal</a>' for this\\nadd argument to {blacklist::*}\\ngive a diamond pickaxe of efficiency 5 to the player\\nincrease the data value of the clicked block by 1\\n# remove:\\nremove 2 pickaxes from the victim\\nsubtract 2.5 from {points.%player%}\\n# remove all:\\nremove every iron tool from the player\\nremove all minecarts from {entitylist::*}\\n# delete:\\ndelete the block below the player\\nclear drops\\ndelete {variable}\\n# reset:\\nreset walk speed of player\\nreset chunk at the targeted block"
},
{
  "id" : "EffColorArmor",
  "name" : "Colour Items",
  "patterns" : [
    "(dye|colo[u]r|paint) %<a href='classes.html#slot'>slots</a>/<a href='classes.html#itemstack'>item stack</a>% %<a href='classes.html#color'>color</a>%",
"(dye|colo[u]r|paint) %<a href='classes.html#slot'>slots</a>/<a href='classes.html#itemstack'>item stack</a>% \\(%<a href='classes.html#number'>number</a>%, %<a href='classes.html#number'>number</a>%, %<a href='classes.html#number'>number</a>%\\)",

    "pattern_end"
  ],
  "since" : "2.0, 2.2-dev26 (maps and potions)",
  "description" : "Colours items in a given <a href='classes.html#color'>colour</a>. You can also use RGB codes if you feel limited with the 16 default colours. RGB codes are three numbers from 0 to 255 in the order <code>(red, green, blue)</code>, where <code>(0,0,0)</code> is black and <code>(255,255,255)</code> is white. Armor is colourable for all Minecraft versions. With Minecraft 1.11 or newer you can also colour potions and maps. Note that the colours might not look exactly how you'd expect.",
  "examples" : "dye player's helmet blue\\ncolour the player's tool red"
},
{
  "id" : "EffCommand",
  "name" : "Command",
  "patterns" : [
    "[execute] [the] command %<a href='classes.html#string'>texts</a>% [by %<a href='classes.html#commandsender'>players/console</a>%]",
"[execute] [the] %<a href='classes.html#commandsender'>players/console</a>% command %<a href='classes.html#string'>texts</a>%",
"(let|make) %<a href='classes.html#commandsender'>players/console</a>% execute [[the] command] %<a href='classes.html#string'>texts</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Executes a command. This can be useful to use other plugins in triggers.",
  "examples" : "make player execute command \"/suicide\"\\nexecute console command \"/say Hello everyone!\""
},
{
  "id" : "EffHealth",
  "name" : "Damage/Heal/Repair",
  "patterns" : [
    "damage %<a href='classes.html#slot'>slots</a>/<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#itemstack'>item stack</a>% by %<a href='classes.html#number'>number</a>% [heart[s]][ with fake cause %<a href='classes.html#damagecause'>damage cause</a>%]",
"heal %<a href='classes.html#livingentity'>living entities</a>% [by %<a href='classes.html#number'>number</a>% [heart[s]]]",
"repair %<a href='classes.html#slot'>slots</a>/<a href='classes.html#itemstack'>item stack</a>% [by %<a href='classes.html#number'>number</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Damage/Heal/Repair an entity, or item stack.",
  "examples" : "damage player by 5 hearts\\nheal the player\\nrepair tool of player"
},
{
  "id" : "Delay",
  "name" : "Delay",
  "patterns" : [
    "(wait|halt) [for] %<a href='classes.html#timespan'>time span</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Delays the script's execution by a given timespan. Please note that delays are not persistent, e.g. trying to create a tempban script with <code>ban player → wait 7 days → unban player</code> will not work if you restart your server anytime within these 7 days. You also have to be careful even when using small delays!",
  "examples" : "wait 2 minutes\\nhalt for 5 minecraft hours\\nwait a tick"
},
{
  "id" : "EffDrop",
  "name" : "Drop",
  "patterns" : [
    "drop %<a href='classes.html#itemtype'>item types</a>/<a href='classes.html#experience'>experience point</a>% [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",
"drop %<a href='classes.html#itemtype'>item types</a>/<a href='classes.html#experience'>experience point</a>% [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%] without velocity",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Drops one or more items.",
  "examples" : "on death of creeper:\\n    drop 1 TNT"
},
{
  "id" : "EffEnchant",
  "name" : "Enchant/Disenchant",
  "patterns" : [
    "enchant %~<a href='classes.html#itemstack'>item stack</a>% with %<a href='classes.html#enchantmenttype'>enchantment types</a>%",
"disenchant %~<a href='classes.html#itemstack'>item stack</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Enchant or disenchant an existing item",
  "examples" : "enchant the player's tool with sharpness 5\\ndisenchant the player's tool"
},
{
  "id" : "EffEquip",
  "name" : "Equip",
  "patterns" : [
    "equip [%<a href='classes.html#livingentity'>living entity</a>%] with %<a href='classes.html#itemtype'>item types</a>%",
"make %<a href='classes.html#livingentity'>living entity</a>% wear %<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Equips a player with some given armor. This will replace any armor that the player is wearing.",
  "examples" : "equip player with diamond helmet\\nequip player with all diamond armor"
},
{
  "id" : "EffExit",
  "name" : "Exit",
  "patterns" : [
    "(exit|stop) [trigger]",
"(exit|stop) [(1|a|the|this)] (section|loop|conditional)",
"(exit|stop) &lt;\\d+&gt; (section|loop|conditional)s",
"(exit|stop) all (section|loop|conditional)s",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Exits a given amount of loops and conditionals, or the entire trigger.",
  "examples" : "if player has any ore:\\n    stop\\nmessage \"%player% has no ores!\"\\nloop blocks above the player:\\n    loop-block is not air:\\n        exit 2 sections\\n    set loop-block to water"
},
{
  "id" : "EffExplosion",
  "name" : "Explosion",
  "patterns" : [
    "[(create|make)] [an] explosion (of|with) (force|strength|power) %<a href='classes.html#number'>number</a>% [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",
"[(create|make)] [a] safe explosion (of|with) (force|strength|power) %<a href='classes.html#number'>number</a>% [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",
"[(create|make)] [a] fake explosion [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",
"[(create|make)] [an] explosion[ ]effect [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Creates an explosion of a given force. The Minecraft Wiki has an <a href='http://www.minecraftwiki.net/wiki/Explosion'>article on explosions</a> which lists the explosion forces of TNT, creepers, etc.\\nHint: use a force of 0 to create a fake explosion that does no damage whatsoever, or use the explosion effect introduced in Skript 2.0.\\nStarting with Bukkit 1.4.5 and Skript 2.0 you can use safe explosions which will damage entities but won't destroy any blocks.",
  "examples" : "create an explosion of force 10 at the player\\ncreate an explosion of force 0 at the victim"
},
{
  "id" : "EffFeed",
  "name" : "Feed",
  "patterns" : [
    "feed [the] %<a href='classes.html#player'>players</a>% [by %<a href='classes.html#number'>number</a>% [beef[s]]]",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Feeds the specified players.",
  "examples" : "feed all players\\nfeed the player by 5 beefs"
},
{
  "id" : "EffRespawn",
  "name" : "Force Respawn",
  "patterns" : [
    "force %<a href='classes.html#player'>players</a>% to respawn",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Forces player(s) to respawn if they are dead. If this is called without delay from death event, one tick is waited before respawn attempt.",
  "examples" : "on death of player:\\n    force event-player to respawn"
},
{
  "id" : "EffIgnite",
  "name" : "Ignite/Extinguish",
  "patterns" : [
    "(ignite|set fire to) %<a href='classes.html#entity'>entities</a>% [for %<a href='classes.html#timespan'>time span</a>%]",
"(set|light) %<a href='classes.html#entity'>entities</a>% on fire [for %<a href='classes.html#timespan'>time span</a>%]",
"extinguish %<a href='classes.html#entity'>entities</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Lights entities on fire or extinguishes them.",
  "examples" : "ignite the player\\nextinguish the player"
},
{
  "id" : "EffKick",
  "name" : "Kick",
  "patterns" : [
    "kick %<a href='classes.html#player'>players</a>% [(by reason of|because [of]|on account of|due to) %<a href='classes.html#string'>text</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Kicks a player from the server.",
  "examples" : "on place of TNT, lava, or obsidian:\\n    kick the player due to \"You may not place %block%!\"\\n    cancel the event"
},
{
  "id" : "EffKill",
  "name" : "Kill",
  "patterns" : [
    "kill %<a href='classes.html#entity'>entities</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Kills an entity.\\nNote: This effect does not set the entitie's health to 0 (which causes issues), but damages the entity by 100 times its maximum health.",
  "examples" : "kill the player\\nkill all creepers in the player's world\\nkill all endermen, witches and bats"
},
{
  "id" : "EffLightning",
  "name" : "Lightning",
  "patterns" : [
    "(create|strike) lightning[[ ]effect] %<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Strike lightning at a given location. Can use 'ligning effect' to create a lightning that does not harm entities or start fires.",
  "examples" : "strike lightning at the player\\nstrike lightning effect at the victim"
},
{
  "id" : "EffLog",
  "name" : "Log",
  "patterns" : [
    "log %<a href='classes.html#string'>texts</a>% [(to|in) [file[s]] %<a href='classes.html#string'>texts</a>%]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Writes text into a .log file. Skript will write these files to /plugins/Skript/logs.\\nNB: Using 'server.log' as the log file will write to the default server log. Omitting the log file altogether will log the message as '[Skript] [&lt;script&gt;.sk] &lt;message&gt;' in the server log.",
  "examples" : "on place of TNT:\\n    log \"%player% placed TNT in %world% at %location of block%\" to \"tnt/placement.log\""
},
{
  "id" : "EffScriptOptionLoops",
  "name" : "Loop Version",
  "patterns" : [
    "use[s] (old|new|2.1.2|2.2) loops",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (2.2)",
  "description" : "Changes loops to emulate given Skript version's behaviour.",
  "examples" : "use old loops\\nuse new loops"
},
{
  "id" : "EffMakeFly",
  "name" : "Make Fly",
  "patterns" : [
    "force %<a href='classes.html#player'>players</a>% to [(stop|start)] fly[ing]",
"make %<a href='classes.html#player'>players</a>% (stop|start) flying",
"make %<a href='classes.html#player'>players</a>% fly",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Forces a player to start/stop flying.",
  "examples" : "make player fly\\nforce all players to stop flying"
},
{
  "id" : "EffMessage",
  "name" : "Message",
  "patterns" : [
    "(message|send [message[s]]) %<a href='classes.html#string'>texts</a>% [to %<a href='classes.html#commandsender'>players/console</a>%]",

    "pattern_end"
  ],
  "since" : "1.0, 2.2-dev26 (advanced features)",
  "description" : "Sends a message to the given player.",
  "examples" : "message \"A wild %player% appeared!\"\\nmessage \"This message is a distraction. Mwahaha!\"\\nsend \"Your kill streak is %{kill streak.%player%}%.\" to player\\nif the targeted entity exists:\\n    message \"You're currently looking at a %type of the targeted entity%!\""
},
{
  "id" : "EffOpenInventory",
  "name" : "Open/Close Inventory",
  "patterns" : [
    "[(open|show) (((crafting [table]|workbench)|chest|anvil) (view|window|inventory)]|%<a href='classes.html#inventory'>inventory</a>%) (to|for) %<a href='classes.html#player'>players</a>%",
"close [the] inventory [view] (to|of|for) %<a href='classes.html#player'>players</a>%",
"close %<a href='classes.html#player'>players</a>%'[s] inventory [view]",

    "pattern_end"
  ],
  "since" : "2.0, 2.1.1 (closing), 2.2-Fixes-V10 (anvil)",
  "description" : "Opens an inventory to a player. The player can then access and modify the inventory as if it was a chest that he just opened.\\nPlease note that currently 'show' and 'open' have the same effect, but 'show' will eventually show an unmodifiable view of the inventory in the future.",
  "examples" : "show the victim's inventory to the player\\nopen the player's inventory for the player"
},
{
  "id" : "EffVisualEffect",
  "name" : "Play Effect",
  "patterns" : [
    "(play|show) %<a href='classes.html#visualeffect'>visual effects</a>% (on|%<a href='classes.html#direction'>directions</a>%) %<a href='classes.html#entity'>entities</a>/<a href='classes.html#location'>locations</a>% [(to %<a href='classes.html#player'>players</a>%|in (radius|range) of %<a href='classes.html#number'>number</a>%)]",
"(play|show) %<a href='classes.html#number'>number</a>% %<a href='classes.html#visualeffect'>visual effects</a>% (on|%<a href='classes.html#direction'>directions</a>%) %<a href='classes.html#location'>locations</a>% [(to %<a href='classes.html#player'>players</a>%|in (radius|range) of %<a href='classes.html#number'>number</a>%)]",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "Plays a <a href='../classes/#visualeffect'>visual effect</a> at a given location or on a given entity.\\nPlease note that some effects can only be played on entities, e..g wolf hearts or the hurt effect, and that these are always visible to all players.",
  "examples" : "play wolf hearts on the clicked wolf\\nshow mob spawner flames at the targeted block to the player"
},
{
  "id" : "EffPlaySound",
  "name" : "Play Sound",
  "patterns" : [
    "play sound %<a href='classes.html#string'>text</a>% [with volume %<a href='classes.html#number'>number</a>%] [(and|with) pitch %<a href='classes.html#number'>number</a>%] at %<a href='classes.html#location'>location</a>% [for %<a href='classes.html#player'>players</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Plays a sound at given location for everyone or just for given players. Playing sounds from resource packs is supported.",
  "examples" : ""
},
{
  "id" : "EffPoison",
  "name" : "Poison/Cure",
  "patterns" : [
    "poison %<a href='classes.html#livingentity'>living entities</a>% [for %<a href='classes.html#timespan'>time span</a>%]",
"(cure|unpoison) %<a href='classes.html#livingentity'>living entities</a>% [(from|of) poison]",

    "pattern_end"
  ],
  "since" : "1.3.2",
  "description" : "Poison or cure a creature.",
  "examples" : "poison the player\\npoison the victim for 20 seconds\\ncure the player from poison"
},
{
  "id" : "EffPotion",
  "name" : "Potion Effects",
  "patterns" : [
    "apply [potion of] %<a href='classes.html#potioneffecttype'>potions</a>% [potion] [[[of] tier] %<a href='classes.html#number'>number</a>%] to %<a href='classes.html#livingentity'>living entities</a>% [for %<a href='classes.html#timespan'>time span</a>%]",
"apply ambient [potion of] %<a href='classes.html#potioneffecttype'>potions</a>% [potion] [[[of] tier] %<a href='classes.html#number'>number</a>%] to %<a href='classes.html#livingentity'>living entities</a>% [for %<a href='classes.html#timespan'>time span</a>%]",
"apply [potion of] %<a href='classes.html#potioneffecttype'>potions</a>% [potion] [[[of] tier] %<a href='classes.html#number'>number</a>%] without [any] particles to %<a href='classes.html#livingentity'>living entities</a>% [for %<a href='classes.html#timespan'>time span</a>%]",

    "pattern_end"
  ],
  "since" : "2.0, 2.2-dev27 (ambient and particle-less potion effects)",
  "description" : "Apply or remove potion effects to/from entities.",
  "examples" : "apply swiftness 2 to the player\\nremove haste from the victim\\non join:\\n    apply potion of strength of tier {strength.%player%} to the player for 999 days"
},
{
  "id" : "EffPush",
  "name" : "Push",
  "patterns" : [
    "(push|thrust) %<a href='classes.html#entity'>entities</a>% %<a href='classes.html#direction'>direction</a>% [(at|with) (speed|velocity|force) %<a href='classes.html#number'>number</a>%]",

    "pattern_end"
  ],
  "since" : "1.4.6",
  "description" : "Push entities around.",
  "examples" : "push the player upwards\\npush the victim downwards at speed 0.5"
},
{
  "id" : "EffPvP",
  "name" : "PvP",
  "patterns" : [
    "enable PvP [in %<a href='classes.html#world'>worlds</a>%]",
"disable PVP [in %<a href='classes.html#world'>worlds</a>%]",

    "pattern_end"
  ],
  "since" : "1.3.4",
  "description" : "Set the PvP state for a given world.",
  "examples" : "enable PvP #(current world only)\\ndisable PvP in all worlds"
},
{
  "id" : "EffReplace",
  "name" : "Replace",
  "patterns" : [
    "replace [(all|every)] %<a href='classes.html#string'>texts</a>% in %<a href='classes.html#string'>texts</a>% with %<a href='classes.html#string'>text</a>%",
"replace [(all|every)] %<a href='classes.html#string'>texts</a>% with %<a href='classes.html#string'>text</a>% in %<a href='classes.html#string'>texts</a>%",
"replace [(all|every)] %<a href='classes.html#itemstack'>item stacks</a>% in %<a href='classes.html#inventory'>inventories</a>% with %<a href='classes.html#itemstack'>item stack</a>%",
"replace [(all|every)] %<a href='classes.html#itemstack'>item stacks</a>% with %<a href='classes.html#itemstack'>item stack</a>% in %<a href='classes.html#inventory'>inventories</a>%",

    "pattern_end"
  ],
  "since" : "2.0, 2.2-dev24 (replace in muliple strings and replace items in inventory)",
  "description" : "Replaces all occurrences of a given text with another text. Please note that you can only change variables and a few expressions, e.g. a <a href='../expressions/#ExprMessage'>message</a> or a line of a sign.\\nStarting with 2.2-dev24, you can replace items in a inventory too.",
  "examples" : "replace \"<item>\" in {textvar} with \"%item%\"\\nreplace every \"&\" with \"§\" in line 1\\n# The following acts as a simple chat censor, but it will e.g. censor mass, hassle, assassin, etc. as well:\\non chat:\\n    replace all \"fuck\", \"bitch\" and \"ass\" with \"****\" in the message\\n \\nreplace all stone and dirt in player's inventory and player's top inventory with diamond"
},
{
  "id" : "EffReturn",
  "name" : "Return",
  "patterns" : [
    "return %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Makes a function return a value",
  "examples" : "function double(i: number) :: number:\\n    return 2 * {_i}"
},
{
  "id" : "EffShear",
  "name" : "Shear",
  "patterns" : [
    "shear %<a href='classes.html#livingentity'>living entities</a>%",
"un[-]shear %<a href='classes.html#livingentity'>living entities</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Shears or 'un-shears' a sheep. Please note that no wool is dropped, this only sets the 'sheared' state of the sheep.",
  "examples" : "on rightclick on a sheep holding a sword:\\n    shear the clicked sheep"
},
{
  "id" : "EffShoot",
  "name" : "Shoot",
  "patterns" : [
    "shoot %<a href='classes.html#entitydata'>entity types</a>% [from %<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#location'>locations</a>%] [(at|with) (speed|velocity) %<a href='classes.html#number'>number</a>%] [%<a href='classes.html#direction'>direction</a>%]",
"(make|let) %<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#location'>locations</a>% shoot %<a href='classes.html#entitydata'>entity types</a>% [(at|with) (speed|velocity) %<a href='classes.html#number'>number</a>%] [%<a href='classes.html#direction'>direction</a>%]",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Shoots a projectile (or any other entity) from a given entity.",
  "examples" : "shoot an arrow\\nmake the player shoot a creeper at speed 10\\nshoot a pig from the creeper"
},
{
  "id" : "EffSpawn",
  "name" : "Spawn",
  "patterns" : [
    "spawn %<a href='classes.html#entitytype'>entity types</a>% [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",
"spawn %<a href='classes.html#number'>number</a>% of %<a href='classes.html#entitytype'>entity types</a>% [%<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Spawn a creature.",
  "examples" : "spawn 3 creepers at the targeted block\\nspawn a ghast 5 meters above the player"
},
{
  "id" : "EffTeleport",
  "name" : "Teleport",
  "patterns" : [
    "teleport %<a href='classes.html#entity'>entities</a>% (to|%<a href='classes.html#direction'>direction</a>%) %<a href='classes.html#location'>location</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Teleport an entity to a specific location.",
  "examples" : "teleport the player to {homes.%player%}\\nteleport the attacker to the victim"
},
{
  "id" : "EffToggle",
  "name" : "Toggle",
  "patterns" : [
    "(close|turn off|de[-]activate) %<a href='classes.html#block'>blocks</a>%",
"(toggle|switch) [[the] state of] %<a href='classes.html#block'>blocks</a>%",
"(open|turn on|activate) %<a href='classes.html#block'>blocks</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "Toggle the state of a block.",
  "examples" : "# use arrows to toggle switches, doors, etc.\\non projectile hit:\\n    projectile is arrow\\n    toggle the block at the arrow"
},
{
  "id" : "EffTree",
  "name" : "Tree",
  "patterns" : [
    "(grow|create|generate) tree [of type %<a href='classes.html#structuretype'>tree type</a>%] %<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%",
"(grow|create|generate) %<a href='classes.html#structuretype'>tree type</a>% [tree] %<a href='classes.html#direction'>directions</a>% %<a href='classes.html#location'>locations</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Creates a tree.\\nThis may require that there is enough space above the given location and that the block below is dirt/grass, but it is possible that the tree will just grow anyways, possibly replacing every block in its path.",
  "examples" : "grow a tall redwood tree above the clicked block"
},
{
  "id" : "EffVectorRotateXYZ",
  "name" : "Vectors - Rotate around XYZ",
  "patterns" : [
    "rotate %<a href='classes.html#vector'>vectors</a>% around (x|y|z)(-| )axis by %<a href='classes.html#number'>number</a>% [degrees]",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Rotates a vector around x, y, or z axis by some degrees",
  "examples" : "rotate {_v} around x-axis by 90\\nrotate {_v} around y-axis by 90\\nrotate {_v} around z-axis by 90"
},
{
  "id" : "EffVectorRotateAroundAnother",
  "name" : "Vectors - Rotate around vector",
  "patterns" : [
    "rotate %<a href='classes.html#vector'>vectors</a>% around %<a href='classes.html#vector'>vector</a>% by %<a href='classes.html#number'>number</a>% [degrees]",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Rotates a vector around another vector",
  "examples" : "rotate {_v} around vector 1, 0, 0 by 90"
},
{
  "id" : "EffVehicle",
  "name" : "Vehicle",
  "patterns" : [
    "(make|let|force) %<a href='classes.html#entity'>entities</a>% [to] (ride|mount) [(in|on)] %<a href='classes.html#entity'>entities</a>/<a href='classes.html#entitydata'>entity types</a>%",
"[(make|let|force) %<a href='classes.html#entity'>entities</a>% [to] (dismount|(dismount|leave) (from|of)] [(any|the[ir]|his|her)] vehicle[s])",
"[(eject|dismount) (any|the)] passenger[s] (of|from) %<a href='classes.html#entity'>entities</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Makes an entity ride another entity, e.g. a minecart, a saddled pig, an arrow, etc.",
  "examples" : "make the player ride a saddled pig\\nmake the attacker ride the victim"
},
{
  "id" : "EffOp",
  "name" : "op/deop",
  "patterns" : [
    "[de[-]]op %<a href='classes.html#offlineplayer'>offline players</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Grant/revoke a user operator state.",
  "examples" : "op the player\\ndeop all players"
},

    {"end" : true}
  ],

  "events" : [
    {
  "id" : "at_time",
  "name" : "At Time",
  "patterns" : [
    "at %<a href='classes.html#time'>time</a>% [in %<a href='classes.html#world'>worlds</a>%]",

    "pattern_end"
  ],
  "since" : "1.3.4",
  "description" : "An event that occurs at a given <a href='../classes/#time'>minecraft time</a> in every world or only in specific worlds.",
  "examples" : "at 18:00\\nat 7am in \"world\""
},
{
  "id" : "aoe_cloud_effect",
  "name" : "On AoE Cloud Effect",
  "patterns" : [
    "(area|AoE) [cloud] effect",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Called when area effect cloud applies it's potion effect. This happens every 5 ticks by default.",
  "examples" : ""
},
{
  "id" : "bed_enter",
  "name" : "On Bed Enter",
  "patterns" : [
    "bed enter[ing]",
"[player] enter[ing] [a] bed",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player starts sleeping.",
  "examples" : ""
},
{
  "id" : "bed_leave",
  "name" : "On Bed Leave",
  "patterns" : [
    "bed leav(e|ing)",
"[player] leav(e|ing) [a] bed",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player leaves a bed.",
  "examples" : ""
},
{
  "id" : "block_damage",
  "name" : "On Block Damage",
  "patterns" : [
    "block damag(ing|e)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player starts to break a block. You can usually just use the leftclick event for this.",
  "examples" : ""
},
{
  "id" : "block_growth",
  "name" : "On Block Growth",
  "patterns" : [
    "(plant|crop|block) grow[(th|ing)] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-Fixes-V10",
  "description" : "Called when a crop grows. Alternative to new form of generic grow event.",
  "examples" : "on crop growth"
},
{
  "id" : "book_edit",
  "name" : "On Book Edit",
  "patterns" : [
    "book (edit|change|write)",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Called when a player edits a book",
  "examples" : ""
},
{
  "id" : "book_sign",
  "name" : "On Book Sign",
  "patterns" : [
    "book sign[ing]",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Called when a player signs a book",
  "examples" : ""
},
{
  "id" : "break_mine",
  "name" : "On Break / Mine",
  "patterns" : [
    "[block] (break[ing]|min(e|ing)) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0 (break), <i>unknown</i> (mine)",
  "description" : "Called when a block is broken by a player. If you use 'on mine', only events where the broken block dropped something will call the trigger.",
  "examples" : "on mine\\non break of stone\\non mine of any ore"
},
{
  "id" : "bucket_empty",
  "name" : "On Bucket Empty",
  "patterns" : [
    "bucket empty[ing]",
"[player] empty[ing] [a] bucket",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player empties a bucket. You can also use the <a href='#place'>place event</a> with a check for water or lava.",
  "examples" : ""
},
{
  "id" : "bucket_fill",
  "name" : "On Bucket fill",
  "patterns" : [
    "bucket fill[ing]",
"[player] fill[ing] [a] bucket",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player fills a bucket.",
  "examples" : ""
},
{
  "id" : "burn",
  "name" : "On Burn",
  "patterns" : [
    "[block] burn[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a block is destroyed by fire.",
  "examples" : "on burn\\non burn of wood, fences, or chests"
},
{
  "id" : "can_build_check",
  "name" : "On Can Build Check",
  "patterns" : [
    "[block] can build check",

    "pattern_end"
  ],
  "since" : "1.0 (basic), 2.0 ([un]cancellable)",
  "description" : "Called when a player rightclicks on a block while holding a block or a placeable item. You can either cancel the event to prevent the block from being built, or uncancel it to allow it.\\nPlease note that the <a href='../expressions/#ExprDurability'>data value</a> of the block to be placed is not available in this event, only its <a href='../expressions/#ExprIdOf'>ID</a>.",
  "examples" : ""
},
{
  "id" : "chat",
  "name" : "On Chat",
  "patterns" : [
    "chat",

    "pattern_end"
  ],
  "since" : "1.4.1",
  "description" : "Called whenever a player chats. Use <a href='../expressions.html#ExprChatFormat'>chat format</a> to change message format, use <a href='../expressions.html#ExprChatRecipients'>chat recipients</a> to edit chat recipients.",
  "examples" : "on chat:\\n    if player has permission \"owner\":\\n        set chat format to \"<red>[player]<light gray>: <light red>[message]\"\\n    else if player has permission \"admin\":\\n        set chat format to \"<light red>[player]<light gray>: <orange>[message]\"\\n    else: #default message format\\n        set chat format to \"<orange>[player]<light gray>: <white>[message]\""
},
{
  "id" : "chunk_generate",
  "name" : "On Chunk Generate",
  "patterns" : [
    "chunk (generat|populat)(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called after a new chunk was generated.",
  "examples" : ""
},
{
  "id" : "chunk_load",
  "name" : "On Chunk Load",
  "patterns" : [
    "chunk load[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a chunk loads. The chunk might or might not contain mobs when it's loaded.",
  "examples" : ""
},
{
  "id" : "chunk_unload",
  "name" : "On Chunk Unload",
  "patterns" : [
    "chunk unload[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a chunk is unloaded due to not being near any player. Cancel the event to force the server to keep the chunk loaded and thus keep simulating the chunk (e.g. physics, plant growth, minecarts, etc. will keep working and won't freeze).",
  "examples" : ""
},
{
  "id" : "click",
  "name" : "On Click",
  "patterns" : [
    "[(right|left)[( |-)]][mouse[( |-)]]click[ing] [on %<a href='classes.html#entitydata'>entity type</a>/<a href='classes.html#itemtype'>item type</a>%] [(with|using|holding) %<a href='classes.html#itemtype'>item type</a>%]",
"[(right|left)[( |-)]][mouse[( |-)]]click[ing] (with|using|holding) %<a href='classes.html#itemtype'>item type</a>% on %<a href='classes.html#entitydata'>entity type</a>/<a href='classes.html#itemtype'>item type</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a user clicks on a block, an entity or air with or without an item in their hand.\\nPlease note that rightclick events with an empty hand while not looking at a block are not sent to the server, so there's no way to detect them.",
  "examples" : "on click\\non rightclick holding a fishing rod\\non leftclick on a stone or obsidian\\non rightclick on a creeper\\non click with a sword"
},
{
  "id" : "combust",
  "name" : "On Combust",
  "patterns" : [
    "combust[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an entity is set on fire, e.g. by fire or lava, a fireball, or by standing in direct sunlight (zombies, skeletons).",
  "examples" : ""
},
{
  "id" : "command",
  "name" : "On Command",
  "patterns" : [
    "command [%<a href='classes.html#string'>text</a>%]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called when a player enters a command (not neccessarily a Skript command).",
  "examples" : "on command\\non command \"/stop\"\\non command \"pm Njol \""
},
{
  "id" : "connect",
  "name" : "On Connect",
  "patterns" : [
    "[player] connect[ing]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called when the player connects to the server. This event is called before the player actually joins the server, so if you want to prevent players from joining you should prefer this event over <a href='#join'>on join</a>.",
  "examples" : "on connect:\\n    player doesn't have permission \"VIP\"\\n    number of players is larger than 20,    kick the player due to \"The last 5 slots are reserved for VIP players.\""
},
{
  "id" : "consume",
  "name" : "On Consume",
  "patterns" : [
    "[player] ((eat|drink)[ing]|consum(e|ing)) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called when a player is done eating/drinking something, e.g. an apple, bread, meat, milk or a potion.",
  "examples" : ""
},
{
  "id" : "craft",
  "name" : "On Craft",
  "patterns" : [
    "[player] craft[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Called when a player crafts an item.",
  "examples" : ""
},
{
  "id" : "creeper_power",
  "name" : "On Creeper Power",
  "patterns" : [
    "creeper power",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a creeper is struck by lighting and gets powered. Cancel the event to prevent the creeper from being powered.",
  "examples" : ""
},
{
  "id" : "damage",
  "name" : "On Damage",
  "patterns" : [
    "damag(e|ing) [of %<a href='classes.html#entitydata'>entity type</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an entity receives damage, e.g. by an attack from another entity, lava, fire, drowning, fall, suffocation, etc.",
  "examples" : "on damage\\non damage of a player"
},
{
  "id" : "death",
  "name" : "On Death",
  "patterns" : [
    "death [of %<a href='classes.html#entitydata'>entity types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a living entity (including players) dies.",
  "examples" : "on death\\non death of player\\non death of a wither or ender dragon:\\n    broadcast \"A %entity% has been slain in %world%!\""
},
{
  "id" : "dispense",
  "name" : "On Dispense",
  "patterns" : [
    "dispens(e|ing) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Called when a dispenser dispenses an item.",
  "examples" : ""
},
{
  "id" : "drop",
  "name" : "On Drop",
  "patterns" : [
    "[player] drop[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Called when a player drops an item from his inventory.",
  "examples" : ""
},
{
  "id" : "endermansheepsilverfish",
  "name" : "On Enderman/Sheep/Silverfish",
  "patterns" : [
    "enderman place",
"enderman pickup",
"sheep eat",
"silverfish enter",
"silverfish exit",

    "pattern_end"
  ],
  "since" : "",
  "description" : "Called when an enderman places or picks up a block, a sheep eats grass or a silverfish boops into/out of a block respectively.",
  "examples" : ""
},
{
  "id" : "entity_dismount",
  "name" : "On Entity Dismount",
  "patterns" : [
    "dismount[ing]",

    "pattern_end"
  ],
  "since" : "2.2-dev13b",
  "description" : "Called when an entity dismounts.",
  "examples" : ""
},
{
  "id" : "entity_mount",
  "name" : "On Entity Mount",
  "patterns" : [
    "mount[ing]",

    "pattern_end"
  ],
  "since" : "2.2-dev13b",
  "description" : "Called when entity starts riding another.",
  "examples" : ""
},
{
  "id" : "experience_spawn",
  "name" : "On Experience Spawn",
  "patterns" : [
    "[e]xp[erience] [orb] spawn",
"spawn of [a[n]] [e]xp[erience] [orb]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called whenever experience is about to spawn. This is a helper event for easily being able to stop xp from spawning, as all you can currently do is cancel the event.\\nPlease note that it's impossible to detect xp orbs spawned by plugins (including Skript) with Bukkit, thus make sure that you have no such plugins if you don't want any xp orbs to spawn. (Many plugins that only <i>change</i> the experience dropped by blocks or entities will be detected without problems though)",
  "examples" : "on xp spawn:\\n    world is \"minigame_world\"\\n    cancel event"
},
{
  "id" : "explode",
  "name" : "On Explode",
  "patterns" : [
    "explo(d(e|ing)|sion)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an entity (a primed TNT or a creeper) explodes.",
  "examples" : ""
},
{
  "id" : "explosion_prime",
  "name" : "On Explosion Prime",
  "patterns" : [
    "explosion prime",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an explosive is primed, i.e. an entity will explode shortly. Creepers can abort the explosion if the player gets too far away, while TNT will explode for sure after a short time.",
  "examples" : ""
},
{
  "id" : "fade",
  "name" : "On Fade",
  "patterns" : [
    "[block] fad(e|ing) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a block 'fades away', e.g. ice or snow melts.",
  "examples" : "on fade of snow or ice"
},
{
  "id" : "first_join",
  "name" : "On First Join",
  "patterns" : [
    "first (join|login)",

    "pattern_end"
  ],
  "since" : "1.3.7",
  "description" : "Called when a player joins the server for the first time.",
  "examples" : ""
},
{
  "id" : "fishing",
  "name" : "On Fishing",
  "patterns" : [
    "[player] fish[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player fishes something. This is not of much use yet.",
  "examples" : ""
},
{
  "id" : "flight_toggle",
  "name" : "On Flight Toggle",
  "patterns" : [
    "[player] flight togg(e|ing)",
"[player] toggl(e|ing) flight",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Called when a players stops/starts flying.",
  "examples" : "on flight toggle:\\n    if {game::%player%::playing} exists:\\n        cancel event"
},
{
  "id" : "flow",
  "name" : "On Flow",
  "patterns" : [
    "[block] flow[ing]",
"block mov(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a blocks flows or teleports to another block. This not only applies to water and lava, but teleporting dragon eggs as well.",
  "examples" : ""
},
{
  "id" : "form",
  "name" : "On Form",
  "patterns" : [
    "[block] form[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a block is created, but not by a player, e.g. snow forms due to snowfall, water freezes in cold biomes. This isn't called when block spreads (mushroom growth, water physics etc.), as it has its own event (see <a href='#spread'>spread event</a>).",
  "examples" : "on form of snow\\non form of a mushroom"
},
{
  "id" : "fuel_burn",
  "name" : "On Fuel Burn",
  "patterns" : [
    "fuel burn[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a furnace burns an item from its <a href='../expressions/#ExprFurnaceSlot'>fuel slot</a>.",
  "examples" : ""
},
{
  "id" : "gamemode_change",
  "name" : "On Gamemode Change",
  "patterns" : [
    "game[ ]mode change [to %<a href='classes.html#gamemode'>gamemode</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player's <a href='../classes/#gamemode'>gamemode</a> changes.",
  "examples" : "on gamemode change\\non gamemode change to adventure"
},
{
  "id" : "gliding_state_change",
  "name" : "On Gliding State Change",
  "patterns" : [
    "(gliding state change|toggl(e|ing) gliding)",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Called when an entity toggles glider on or off, or when server toggles gliding state of an entity forcibly.",
  "examples" : "on toggling gliding:\\n    cancel the event # bad idea, but you CAN do it!"
},
{
  "id" : "grow",
  "name" : "On Grow",
  "patterns" : [
    "grow [of (%<a href='classes.html#structuretype'>tree type</a>%|%<a href='classes.html#itemtype'>item type</a>%)]",

    "pattern_end"
  ],
  "since" : "1.0 (2.2-dev20 for plants)",
  "description" : "Called when a tree, giant mushroom or plant grows to next stage.",
  "examples" : "on grow\\non grow of a tree\\non grow of a huge jungle tree"
},
{
  "id" : "heal",
  "name" : "On Heal",
  "patterns" : [
    "heal[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an entity is healed, e.g. by eating (players), being fed (pets), or by the effect of a potion of healing (overworld mobs) or harm (nether mobs).",
  "examples" : ""
},
{
  "id" : "hunger_meter_change",
  "name" : "On Hunger Meter Change",
  "patterns" : [
    "(food|hunger) (level|met(er|re)|bar) chang(e|ing)",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "Called when the hunger bar of a player changes, i.e. either increases by eating or decreases over time.",
  "examples" : ""
},
{
  "id" : "ignition",
  "name" : "On Ignition",
  "patterns" : [
    "[block] ignit(e|ion)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a block starts burning, i.e. a fire block is placed next to it and this block is flammable.\\nThe <a href='#burn'>burn event</a> will be called when the block is about do be destroyed by the fire.",
  "examples" : ""
},
{
  "id" : "inventory_click",
  "name" : "On Inventory Click",
  "patterns" : [
    "[player] inventory(-| )click[ing] [[at] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-Fixes-V10",
  "description" : "Called when clicking on inventory slot.",
  "examples" : ""
},
{
  "id" : "inventory_close",
  "name" : "On Inventory Close",
  "patterns" : [
    "inventory clos(ing|e[d])",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Called when player's currently viewed inventory is closed.",
  "examples" : ""
},
{
  "id" : "inventory_open",
  "name" : "On Inventory Open",
  "patterns" : [
    "inventory open[ed]",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Called when an inventory is opened for player.",
  "examples" : ""
},
{
  "id" : "item_break",
  "name" : "On Item Break",
  "patterns" : [
    "[player] tool break[ing]",
"[player] break[ing] [(a|the)] tool",

    "pattern_end"
  ],
  "since" : "2.1.1",
  "description" : "Called when a player breaks his tool because its damage reached the maximum value.\\nThis event cannot be cancelled.",
  "examples" : ""
},
{
  "id" : "item_despawn",
  "name" : "On Item Despawn",
  "patterns" : [
    "(item[ ][stack]|[item] %<a href='classes.html#itemtype'>item types</a>%) despawn[ing]",
"[item[ ][stack]] despawn[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "Called when an item is about to be despawned from the world, usually 5 minutes after it was dropped.",
  "examples" : "on item despawn of diamond:\\n    send \"Not my precious!\"\\n    cancel event"
},
{
  "id" : "item_merge",
  "name" : "On Item Merge",
  "patterns" : [
    "(item[ ][stack]|[item] %<a href='classes.html#itemtype'>item types</a>%) merg(e|ing)",
"item[ ][stack] merg(e|ing) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "Called when dropped items merge into a single stack.",
  "examples" : "on item merge of gold blocks:\\n    cancel event"
},
{
  "id" : "item_spawn",
  "name" : "On Item Spawn",
  "patterns" : [
    "item spawn[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Called whenever an item stack is spawned in a world, e.g. as drop of a block or mob, a player throwing items out of his inventory, or a dispenser dispensing an item (not shooting it).",
  "examples" : ""
},
{
  "id" : "join",
  "name" : "On Join",
  "patterns" : [
    "[player] (login|logging in|join[ing])",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when the player joins the server. The player is already in a world when this event is called, so if you want to prevent players from joining you should prefer <a href='#connect'>on connect</a> over this event.",
  "examples" : "on join:\\n    message \"Welcome on our awesome server!\"\\n    broadcast \"%player% just joined the server!\""
},
{
  "id" : "kick",
  "name" : "On Kick",
  "patterns" : [
    "[player] (kick|being kicked)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player is kicked from the server. You can change the <a href='../expressions/#ExprMessage'>kick message</a> or <a href='../effects/#EffCancelEvent'>cancel the event</a> entirely.",
  "examples" : ""
},
{
  "id" : "leaves_decay",
  "name" : "On Leaves Decay",
  "patterns" : [
    "leaves decay[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a leaf block decays due to not being connected to a tree.",
  "examples" : ""
},
{
  "id" : "level_change",
  "name" : "On Level Change",
  "patterns" : [
    "[player] level [change]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player's <a href='../expressions/#ExprLevel'>level</a> changes, e.g. by gathering experience or by enchanting something.",
  "examples" : ""
},
{
  "id" : "lightning_strike",
  "name" : "On Lightning Strike",
  "patterns" : [
    "lightning [strike]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when lightning strikes.",
  "examples" : ""
},
{
  "id" : "move_on",
  "name" : "On Move On",
  "patterns" : [
    "(step|walk)[ing] (on|over) %*<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called when a player moves onto a certain type of block. Please note that using this event can cause lag if there are many players online.",
  "examples" : "on walking on dirt or grass\\non stepping on stone"
},
{
  "id" : "physics",
  "name" : "On Physics",
  "patterns" : [
    "[block] physics",

    "pattern_end"
  ],
  "since" : "1.4.6",
  "description" : "Called when a physics check is done on a block. By cancelling this event you can prevent some things from happening, e.g. sand falling, dirt turning into grass, torches dropping if their supporting block is destroyed, etc.Please note that using this event might cause quite some lag since it gets called extremely often.",
  "examples" : "# prevents sand from falling\\non block physics:\\n    block is sand\\n    cancel event"
},
{
  "id" : "pick_up",
  "name" : "On Pick Up",
  "patterns" : [
    "[player] (pick[ ]up|picking up) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Called when a player picks up an item. Please note that the item is still on the ground when this event is called.",
  "examples" : ""
},
{
  "id" : "pig_zap",
  "name" : "On Pig Zap",
  "patterns" : [
    "pig[ ]zap",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a pig is stroke by lightning and transformed into a zombie pigman. Cancel the event to prevent the transformation.",
  "examples" : ""
},
{
  "id" : "piston_extend",
  "name" : "On Piston Extend",
  "patterns" : [
    "piston extend[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a piston is about to extend.",
  "examples" : ""
},
{
  "id" : "piston_retract",
  "name" : "On Piston Retract",
  "patterns" : [
    "piston retract[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a piston is about to retract.",
  "examples" : ""
},
{
  "id" : "place",
  "name" : "On Place",
  "patterns" : [
    "[block] (plac(e|ing)|build[ing]) [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player places a block.",
  "examples" : "on place\\non place of a furnace, workbench or chest"
},
{
  "id" : "player_world_change",
  "name" : "On Player World Change",
  "patterns" : [
    "[player] world chang(ing|e[d])",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Called when a player enters a world. Does not work with other entities!",
  "examples" : "on player world change:\\n    world is \"city\"\\n    send \"Welcome to the City!\""
},
{
  "id" : "portal",
  "name" : "On Portal",
  "patterns" : [
    "[player] portal",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player uses a nether or end portal. <a href='../effects/#EffCancelEvent'>Cancel the event</a> to prevent the player from teleporting.",
  "examples" : ""
},
{
  "id" : "portal_create",
  "name" : "On Portal Create",
  "patterns" : [
    "portal creat(e|ion)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a portal is created, either by a player or mob lighting an obsidian frame on fire, or by a nether portal creating its teleportation target in the nether/overworld.\\nPlease note that it's not possible to use <a href='../expressions/#ExprEntity'>the player</a> in this event.",
  "examples" : ""
},
{
  "id" : "portal_enter",
  "name" : "On Portal Enter",
  "patterns" : [
    "portal enter[ing]",
"entering [a] portal",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player enters a nether portal and the swirly animation starts to play.",
  "examples" : ""
},
{
  "id" : "prepare_craft",
  "name" : "On Prepare Craft",
  "patterns" : [
    "[player] (preparing|beginning) craft[ing] [[of] %<a href='classes.html#itemtype'>item types</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-Fixes-V10",
  "description" : "Called just before displaying crafting result to player. Note that setting the result item might or might not work due to Bukkit bugs.",
  "examples" : ""
},
{
  "id" : "pressure_plate_trip",
  "name" : "On Pressure Plate / Trip",
  "patterns" : [
    "[step[ping] on] [a] [pressure] plate",
"(trip|[step[ping] on] [a] tripwire)",

    "pattern_end"
  ],
  "since" : "1.0 (pressure plate), 1.4.4 (tripwire)",
  "description" : "Called when a <i>player</i> steps on a pressure plate or tripwire respectively.",
  "examples" : ""
},
{
  "id" : "projectile_hit",
  "name" : "On Projectile Hit",
  "patterns" : [
    "projectile hit",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a projectile hits an entity or a block.\\nUse the <a href='#damage'>damage event</a> with a <a href='../conditions/#CondIsSet'>check</a> for a <a href='../expressions/#ExprEntity'>projectile</a> to be able to use the <a href='../expressions/#ExprAttacked'>entity that got hit</a> in the case when the projectile hit a living entity.\\nA damage event will even be fired if the damage is 0, e.g. when throwing snowballs at non-nether mobs.",
  "examples" : ""
},
{
  "id" : "quit",
  "name" : "On Quit",
  "patterns" : [
    "(quit[ting]|disconnect[ing]|log[ ]out|logging out)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player leaves the server. Starting with Skript 2.0 this also includes kicked players.",
  "examples" : ""
},
{
  "id" : "redstone",
  "name" : "On Redstone",
  "patterns" : [
    "redstone [current] [chang(e|ing)]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when the redstone current of a block changes. This event is of not much use yet.",
  "examples" : ""
},
{
  "id" : "respawn",
  "name" : "On Respawn",
  "patterns" : [
    "[player] respawn[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player respawns. You should prefer this event over the <a href='#death'>death event</a> as the player is technically alive when this event is called.",
  "examples" : ""
},
{
  "id" : "resurrect_attempt",
  "name" : "On Resurrect Attempt",
  "patterns" : [
    "[entity] resurrect[ion] [attempt]",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Called when an entity dies, always. If they are not holding a totem, this is calcelled - you can, however, uncancel it.",
  "examples" : "on resurrect attempt:\\n    entity is player\\n    entity has permission \"admin.undying\"\\n    uncancel the event"
},
{
  "id" : "script_loadunload",
  "name" : "On Script Load/Unload",
  "patterns" : [
    "[script] (load|init|enable)",
"[script] (unload|stop|disable)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called directly after the trigger is loaded, or directly before the whole script is unloaded.",
  "examples" : "on load:\\n    set {running.%script%} to true\\non unload:\\n    set {running.%script%} to false"
},
{
  "id" : "server_startstop",
  "name" : "On Server Start/Stop",
  "patterns" : [
    "(server|skript) (start|load|enable)",
"(server|skript) (stop|unload|disable)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Called when the server starts or stops (actually, when Skript starts or stops, so a /reload will trigger these events as well).",
  "examples" : "on Skript start\\non server stop"
},
{
  "id" : "sheep_regrow_wool",
  "name" : "On Sheep Regrow Wool",
  "patterns" : [
    "sheep [re]grow[ing] wool",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Called when sheep regrows it's sheared wool back.",
  "examples" : ""
},
{
  "id" : "shoot",
  "name" : "On Shoot",
  "patterns" : [
    "[projectile] shoot",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called whenever a <a href='../classes/#projectile'>projectile</a> is shot. Use the <a href='../expressions/#ExprShooter'>shooter expression</a> to get who shot the projectile.",
  "examples" : ""
},
{
  "id" : "sign_change",
  "name" : "On Sign Change",
  "patterns" : [
    "sign (chang[e]|edit)[ing]",
"[player] (chang[e]|edit)[ing] [a] sign",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "As signs are placed empty, this event is called when a player is done editing a sign.",
  "examples" : "on sign change:\\n    line 2 is empty\\n    set line 1 to \"<red>%line 1%\""
},
{
  "id" : "slime_split",
  "name" : "On Slime Split",
  "patterns" : [
    "slime split[ting]",

    "pattern_end"
  ],
  "since" : "2.2-dev26",
  "description" : "Called when a slime splits. Usually this happens when a big slime dies.",
  "examples" : ""
},
{
  "id" : "smelt",
  "name" : "On Smelt",
  "patterns" : [
    "[ore] smelt[ing]",
"smelt[ing] of ore",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a furnace smelts an item in its <a href='../expressions/#ExprFurnaceSlot'>ore slot</a>.",
  "examples" : ""
},
{
  "id" : "sneak_toggle",
  "name" : "On Sneak Toggle",
  "patterns" : [
    "[player] toggl(e|ing) sneak",
"[player] sneak toggl(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player starts or stops sneaking. Use <a href='../conditions/#CondIsSneaking'>is sneaking</a> to get whether the player was sneaking before the event was called.",
  "examples" : "# make players that stop sneaking jump\\non sneak toggle:\\n    player was sneaking\\n    push the player upwards at speed 0.5"
},
{
  "id" : "spawn",
  "name" : "On Spawn",
  "patterns" : [
    "spawn[ing] [of %<a href='classes.html#entitydata'>entity types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an creature spawns.",
  "examples" : "on spawn of a zombie\\non spawn of an ender dragon:\\n    broadcast \"A dragon has been sighted in %world%!\""
},
{
  "id" : "spawn_change",
  "name" : "On Spawn Change",
  "patterns" : [
    "[world] spawn change",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when the spawn point of a world changes.",
  "examples" : ""
},
{
  "id" : "spread",
  "name" : "On Spread",
  "patterns" : [
    "spread[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a new block <a href='#form'>forms</a> as a result of a block that can spread, e.g. water or mushrooms.",
  "examples" : ""
},
{
  "id" : "sprint_toggle",
  "name" : "On Sprint Toggle",
  "patterns" : [
    "[player] toggl(e|ing) sprint",
"[player] sprint toggl(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player starts or stops sprinting. Use <a href='../conditions/#CondIsSprinting'>is sprinting</a> to get whether the player was sprinting before the event was called.",
  "examples" : "on sprint toggle:\\n    player is not sprinting\\n    send \"Run!\""
},
{
  "id" : "tame",
  "name" : "On Tame",
  "patterns" : [
    "[entity] tam(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player tames a wolf or ocelot. Can be cancelled to prevent the entity from being tamed.",
  "examples" : ""
},
{
  "id" : "target",
  "name" : "On Target",
  "patterns" : [
    "[entity] target",
"[entity] un[-]target",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a mob starts/stops following/attacking another entity, usually a player.",
  "examples" : ""
},
{
  "id" : "teleport",
  "name" : "On Teleport",
  "patterns" : [
    "[player] teleport[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called whenever a player is teleported, either by a nether/end portal or other means (e.g. by plugins).",
  "examples" : ""
},
{
  "id" : "throwing_of_an_egg",
  "name" : "On Throwing of an Egg",
  "patterns" : [
    "throw[ing] [of] [an] egg",
"[player] egg throw",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a player throws an egg. You can just use the <a href='#shoot'>shoot event</a> in most cases, as this event is intended to support changing the hatched mob and its chance to hatch, but Skript does not yet support that.",
  "examples" : ""
},
{
  "id" : "tool_change",
  "name" : "On Tool Change",
  "patterns" : [
    "[player['s]] (tool|item held|held item) chang(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called whenever a player changes his held item by selecting a different slot (e.g. the keys 1-9 or the mouse wheel), <i>not</i> by dropping or replacing the item in the current slot.",
  "examples" : ""
},
{
  "id" : "vehicle_create",
  "name" : "On Vehicle Create",
  "patterns" : [
    "vehicle create",
"creat(e|ing|ion of) [a] vehicle",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a new vehicle is created, e.g. when a player places a boat or minecart.",
  "examples" : ""
},
{
  "id" : "vehicle_damage",
  "name" : "On Vehicle Damage",
  "patterns" : [
    "vehicle damage",
"damag(e|ing) [a] vehicle",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a vehicle gets damage. Too much damage will <a href='#vehicle_destroy'>destroy</a> the vehicle.",
  "examples" : ""
},
{
  "id" : "vehicle_destroy",
  "name" : "On Vehicle Destroy",
  "patterns" : [
    "vehicle destroy",
"destr(oy[ing]|uction of) [a] vehicle",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a vehicle is destroyed. Any <a href='../expressions/#ExprPassenger'>passenger</a> will be ejected and the vehicle might drop some item(s).",
  "examples" : ""
},
{
  "id" : "vehicle_enter",
  "name" : "On Vehicle Enter",
  "patterns" : [
    "vehicle enter",
"enter[ing] [a] vehicle",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an <a href='../classes/#entity'>entity</a> enters a vehicle, either deliberately (players) or by falling into them (mobs).",
  "examples" : ""
},
{
  "id" : "vehicle_exit",
  "name" : "On Vehicle Exit",
  "patterns" : [
    "vehicle exit",
"exit[ing] [a] vehicle",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when an entity exits a vehicle.",
  "examples" : ""
},
{
  "id" : "weather_change",
  "name" : "On Weather Change",
  "patterns" : [
    "weather change [to %<a href='classes.html#weathertype'>weather types</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a world's weather changes.",
  "examples" : "on weather change\\non weather change to sunny"
},
{
  "id" : "world_init",
  "name" : "On World Init",
  "patterns" : [
    "world init[zation)]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a world is initialised. As all default worlds are initialised before any scripts are loaded, this event is only called for newly created worlds.\\nWorld management plugins might change the behaviour of this event though.",
  "examples" : ""
},
{
  "id" : "world_load",
  "name" : "On World Load",
  "patterns" : [
    "world load[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a world is loaded. As with the world init event, this event will not be called for the server's default world(s).",
  "examples" : ""
},
{
  "id" : "world_save",
  "name" : "On World Save",
  "patterns" : [
    "world sav(e|ing)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a world is saved to disk. Usually all worlds are saved simultaneously, but world management plugins could change this.",
  "examples" : ""
},
{
  "id" : "world_unload",
  "name" : "On World Unload",
  "patterns" : [
    "world unload[ing]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a world is unloaded. This event might never be called if you don't have a world management plugin.",
  "examples" : ""
},
{
  "id" : "zombie_break_door",
  "name" : "On Zombie Break Door",
  "patterns" : [
    "zombie break[ing] [a] [wood[en]] door",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Called when a zombie is done breaking a wooden door. Can be cancelled to prevent the zombie from breaking the door.",
  "examples" : ""
},
{
  "id" : "periodical",
  "name" : "Periodical",
  "patterns" : [
    "every %<a href='classes.html#timespan'>time span</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "An event that is called periodically.",
  "examples" : "every 2 seconds\\nevery minecraft hour\\nevery ticks #can cause lag (depends on the code in this trigger)\\nevery minecraft days"
},
{
  "id" : "periodical",
  "name" : "Periodical",
  "patterns" : [
    "every %<a href='classes.html#timespan'>time span</a>% in [world[s]] %<a href='classes.html#world'>worlds</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "An event that is called periodically.",
  "examples" : "every 2 seconds in \"world\"\\nevery minecraft hour in \"flatworld\"\\nevery ticks in \"world\" #can cause lag (depends on the code in this trigger)\\nevery minecraft days in \"plots\""
},

    {"end" : true}
  ],

  "expressions" : [
    {
  "id" : "ExprAllGroups",
  "name" : "All Groups",
  "patterns" : [
    "all groups",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "All the groups a player can have. This expression requires Vault and a compatible permissions plugin to be installed.",
  "examples" : "command /group <text>:\\n   trigger:\\n       if argument is \"list\":\\n           send \"%all groups%\""
},
{
  "id" : "ExprPermissions",
  "name" : "All Permissions",
  "patterns" : [
    "[the] permissions of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] permissions",

    "pattern_end"
  ],
  "since" : "2.2-dev33",
  "description" : "Returns all permissions of the defined player(s). Note that the modifications to resulting list do not actually change permissions.",
  "examples" : "set {_permissions::*} to all permissions of the player"
},
{
  "id" : "ExprAlphabetList",
  "name" : "Alphabetical Sort",
  "patterns" : [
    "alphabetically sorted %<a href='classes.html#string'>texts</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev18b",
  "description" : "Sorts given strings in alphabetical order.",
  "examples" : "set {_list::*} to alphabetically sorted {_list::*"
},
{
  "id" : "ExprAltitude",
  "name" : "Altitude",
  "patterns" : [
    "[the] altitude[s] of %<a href='classes.html#location'>locations</a>%",
"%<a href='classes.html#location'>locations</a>%'[s] altitude[s]",

    "pattern_end"
  ],
  "since" : "1.4.3",
  "description" : "Effectively an alias of 'y-<a href='#ExprCoordinate'>coordinate</a> of …', it represents the height of some object above bedrock.",
  "examples" : "on damage:\\n    altitude of the attacker is higher that the altitude of the victim\\n    set damage to damage * 1.2"
},
{
  "id" : "ExprAmount",
  "name" : "Amount",
  "patterns" : [
    "(amount|number|size) of %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The amount of something.\\nPlease note that <code>amount of &lt;items&gt;</code> will not return the number of items, but the number of stacks, e.g. 1 for a stack of 64 torches.",
  "examples" : "message \"There are %number of all players% players online!\""
},
{
  "id" : "ExprAmountOfItems",
  "name" : "Amount of Items",
  "patterns" : [
    "[the] (amount|number) of %<a href='classes.html#itemtype'>item types</a>% (in|of) %<a href='classes.html#inventory'>inventories</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Counts how many of a particular <a href='../classes/#itemtype'>item type</a> are in a given inventory.",
  "examples" : "message \"You have %number of ores in the player's inventory% ores in your inventory.\""
},
{
  "id" : "ExprArgument",
  "name" : "Argument",
  "patterns" : [
    "[the] last arg[ument][s]",
"[the] arg[ument][s](-| )&lt;(\\d+)&gt;",
"[the] &lt;(\\d*1)st|(\\d*2)nd|(\\d*3)rd|(\\d*[4-90])th&gt; arg[ument][s]",
"[the] arg[ument][s]",
"[the] %*<a href='classes.html#classinfo'>type</a>%( |-)arg[ument][( |-)&lt;\\d+&gt;]",
"[the] arg[ument]( |-)%*<a href='classes.html#classinfo'>type</a>%[( |-)&lt;\\d+&gt;]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Only usable in command events. Holds the value of the nth argument given to the command, e.g. if the command \"/tell &lt;player&gt; &lt;text&gt;\" is used like \"/tell Njol Hello Njol!\" argument 1 is the player named \"Njol\" and argument 2 is \"Hello Njol!\".\\nOne can also use the type of the argument instead of its index to address the argument, e.g. in the above example 'player-argument' is the same as 'argument 1'.",
  "examples" : "give the item-argument to the player-argument\\ndamage the player-argument by the number-argument\\ngive a diamond pickaxe to the argument\\nadd argument 1 to argument 2\\nheal the last argument"
},
{
  "id" : "ExprArithmetic",
  "name" : "Arithmetic",
  "patterns" : [
    "%<a href='classes.html#number'>number</a>%[ ]+[ ]%<a href='classes.html#number'>number</a>%",
"%<a href='classes.html#number'>number</a>%[ ]-[ ]%<a href='classes.html#number'>number</a>%",
"%<a href='classes.html#number'>number</a>%[ ]*[ ]%<a href='classes.html#number'>number</a>%",
"%<a href='classes.html#number'>number</a>%[ ]/[ ]%<a href='classes.html#number'>number</a>%",
"%<a href='classes.html#number'>number</a>%[ ]^[ ]%<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "1.4.2",
  "description" : "Arithmetic expressions, e.g. 1+2, (2 - health of player)/3, etc.",
  "examples" : "set the player's health to 10 - the player's health\\nloop (argument + 2)/5 times:\\n    message \"Two useless numbers: %loop-num*2 - 5%, %2^loop-num - 1%\"\\nmessage \"You have %health of player * 2% half hearts of HP!\""
},
{
  "id" : "ExprArmorSlot",
  "name" : "Armour Slot",
  "patterns" : [
    "[the] (boot[s]|shoe[s]|leg[ging][s]|chestplate[s]|helm[et][s]) [(item|slot)] of %<a href='classes.html#livingentity'>living entities</a>%",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] (boot[s]|shoe[s]|leg[ging][s]|chestplate[s]|helm[et][s]) [(item|slot)]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A part of a player's armour, i.e. the boots, leggings, chestplate or helmet.",
  "examples" : "set chestplate of the player to a diamond chestplate\\nhelmet of player is neither a helmet nor air # player is wearing a block, e.g. from another plugin"
},
{
  "id" : "ExprAttacked",
  "name" : "Attacked",
  "patterns" : [
    "[the] (attacked|damaged|victim) [&lt;(.+)&gt;]",

    "pattern_end"
  ],
  "since" : "1.3",
  "description" : "The victim of a damage event, e.g. when a player attacks a zombie this expression represents the zombie.",
  "examples" : "on damage:\\n    victim is a creeper\\n    damage the attacked by 1 heart"
},
{
  "id" : "ExprAttacker",
  "name" : "Attacker",
  "patterns" : [
    "[the] (attacker|damager)",

    "pattern_end"
  ],
  "since" : "1.3",
  "description" : "The attacker of a damage event, e.g. when a player attacks a zombie this expression represents the player.\\nPlease note that the attacker can also be a block, e.g. a cactus or lava, but this expression will not be set in these cases.",
  "examples" : "on damage:\\n    attacker is a player\\n    health of attacker is less than or equal to 2\\n    damage victim by 1 heart"
},
{
  "id" : "ExprBed",
  "name" : "Bed",
  "patterns" : [
    "[the] bed[s] [location[s]] of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] bed[s] [location[s]]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The bed location of a player, i.e. the spawn point of a player if he ever slept in a bed and the bed still exists and is unobstructed.",
  "examples" : "bed of player exists:\\n    teleport player the the player's bed\\nelse:\\n    teleport the player to the world's spawn point"
},
{
  "id" : "ExprBiome",
  "name" : "Biome",
  "patterns" : [
    "[the] biome (of|%<a href='classes.html#direction'>direction</a>%) %<a href='classes.html#location'>location</a>%",
"%<a href='classes.html#location'>location</a>%'[s] biome",

    "pattern_end"
  ],
  "since" : "1.4.4",
  "description" : "The biome at a certain location. Please note that biomes are only defined for x/z-columns, i.e. the <a href='#ExprAltitude'>altitude</a> (y-coordinate) doesn't matter. ",
  "examples" : "# damage player in deserts constantly\\nevery real minute:\\n    loop all players:\\n        biome at loop-player is desert\\n        damage the loop-player by 1"
},
{
  "id" : "ExprBlock",
  "name" : "Block",
  "patterns" : [
    "[the] [event-]block",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The block involved in the event, e.g. the clicked block or the placed block.\\nCan optionally include a direction as well, e.g. 'block above' or 'block in front of the player'.",
  "examples" : "block is ore\\nset block below to air\\nspawn a creeper above the block\\nloop blocks in radius 4:\\n    loop-block is obsidian\\n    set loop-block to water\\nblock is a chest:\\n    clear the inventory of the block"
},
{
  "id" : "ExprBlock",
  "name" : "Block",
  "patterns" : [
    "[the] block %<a href='classes.html#direction'>direction</a>% [%<a href='classes.html#location'>location</a>%]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The block involved in the event, e.g. the clicked block or the placed block.\\nCan optionally include a direction as well, e.g. 'block above' or 'block in front of the player'.",
  "examples" : "block is ore\\nset block below to air\\nspawn a creeper above the block\\nloop blocks in radius 4:\\n    loop-block is obsidian\\n    set loop-block to water\\nblock is a chest:\\n    clear the inventory of the block"
},
{
  "id" : "ExprBlockSphere",
  "name" : "Block Sphere",
  "patterns" : [
    "[(all [[of] the]|the)] blocks in radius %<a href='classes.html#number'>number</a>% [(of|around) %<a href='classes.html#location'>location</a>%]",
"[(all [[of] the]|the)] blocks around %<a href='classes.html#location'>location</a>% in radius %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "All blocks in a sphere around a center, mostly useful for looping.",
  "examples" : "loop blocks in radius 5 around the player:"
},
{
  "id" : "ExprBlocks",
  "name" : "Blocks",
  "patterns" : [
    "[(all [[of] the]|the)] blocks %<a href='classes.html#direction'>direction</a>% [%<a href='classes.html#location'>locations</a>%]",
"[(all [[of] the]|the)] blocks from %<a href='classes.html#location'>location</a>% [on] %<a href='classes.html#direction'>direction</a>%",
"[(all [[of] the]|the)] blocks from %<a href='classes.html#block'>block</a>% to %<a href='classes.html#block'>block</a>%",
"[(all [[of] the]|the)] blocks (within|between) %<a href='classes.html#block'>block</a>% and %<a href='classes.html#block'>block</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Blocks relative to other blocks or between other blocks. Can be used to get blocks relative to other blocks or for looping.",
  "examples" : "loop blocks above the player:\\nloop blocks between the block below the player and the targeted block:\\nset the blocks below the player, the victim and the targeted block to air"
},
{
  "id" : "ExprBookAuthor",
  "name" : "Book Author",
  "patterns" : [
    "[the] [book] (author|writer|publisher) of %<a href='classes.html#itemstack'>item stack</a>%",
"%<a href='classes.html#itemstack'>item stack</a>%'[s] [book] (author|writer|publisher)",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "The author of a book",
  "examples" : "on book sign:\\n    message \"Book Title: %author of event-item%\""
},
{
  "id" : "ExprBookPages",
  "name" : "Book Pages",
  "patterns" : [
    "[all] [the] [book] (pages|content) of %<a href='classes.html#itemstack'>item stack</a>%",
"%<a href='classes.html#itemstack'>item stack</a>%'s [book] (pages|content)",
"[book] page %<a href='classes.html#number'>number</a>% of %<a href='classes.html#itemstack'>item stack</a>%",
"%<a href='classes.html#itemstack'>item stack</a>%'s [book] page %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "The pages of a book",
  "examples" : "on book sign:\\n    message \"Book Pages: %pages of event-item%\"\\n   message \"Book Page 1: %page 1 of event-item%\""
},
{
  "id" : "ExprBookTitle",
  "name" : "Book Title",
  "patterns" : [
    "[the] (book name|title) of %<a href='classes.html#itemstack'>item stack</a>%",
"%<a href='classes.html#itemstack'>item stack</a>%'[s] (book name|title)",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "The title of a book",
  "examples" : "on book sign:\\n    message \"Book Title: %title of event-item%\""
},
{
  "id" : "ExprChatFormat",
  "name" : "Chat Format",
  "patterns" : [
    "[the] (message|chat) format[ting]",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Can be used to get/retrieve the chat format. The sender of a message is represented by [player] or [sender], and the message by [message] or [msg].",
  "examples" : "set the chat format to \"<yellow>[player]<light gray>: <green>[message]\""
},
{
  "id" : "ExprChatRecipients",
  "name" : "Chat Recipients",
  "patterns" : [
    "[chat][( |-)]recipients",

    "pattern_end"
  ],
  "since" : "2.2-Fixes-v7, 2.2-dev35 (clearing recipients)",
  "description" : "Recipients of chat events where this is called.",
  "examples" : "chat recipients"
},
{
  "id" : "ExprChunk",
  "name" : "Chunk",
  "patterns" : [
    "[the] chunk[s] (of|%<a href='classes.html#direction'>directions</a>%) %<a href='classes.html#location'>locations</a>%",
"%<a href='classes.html#location'>locations</a>%'[s] chunk[s]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The <a href='../classes/#chunk'>chunk</a> a block, location or entity is in",
  "examples" : "add the chunk at the player to {protected chunks::*}"
},
{
  "id" : "ExprClicked",
  "name" : "Clicked Block/Entity/Inventory/Slot",
  "patterns" : [
    "[the] ( clicked (block|%*<a href='classes.html#itemtype'>item type</a>/<a href='classes.html#entitydata'>entity type</a>%)|clicked slot|clicked inventory|click (type|action)|inventory action)",

    "pattern_end"
  ],
  "since" : "1.0, 2.2-dev35 (more clickable things)",
  "description" : "The clicked block, entity, inventory slot, inventory, type or action.",
  "examples" : "message \"You clicked on a %type of clicked entity%!\"\\nclicked block is a chest:\\n    show the inventory of the clicked block to the player"
},
{
  "id" : "ExprColorOf",
  "name" : "Colour of",
  "patterns" : [
    "[the] colo[u]r[s] of %<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#entity'>entities</a>%'[s] colo[u]r[s]",

    "pattern_end"
  ],
  "since" : "1.2",
  "description" : "The <a href='../classes/#color'>colour</a> of an item, can also be used to colour chat messages with \"&lt;%colour of ...%&gt;this text is coloured!\".",
  "examples" : "on click on wool:\\n    message \"This wool block is <%colour of block%>%colour of block%<reset>!\"\\n    set the colour of the block to black"
},
{
  "id" : "ExprColoured",
  "name" : "Coloured / Uncoloured",
  "patterns" : [
    "(colo[u]r-|colo[u]red )%<a href='classes.html#string'>texts</a>%",
"(un|non)[-](colo[u]r-|colo[u]red )%<a href='classes.html#string'>texts</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Parses &lt;colour&gt;s (including chat styles) in a message or removes any colours & chat styles from the message.",
  "examples" : "on chat:\\n    set message to coloured message\\ncommand /fade <player>:\\n    trigger:\\n        set display name of the player-argument to uncoloured display name of the player-argument"
},
{
  "id" : "ExprCommand",
  "name" : "Command",
  "patterns" : [
    "[the] (full|complete|whole) command",
"[the] command [label]",
"[the] arguments",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The command that caused an 'on command' event (excluding the leading slash and all arguments)",
  "examples" : "# prevent any commands except for the /exit command during some game\\non command:\\n{game.%player%.is playing} is true\\ncommand is not \"exit\"\\nmessage \"You're not allowed to use commands during the game\"\\ncancel the event"
},
{
  "id" : "ExprCommandSender",
  "name" : "Command Sender",
  "patterns" : [
    "[the] [command['s]] (sender|executor)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The player or the console who sent a command. Mostly useful in <a href='../commands/'>commands</a> and <a href='../events/#command'>command events</a>.",
  "examples" : "make the command sender execute \"/say hi!\"\\non command:\\n    log \"%executor% used command /%command% %arguments%\" to \"commands.log\""
},
{
  "id" : "ExprCompassTarget",
  "name" : "Compass Target",
  "patterns" : [
    "[the] compass target of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] compass target",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The location a player's compass is pointing at.",
  "examples" : "# make all player's compasses target a player stored in {compass target.%player%}\\nevery 5 seconds:\\n    loop all players:\\n        set the loop-player's compass target to location of {compass target.%loop-player%}"
},
{
  "id" : "LitConsole",
  "name" : "Console",
  "patterns" : [
    "[the] (console|server)",

    "pattern_end"
  ],
  "since" : "1.3.1",
  "description" : "Represents the server's console which can receive messages and execute commands",
  "examples" : "execute console command \"/stop\"\\nsend \"message to console\" to the console"
},
{
  "id" : "ExprCmdCooldownInfo",
  "name" : "Cooldown Time/Remaining Time/Elapsed Time/Last Usage Date/Cooldown Bypass Permission",
  "patterns" : [
    "[the] (remaining [time]|elapsed [time]|cooldown [time] [length]|last usage [date]|cooldown bypass perm[ission]) [of] [the] [(cooldown|wait)] [((of|for)[the] [current] command)]",

    "pattern_end"
  ],
  "since" : "2.2-dev33",
  "description" : "Only usable in command events. Represents the cooldown time, the remaining time, or the elapsed time, or the last usage date, or the cooldown bypass permission.",
  "examples" : "command /home:\\n    cooldown: 10 seconds\\n    cooldown message: You last teleported home %elapsed time% ago, you may teleport home again in %remaining time%\\n    trigger:\\n        teleport player to {home::%player%}"
},
{
  "id" : "ExprCoordinate",
  "name" : "Coordinate",
  "patterns" : [
    "[the] (x|y|z)(-| )(coord[inate]|pos[ition]|loc[ation])[s] of %<a href='classes.html#location'>locations</a>%",
"%<a href='classes.html#location'>locations</a>%'[s] (x|y|z)(-| )(coord[inate]|pos[ition]|loc[ation])[s]",

    "pattern_end"
  ],
  "since" : "1.4.3",
  "description" : "Represents a given coordinate of a location. ",
  "examples" : "player's y-coordinate is smaller than 40:\\n    message \"Watch out for lava!\""
},
{
  "id" : "ExprEntity",
  "name" : "Creature/Entity/Player/Projectile/Villager/Powered Creeper/etc.",
  "patterns" : [
    "[the] [event-]&lt;.+&gt;",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The entity involved in an event (an entity is a player, a creature or an inanimate object like ignited TNT, a dropped item or an arrow).\\nYou can use the specific type of the entity that's involved in the event, e.g. in a 'death of a creeper' event you can use 'the creeper' instead of 'the entity'.",
  "examples" : "give a diamond sword of sharpness 3 to the player\\nkill the creeper\\nkill all powered creepers in the wolf's world\\nprojectile is an arrow"
},
{
  "id" : "ExprCursorSlot",
  "name" : "Cursor Slot",
  "patterns" : [
    "[the] cursor slot of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] cursor slot",

    "pattern_end"
  ],
  "since" : "2.2-dev17",
  "description" : "The item which player has on their cursor. This slot is always empty if player has no inventories open.",
  "examples" : "cursor slot of player is dirt\\nset cursor slot of player to 64 diamonds"
},
{
  "id" : "ExprChestInventory",
  "name" : "Custom Chest Inventory",
  "patterns" : [
    "[a [new]] chest inventory (named|with name) %<a href='classes.html#string'>text</a>% [with %<a href='classes.html#number'>number</a>% row[s]]",
"[a [new]] chest inventory with %<a href='classes.html#number'>number</a>% row[s] [(named|with name) %<a href='classes.html#string'>text</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Returns a chest inventory with the given amount of rows and the name. Use the <a href=effects.html#EffOpenInventory>open inventory</a>effect to open it.",
  "examples" : "open chest inventory with 1 rows named \"test\"\\nset {_inventory} to chest inventory with 1 row"
},
{
  "id" : "ExprDamage",
  "name" : "Damage",
  "patterns" : [
    "[the] damage",

    "pattern_end"
  ],
  "since" : "1.3.5",
  "description" : "How much damage is done in a damage event, possibly ignoring armour, criticals and/or enchantments. Can be changed (remember that in Skript '1' is one full heart, not half a heart).",
  "examples" : "increase the damage by 2"
},
{
  "id" : "ExprDamageCause",
  "name" : "Damage Cause",
  "patterns" : [
    "[the] damage (cause|type)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The <a href='../classes/#damagecause'>damage cause</a> of a damage event. Please click on the link for more information.",
  "examples" : "damage cause is lava, fire or burning"
},
{
  "id" : "ExprDurability",
  "name" : "Data Value",
  "patterns" : [
    "[the] ((data|damage)[s] [value[s]]|durabilit(y|ies)) of %<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#slot'>slots</a>%",
"%<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#slot'>slots</a>%'[s] ((data|damage)[s] [value[s]]|durabilit(y|ies))",

    "pattern_end"
  ],
  "since" : "1.2",
  "description" : "The data value of an item.\\nYou usually don't need this expression as you can check and set items with aliases easily, but this expression can e.g. be used to \"add 1 to data of &lt;item&gt;\", e.g. for cycling through all wool colours.",
  "examples" : "add 1 to the data value of the clicked block"
},
{
  "id" : "ExprDateAgoLater",
  "name" : "Date Ago/Later",
  "patterns" : [
    "%<a href='classes.html#timespan'>time span</a>% (ago|in the past|before [the] [date] %<a href='classes.html#date'>date</a>%)",
"%<a href='classes.html#timespan'>time span</a>% (later|(from|after) [the] [date] %<a href='classes.html#date'>date</a>%)",

    "pattern_end"
  ],
  "since" : "2.2-dev33",
  "description" : "A date the specified timespan before/after another date.",
  "examples" : "set {_yesterday} to 1 day ago"
},
{
  "id" : "ExprDefaultValue",
  "name" : "Default Value",
  "patterns" : [
    "%<a href='classes.html#object'>objects</a>% (otherwise|?) %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "A shorthand expression for giving things a default value. If the first thing isn't set, the second thing will be returned.",
  "examples" : "broadcast {score::%player's uuid%} otherwise \"%player% has no score!\""
},
{
  "id" : "ExprDifference",
  "name" : "Difference",
  "patterns" : [
    "difference (between|of) %<a href='classes.html#object'>object</a>% and %<a href='classes.html#object'>object</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "The difference between two values, e.g. <a href='../classes/#number'>numbers</a>, <a href='../classes/#date'>dates</a> or <a href='../classes/#time'>times</a>.",
  "examples" : "difference between {command.%player%.lastuse} and now is smaller than a minute:\\n  message \"You have to wait a minute before using this command again!\"\\n  stop"
},
{
  "id" : "ExprDirection",
  "name" : "Direction",
  "patterns" : [
    "[%<a href='classes.html#number'>number</a>% [[(block|met(er|re))[s]] [to the]] (north[(-| )][(east|west)][(ward(s|ly)]|er[(n|ly)])] [of]|south[[(-| )][(east|west)][(ward(s|ly)]|er[(n|ly)])] [of]|[(east|west)[(ward(s|ly)]|er[(n|ly)])] [of]|above|over|[(up|down)[ward(s|ly)]]|below|under[neath]|beneath) [%<a href='classes.html#direction'>direction</a>%]",
"[%<a href='classes.html#number'>number</a>% [[(block|met(er|re))[s]]] in [the] (direction|horizontal direction|facing|horizontal facing) of %<a href='classes.html#entity'>entity</a>/<a href='classes.html#block'>block</a>% (of|from)]",
"[%<a href='classes.html#number'>number</a>% [[(block|met(er|re))[s]]] in %<a href='classes.html#entity'>entity</a>/<a href='classes.html#block'>block</a>%'[s] (direction|horizontal direction|facing|horizontal facing) (of|from)]",
"[%<a href='classes.html#number'>number</a>% [(block|met(er|re))[s]]] (in[ ]front [of]|forward[s]|behind|backwards|[to the] (right|left) [of])",
"[%<a href='classes.html#number'>number</a>% [(block|met(er|re))[s]]] horizontal[ly] (in[ ]front [of]|forward[s]|behind|backwards|to the (right|left) [of])",

    "pattern_end"
  ],
  "since" : "1.0 (basic), 2.0 (extended)",
  "description" : "A helper expression for the <a href='classes.html#direction'>direction type</a>.",
  "examples" : "thrust the player upwards\\nset the block behind the player to water\\nloop blocks above the player:\\n    set {_rand} to a random integer between 1 and 10\\n    set the block {_rand} meters south east of the loop-block to stone\\nblock in horizontal facing of the clicked entity from the player is air\\nspawn a creeper 1.5 meters horizontally behind the player\\nspawn a TNT 5 meters above and 2 meters horizontally behind the player\\nthrust the last spawned TNT in the horizontal direction of the player with speed 0.2\\npush the player upwards and horizontally forward at speed 0.5\\npush the clicked entity in in the direction of the player at speed -0.5\\nopen the inventory of the block 2 blocks below the player to the player\\nteleport the clicked entity behind the player\\ngrow a regular tree 2 meters horizontally behind the player"
},
{
  "id" : "ExprDistance",
  "name" : "Distance",
  "patterns" : [
    "[the] distance between %<a href='classes.html#location'>location</a>% and %<a href='classes.html#location'>location</a>%",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The distance between two points.",
  "examples" : "distance between the player and {%player%.home} is smaller than 20:\\n    message \"You're very close to your home!\""
},
{
  "id" : "ExprDrops",
  "name" : "Drops",
  "patterns" : [
    "[the] drops",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "Only works in death events. Holds the drops of the dying creature. Drops can be prevented by removing them with \"remove ... from drops\", e.g. \"remove all pickaxes from the drops\", or \"clear drops\" if you don't want any drops at all.",
  "examples" : "clear drops\\nremove 4 planks from the drops"
},
{
  "id" : "ExprElement",
  "name" : "Element of",
  "patterns" : [
    "([the] first|[the] last|[a] random|%<a href='classes.html#number'>number</a>%(st|nd|rd|th)) element [out] of %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The first, last or a random element of a set, e.g. a list variable.\\nSee also: <a href='#ExprRandom'>random</a>",
  "examples" : "give a random element out of {free items::*} to the player"
},
{
  "id" : "ExprEnchantmentLevel",
  "name" : "Enchantment Level",
  "patterns" : [
    "[the] (%<a href='classes.html#enchantment'>enchantment</a>% level|level of [[the] enchant[ment]] %<a href='classes.html#enchantment'>enchantment</a>%) o(f|n) %<a href='classes.html#itemtype'>item types</a>%",
"%<a href='classes.html#itemtype'>item types</a>%'[s] (%<a href='classes.html#enchantment'>enchantment</a>% level|level of [[the] enchant[ment]] %<a href='classes.html#enchantment'>enchantment</a>%)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The level of a particular <a href='classes.html#enchantment'>enchantment</a> on an item",
  "examples" : "player' tool is a sword of sharpness:\\n    message \"You have a sword of sharpness %level of sharpness of the player's tool% equipped\""
},
{
  "id" : "ExprEnderChest",
  "name" : "Ender Chest",
  "patterns" : [
    "[the] ender[ ]chest[s] of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] ender[ ]chest[s]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The ender chest of a player",
  "examples" : "open the player's ender chest to the player"
},
{
  "id" : "ExprEntities",
  "name" : "Entities",
  "patterns" : [
    "[(all [[of] the]|the)] %*<a href='classes.html#entitydata'>entity types</a>% [(in|of) [world[s]] %<a href='classes.html#world'>worlds</a>%]",
"[(all [[of] the]|the)] entities of type[s] %<a href='classes.html#entitydata'>entity types</a>% [(in|of) [world[s]] %<a href='classes.html#world'>worlds</a>%]",
"[(all [[of] the]|the)] %*<a href='classes.html#entitydata'>entity types</a>% (within|[with]in radius) %<a href='classes.html#number'>number</a>% [(block[s]|met(er|re)[s])] (of|around) %<a href='classes.html#location'>location</a>%",
"[(all [[of] the]|the)] entities of type[s] %<a href='classes.html#entitydata'>entity types</a>% in radius %<a href='classes.html#number'>number</a>% (of|around) %<a href='classes.html#location'>location</a>%",

    "pattern_end"
  ],
  "since" : "1.2.1",
  "description" : "all entities in all world, in a specific world or in a radius around a certain location, e.g. 'all players', 'all creepers in the player's world', or 'players in radius 100 of the player'.",
  "examples" : "kill all creepers in the player's world\\nsend \"Psst!\" to all players witin 100 meters of the player\\ngive a diamond to all ops\\nheal all tamed wolves in radius 2000 around {town center}"
},
{
  "id" : "ExprExhaustion",
  "name" : "Exhaustion",
  "patterns" : [
    "[the] exhaustion of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] exhaustion",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "The exhaustion of a player. This is mainly used to determine the rate of hunger depletion.",
  "examples" : "set exhaustion of all players to 1"
},
{
  "id" : "ExprExperience",
  "name" : "Experience",
  "patterns" : [
    "[the] [(spawned|dropped)] [e]xp[erience] [orb[s]]",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "How much experience was spawned in an <a href='../events/#experience_spawn'>experience spawn</a> event. Can be changed.",
  "examples" : "on experience spawn:\\n    add 5 to the spawned experience"
},
{
  "id" : "ExprFacing",
  "name" : "Facing",
  "patterns" : [
    "[the] [horizontal] facing of %<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#block'>blocks</a>%",
"%<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#block'>blocks</a>%'[s] [horizontal] facing",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "The facing of an entity or block, i.e. exactly north, south, east, west, up or down (unlike <a href='#ExprDirection'>direction</a> which is the exact direction, e.g. '0.5 south and 0.7 east')",
  "examples" : "# makes a bridge\\nloop blocks from the block below the player in the horizontal facing of the player:\\n    set block to cobblestone"
},
{
  "id" : "ExprFilter",
  "name" : "Filter",
  "patterns" : [
    "%<a href='classes.html#object'>objects</a>% (where|that match) \\[&lt;.+&gt;\\]",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Filters a list based on a condition. For example, if you ran 'broadcast \"something\" and \"something else\" where [string input is \"something\"]only \"something\" would be broadcast as it is the only string that matched the condition.",
  "examples" : "send \"congrats on being staff!\" to all players where [player input has permission \"staff\"]"
},
{
  "id" : "ExprInput",
  "name" : "Filter Input",
  "patterns" : [
    "[%<a href='classes.html#classinfo'>type</a>%] input",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Represents the input in a filter expression. For example, if you ran 'broadcast \"something\" and \"something else\" where [string input is \"something\"]the condition would be checked twice, using \"something\" and \"something else\" as the inputs.",
  "examples" : "send \"congrats on being staff!\" to all players where [player input has permission \"staff\"]"
},
{
  "id" : "ExprFinalDamage",
  "name" : "Final Damage",
  "patterns" : [
    "[the] final damage",

    "pattern_end"
  ],
  "since" : "2.2-dev19",
  "description" : "How much damage is done in a damage event, considering all types of damage reduction. Can NOT be changed.",
  "examples" : "send \"%final damage%\" to victim"
},
{
  "id" : "ExprFlightMode",
  "name" : "Flight Mode",
  "patterns" : [
    "[the] fl(y[ing]|ight) (mode|state) of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] fl(y[ing]|ight) (mode|state)",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Whether the player(s) are allowed to fly. Use <a href=effects.html#EffMakeFly>Make Fly</a> effect to force player(s) to fly.",
  "examples" : "set flight mode of player to true\\nsend \"%flying state of all players%\""
},
{
  "id" : "ExprFoodLevel",
  "name" : "Food Level",
  "patterns" : [
    "[the] (food|hunger)[[ ](level|met(er|re)|bar)] [of %<a href='classes.html#player'>player</a>%]",
"%<a href='classes.html#player'>player</a>%'[s] (food|hunger)[[ ](level|met(er|re)|bar)]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The food level of a player from 0 to 10. Has several aliases: food/hunger level/meter/bar. ",
  "examples" : "set the player's food level to 10"
},
{
  "id" : "ExprFormatTime",
  "name" : "Formatted time",
  "patterns" : [
    "%<a href='classes.html#date'>dates</a>% formatted [human-readable] [(with|as) %<a href='classes.html#string'>text</a>%]",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Converts date to human-readable text format. By default, yyyy-MM-dd HH:mm:ss z will be used. For reference, see this <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">Wikipedia article</a>.",
  "examples" : "now formatted human-readable"
},
{
  "id" : "ExprTimeState",
  "name" : "Former/Future State",
  "patterns" : [
    "[the] (former|past|old) [state] [of] %~<a href='classes.html#object'>object</a>%",
"%~<a href='classes.html#object'>object</a>% before [the event]",
"[the] (future|to-be|new) [state] [of] %~<a href='classes.html#object'>object</a>%",
"%~<a href='classes.html#object'>object</a>%(-to-be| after[(wards| the event)])",

    "pattern_end"
  ],
  "since" : "1.1",
  "description" : "Represents the value of an expression before an event happened or the value it will have directly after the event, e.g. the old or new level respectively in a <a href='../events/#level_change'>level change event</a>.\\nNote: The past, future and present states of an expression are sometimes called 'time states' of an expression.\\nNote 2: If you don't specify whether to use the past or future state of an expression that has different values, its default value will be used which is usually the value after the event.",
  "examples" : "on teleport:\\n    former world was \"world_nether\" # or 'world was'\\n    world will be \"world\" # or 'world after the event is'\\non tool change:\\n    past tool is an axe\\n    the tool after the event will be air\\non weather change:\\n    set {weather.%world%.old} to past weather\\n    set {weather.%world%.current} to the new weather"
},
{
  "id" : "ExprFurnaceSlot",
  "name" : "Furnace Slot",
  "patterns" : [
    "[the] (ore|fuel|result)[s] [slot[s]] of %<a href='classes.html#block'>blocks</a>%",
"%<a href='classes.html#block'>blocks</a>%'[s] (ore|fuel|result)[s] [slot[s]]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "A slot of a furnace, i.e. either the ore, fuel or result slot.\\nRemember to use '<a href='#ExprBlock'>block</a>' and not 'furnace', as 'furnace' is not an existing expression.",
  "examples" : "set the fuel slot of the clicked block to a lava bucket\\nset the block's ore slot to 64 iron ore\\ngive the result of the block to the player\\nclear the result slot of the block"
},
{
  "id" : "ExprGameMode",
  "name" : "Game Mode",
  "patterns" : [
    "[the] game[ ]mode of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] game[ ]mode",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The gamemode of a player.",
  "examples" : "player's gamemode is survival\\nset the player's gamemode to creative"
},
{
  "id" : "ExprGlidingState",
  "name" : "Gliding State",
  "patterns" : [
    "[the] (gliding|glider) [state] of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] (gliding|glider) [state]",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "Sets of gets gliding state of player. It allows you to set gliding state of entity even if they do not have <a href=\"http://minecraft.gamepedia.com/Elytra\">Elytra</a> equipped.",
  "examples" : "set gliding of player to off"
},
{
  "id" : "ExprGlowing",
  "name" : "Glowing",
  "patterns" : [
    "[the] glowing of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] glowing",

    "pattern_end"
  ],
  "since" : "2.2-dev18",
  "description" : "Indicates if targeted entity is glowing (new 1.9 effect) or not. Glowing entities can be seen through walls.",
  "examples" : "set glowing of player on"
},
{
  "id" : "ExprGravity",
  "name" : "Gravity",
  "patterns" : [
    "[the] gravity of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] gravity",

    "pattern_end"
  ],
  "since" : "2.2-dev21",
  "description" : "If entity is affected by gravity or not, i.e. if it has Minecraft 1.10+ NoGravity flag.",
  "examples" : "set gravity of player off"
},
{
  "id" : "ExprGroup",
  "name" : "Group",
  "patterns" : [
    "[the] group[(s)] of %<a href='classes.html#offlineplayer'>offline players</a>%",
"%<a href='classes.html#offlineplayer'>offline players</a>%'[s] group[(s)]",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "The primary group or all groups of a player. This expression requires Vault and a compatible permissions plugin to be installed.",
  "examples" : "on join:\\nbroadcast \"%group of player%\" # this is the player's primary group\\nbroadcast \"%groups of player%\" # this is all of the player's groups"
},
{
  "id" : "ExprHash",
  "name" : "Hash",
  "patterns" : [
    "%<a href='classes.html#string'>texts</a>% hash[ed] with (MD5|SHA-256)",

    "pattern_end"
  ],
  "since" : "2.0, 2.2-dev32 (SHA-256 algorithm)",
  "description" : "Hashes the given text using the MD5 or SHA-256 algorithms. Each algorithm is suitable for different use cases.<p>\\nMD5 is provided mostly for backwards compatibility, as it is outdated and not secure. \\nSHA-256 is more secure, and can used to hash somewhat confidental data like IP addresses and even passwords. \\nIt is not <i>that</i> secure out of the box, so please consider using salt when dealing with passwords! \\nWhen hashing data, you <strong>must</strong> specify algorithms that will be used for security reasons! \\n<p>Please note that a hash cannot be reversed under normal circumstanses. You will not be able to get original value from a hash with Skript.",
  "examples" : "command /setpass <text>:\\n    trigger:\\n        set {password.%player%} to text-argument hashed with SHA-256\\ncommand /login <text>:\\n    trigger:\\n        {password.%player%} is text-argument hashed with SHA-256:\\n            message \"Login successful.\"\\n        else:\\n            message \"Wrong password!\""
},
{
  "id" : "ExprEyeLocation",
  "name" : "Head location",
  "patterns" : [
    "[the] (head|eye[s]) [location[s]] of %<a href='classes.html#livingentity'>living entities</a>%",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] (head|eye[s]) [location[s]]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The location of an entity's head, mostly useful for players and e.g. looping blocks in the player's line of sight.\\nPlease note that this location is only accurate for entities whose head is exactly above their center, i.e. players, endermen, zombies, skeletons, etc., but not sheep, pigs or cows.",
  "examples" : "set the block at the player's head to air\\nset the block in front of the player's eyes to glass\\nloop blocks in front of the player's head:"
},
{
  "id" : "ExprHealth",
  "name" : "Health",
  "patterns" : [
    "[the] health of %<a href='classes.html#livingentity'>living entities</a>%",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] health",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The health of a creature, e.g. a player, mob, villager, etc. from 0 to the creature's max health, e.g. 10 for players.",
  "examples" : "message \"You have %health% HP left.\""
},
{
  "id" : "ExprHighestSolidBlock",
  "name" : "Highest Solid Block",
  "patterns" : [
    "highest [(solid|non-air)] block at %<a href='classes.html#location'>locations</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Returns the highest solid block at the x and z coordinates of the world of given location",
  "examples" : "highest block at location of arg-player"
},
{
  "id" : "ExprHotbarSlot",
  "name" : "Hotbar Slot",
  "patterns" : [
    "[the] [([currently] selected|current)] hotbar slot of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] [([currently] selected|current)] hotbar slot",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "The slot number of the currently selected hotbar slot.",
  "examples" : "message \"%player's current hotbar slot%\"\\nset player's selected hotbar slot to slot 4 of player"
},
{
  "id" : "ExprHumidity",
  "name" : "Humidity",
  "patterns" : [
    "[the] humidit(y|ies) of %<a href='classes.html#block'>blocks</a>%",
"%<a href='classes.html#block'>blocks</a>%'[s] humidit(y|ies)",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "Humidity of given blocks",
  "examples" : ""
},
{
  "id" : "ExprIP",
  "name" : "IP",
  "patterns" : [
    "IP[s][( |-)address[es]] of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] IP[s][( |-)address[es]]",

    "pattern_end"
  ],
  "since" : "1.4, 2.2-dev26 (when used in connect event)",
  "description" : "The IP address of a player.",
  "examples" : "IP-ban the player # is equal to the next line\\nban the IP-address of the player\\nbroadcast \"Banned the IP %IP of player%\""
},
{
  "id" : "ExprIdOf",
  "name" : "Id",
  "patterns" : [
    "[the] id[s] of %<a href='classes.html#itemtype'>item type</a>%",
"%<a href='classes.html#itemtype'>item type</a>%'[s] id[s]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The id of a specific item. You usually don't need this expression as you can likely do everything with aliases.",
  "examples" : "message \"the ID of %type of the clicked block% is %id of the clicked block%.\""
},
{
  "id" : "ExprIndexOf",
  "name" : "Index Of",
  "patterns" : [
    "[the] [(first|last)] index of %<a href='classes.html#string'>text</a>% in %<a href='classes.html#string'>text</a>%",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "The first or last index of a character (or text) in a text, or -1 if it doesn't occur in the text. Indices range from 1 to the <a href='#ExprIndexOf'>length</a> of the text.",
  "examples" : "set {_@} to the first index of \"@\" in the text argument\\nif {_s} contains \"abc\":\\n    set {_s} to the first (index of \"abc\" in {_s} + 3) characters of {_s} # removes everything after the first \"abc\" from {_s}"
},
{
  "id" : "ExprInventory",
  "name" : "Inventory",
  "patterns" : [
    "[the] inventor(y|ies) of %inventoryholders%",
"%inventoryholders%'[s] inventor(y|ies)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The inventory of a block or player. You can usually omit this expression and can directly add or remove items to/from blocks or players.",
  "examples" : "add a plank to the player's inventory\\nclear the player's inventory\\nremove 5 wool from the inventory of the clicked block"
},
{
  "id" : "ExprInventoryAction",
  "name" : "Inventory Action",
  "patterns" : [
    "[the] inventory action",

    "pattern_end"
  ],
  "since" : "2.2-dev16",
  "description" : "The <a href='../classes/#inventoryaction'>inventory action</a> of an inventory event. Please click on the link for more information.",
  "examples" : "inventory action is pickup all"
},
{
  "id" : "ExprInventoryInfo",
  "name" : "Inventory Holder/Viewers/Rows",
  "patterns" : [
    "[the] (holder[s]|viewers|[amount of] rows) of %<a href='classes.html#inventory'>inventories</a>%",
"%<a href='classes.html#inventory'>inventories</a>%'[s] (holder[s]|viewers|[amount of] rows)",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "Gets the rows/size/viewers/holder of an inventory.",
  "examples" : "event-inventory's amount of rows\\nholder of player's top inventory\\n{_inventory}'s viewers"
},
{
  "id" : "ExprInventorySlot",
  "name" : "Inventory Slot",
  "patterns" : [
    "[the] slot[s] %<a href='classes.html#number'>numbers</a>% of %<a href='classes.html#inventory'>inventory</a>%",
"%<a href='classes.html#inventory'>inventory</a>%'[s] slot[s] %<a href='classes.html#number'>numbers</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev24",
  "description" : "Represents a slot in a inventory. It can be used to change the item in a inventory too.",
  "examples" : "if slot 0 of player is air:\\n    set slot 0 of player to 2 stones\\n    remove 1 stone from slot 0 of player\\n    add 2 stones to slot 0 of player\\n    clear slot 1 of player"
},
{
  "id" : "ExprItem",
  "name" : "Item",
  "patterns" : [
    "[the] item",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "The item involved in an event, e.g. in a drop, dispense, pickup or craft event.",
  "examples" : "on dispense:\\n    item is a clock\\n    set the time to 6:00"
},
{
  "id" : "ExprItemAmount",
  "name" : "Item Amount",
  "patterns" : [
    "[the] item[[ ]stack] (amount|size|number) of %<a href='classes.html#itemstack'>item stacks</a>%",
"%<a href='classes.html#itemstack'>item stacks</a>%'[s] item[[ ]stack] (amount|size|number)",

    "pattern_end"
  ],
  "since" : "2.2-dev24",
  "description" : "The amount of an <a href='classes.html#itemstack'>item stack</a>.",
  "examples" : "send \"You have got %item amount of player's tool% %player's tool% in your hand !\" to player"
},
{
  "id" : "ExprEnchantments",
  "name" : "Item Enchantments",
  "patterns" : [
    "[the] enchantments of %<a href='classes.html#itemtype'>item types</a>%",
"%<a href='classes.html#itemtype'>item types</a>%'[s] enchantments",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "All the enchantments an <a href='classes.html#itemtype>item type</a> has.",
  "examples" : "clear enchantments of event-item"
},
{
  "id" : "ExprItemFrameSlot",
  "name" : "Item of an Entity",
  "patterns" : [
    "[the] item of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] item",

    "pattern_end"
  ],
  "since" : "2.2-dev35, 2.2-dev36 (improved)",
  "description" : "An item associated with an entity. For dropped item entities, it gets, obviously, the item that was dropped. For item frames, the item inside the frame is returned. Other entities do not have items associated with them.",
  "examples" : ""
},
{
  "id" : "ExprItems",
  "name" : "Items",
  "patterns" : [
    "[(all [[of] the]|the|every)] item(s|[ ]types)",
"[(all [[of] the]|the)] items of type[s] %<a href='classes.html#itemtype'>item types</a>%",
"[(all [[of] the]|the|every)] block(s|[ ]types)",
"[(all [[of] the]|the)] blocks of type[s] %<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "Items or blocks of a specific type, useful for looping.",
  "examples" : "loop items of type ore and log:\\n    block contains loop-item\\n    message \"Theres at least one %loop-item% in this block\"\\ndrop all blocks at the player # drops one of every block at the player"
},
{
  "id" : "ExprItemsIn",
  "name" : "Items In",
  "patterns" : [
    "[(all [[of] the]|the)] items ([with]in|of|contained in|out of) [(inventor(y|ies)]) %<a href='classes.html#inventory'>inventories</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "All items in an inventory. Useful for looping or storing in a list variable.\\nPlease note that the positions of the items in the inventory are not saved, only their order is preserved.",
  "examples" : "loop all items in the player's inventory:\\n    loop-item is enchanted\\n    remove loop-item from the player\\nset {inventory.%player%} to items in the player's inventory"
},
{
  "id" : "ExprJoinSplit",
  "name" : "Join & Split",
  "patterns" : [
    "(concat[enate]|join) %<a href='classes.html#string'>texts</a>% [(with|using|by) [[the] delimiter] %<a href='classes.html#string'>text</a>%]",
"split %<a href='classes.html#string'>text</a>% (at|using|by) [[the] delimiter] %<a href='classes.html#string'>text</a>%",
"%<a href='classes.html#string'>text</a>% split (at|using|by) [[the] delimiter] %<a href='classes.html#string'>text</a>%",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "Joins several texts with a common delimiter (e.g. \", \"), or splits a text into multiple texts at a given delimiter.",
  "examples" : "message \"Online players: %join all players with \" | \"%\" # %all players% would use the default \"x, y, and z\"\\nset {_s::} to the string argument split at \",\""
},
{
  "id" : "ExprLastDamageCause",
  "name" : "Last Damage Cause",
  "patterns" : [
    "[the] last damage (cause|reason|type) of %<a href='classes.html#livingentity'>living entities</a>%",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] last damage (cause|reason|type)",

    "pattern_end"
  ],
  "since" : "2.2-Fixes-V10",
  "description" : "Cause of last damage done to an entity",
  "examples" : "set last damage cause of event-entity to fire tick"
},
{
  "id" : "ExprLastSpawnedEntity",
  "name" : "Last Spawned Entity",
  "patterns" : [
    "[the] [last[ly]] (spawned|shot) %*<a href='classes.html#entitydata'>entity type</a>%",
"[the] [last[ly]] dropped (item)",

    "pattern_end"
  ],
  "since" : "1.3 (spawned entity), 2.0 (shot entity), 2.2-dev26 (dropped item)",
  "description" : "Holds the entity that was spawned most recently with the <a href='../effects/#EffSpawn'>spawn effect</a>, drop with the <a href='../effects/#EffDrop'>drop effect</a> or shot with the <a href='../effects/#EffShoot'>shoot effect</a>. Please note that even though you can spawn multiple mobs simultaneously (e.g. with 'spawn 5 creepers'), only the last spawned mob is saved and can be used. If you spawn an entity, shoot a projectile and drop a item you can however access all them together.",
  "examples" : "spawn a priest\\nset {%spawned priest%.healer} to true\\nshoot an arrow from the last spawned entity\\nignite the shot projectile\\ndrop a diamond sword\\npush last dropped item upwards"
},
{
  "id" : "ExprLength",
  "name" : "Length",
  "patterns" : [
    "[the] length of %<a href='classes.html#string'>texts</a>%",
"%<a href='classes.html#string'>texts</a>%'[s] length",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "The length of a text, in number of characters.",
  "examples" : "set {_l} to length of the string argument"
},
{
  "id" : "ExprLevel",
  "name" : "Level",
  "patterns" : [
    "[the] level of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] level",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "The level of a player.",
  "examples" : "reduce the victim's level by 1\\nset the player's level to 0"
},
{
  "id" : "ExprLevelProgress",
  "name" : "Level Progress",
  "patterns" : [
    "[the] level progress of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] level progress",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The progress a player has made until the next level. Remember that this value is between 0 and 1, not 0 and 100!\\nChanging this value can cause a player's level to change if the resulting level progess is negative or larger than 1, e.g.<code>increase the player's level progress by 0.5</code> will make the player gain a level if his progress was more than 50%.",
  "examples" : "# use the exp bar as mana\\non rightclick with a blaze rod:\\n    player's level progress is larger than 0.2\\n    shoot a fireball from the player\\n    reduce the player's level progress by 0.2\\nevery 2 seconds:\\n    loop all players:\\n        level progress of loop-player is smaller than 0.9:\\n            increase level progress of the loop-player by 0.1\\n        else:\\n            set level progress of the loop-player to 0.99\\non xp spawn:\\n    cancel event"
},
{
  "id" : "ExprLightLevel",
  "name" : "Light Level",
  "patterns" : [
    "[(sky|sun|block)[ ]]light[ ]level [(of|%<a href='classes.html#direction'>direction</a>%) %<a href='classes.html#location'>location</a>%]",

    "pattern_end"
  ],
  "since" : "1.3.4",
  "description" : "Gets the light level at a certain location which ranges from 0 to 15.\\nIt can be separated into sunlight (15 = direct sunlight, 1-14 = indirect) and block light (torches, glowstone, etc.). The total light level of a block is the maximum of the two different light types.",
  "examples" : "# set vampire players standing in bright sunlight on fire\\nevery 5 seconds:\\n    loop all players:\\n        {vampire.%loop-player%} is true\\n        sunlight level at the loop-player is greater than 10\\n        ignite the loop-player for 5 seconds"
},
{
  "id" : "ExprLocation",
  "name" : "Location",
  "patterns" : [
    "[the] [event-](location|position)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The location where an event happened (e.g. at an entity or block), or a location <a href='#ExprDirection'>relative</a> to another (e.g. 1 meter above another location).",
  "examples" : "drop 5 apples at the event-location # exactly the same as writing 'drop 5 apples'\\nset {_loc} to the location 1 meter above the player"
},
{
  "id" : "ExprLocation",
  "name" : "Location",
  "patterns" : [
    "[the] (location|position) %<a href='classes.html#direction'>directions</a>% [%<a href='classes.html#location'>location</a>%]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The location where an event happened (e.g. at an entity or block), or a location <a href='#ExprDirection'>relative</a> to another (e.g. 1 meter above another location).",
  "examples" : "drop 5 apples at the event-location # exactly the same as writing 'drop 5 apples'\\nset {_loc} to the location 1 meter above the player"
},
{
  "id" : "ExprLocationOf",
  "name" : "Location",
  "patterns" : [
    "(location|position) of %<a href='classes.html#location'>location</a>%",
"%<a href='classes.html#location'>location</a>%'[s] (location|position)",

    "pattern_end"
  ],
  "since" : "",
  "description" : "The location of a block or entity. This not only represents the x, y and z coordinates of the location but also includes the world and the direction an entity is looking (e.g. teleporting to a saved location will make the teleported entity face the same saved direction every time).\\nPlease note that the location of an entity is at it's feet, use <a href='#ExprEyeLocation'>head location</a> to get the location of the head.",
  "examples" : "set {home.%player%} to the location of the player\\nmessage \"You home was set to %player's location% in %player's world%.\""
},
{
  "id" : "ExprLocationAt",
  "name" : "Location At",
  "patterns" : [
    "[the] (location|position) [at] [\\(][x[ ][=[ ]]]%<a href='classes.html#number'>number</a>%, [y[ ][=[ ]]]%<a href='classes.html#number'>number</a>%, [and] [z[ ][=[ ]]]%<a href='classes.html#number'>number</a>%[\\)] [[(in|of) [[the] world]] %<a href='classes.html#world'>world</a>%]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Allows to create a <a href='../classes/#location'>location</a> from three coordinates and a world.",
  "examples" : "set {_loc} to the location at arg-1, arg-2, arg-3 of the world arg-4\\ndistance between the player and the location (0, 0, 0) is less than 200"
},
{
  "id" : "ExprLoopValue",
  "name" : "Loop value",
  "patterns" : [
    "[the] loop-&lt;.+&gt;",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The currently looped value.",
  "examples" : "# countdown:\\nloop 10 times:\\n    message \"%11 - loop-number%\"\\n    wait a second\\n# generate a 10x10 floor made of randomly coloured wool below the player:\\nloop blocks from the block below the player to the block 10 east of the block below the player:\\n    loop blocks from the loop-block to the block 10 north of the loop-block:\\n        set loop-block-2 to any wool"
},
{
  "id" : "ExprLore",
  "name" : "Lore",
  "patterns" : [
    "[the] lore of %<a href='classes.html#itemstack'>item stack</a>/<a href='classes.html#itemtype'>item type</a>%",
"%<a href='classes.html#itemstack'>item stack</a>/<a href='classes.html#itemtype'>item type</a>%'[s] lore",
"[the] line %<a href='classes.html#number'>number</a>% of [the] lore of %<a href='classes.html#itemstack'>item stack</a>/<a href='classes.html#itemtype'>item type</a>%",
"[the] line %<a href='classes.html#number'>number</a>% of %<a href='classes.html#itemstack'>item stack</a>/<a href='classes.html#itemtype'>item type</a>%'[s] lore",
"[the] %<a href='classes.html#number'>number</a>%(st|nd|rd|th) line of [the] lore of %<a href='classes.html#itemstack'>item stack</a>/<a href='classes.html#itemtype'>item type</a>%",
"[the] %<a href='classes.html#number'>number</a>%(st|nd|rd|th) line of %<a href='classes.html#itemstack'>item stack</a>/<a href='classes.html#itemtype'>item type</a>%'[s] lore",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "An item's lore.",
  "examples" : "set the 1st line of the item's lore to \"<orange>Excalibur 2.0\""
},
{
  "id" : "ExprMaxHealth",
  "name" : "Max Health",
  "patterns" : [
    "[the] max[imum] health of %<a href='classes.html#livingentity'>living entities</a>%",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] max[imum] health",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The maximum health of an entity, e.g. 10 for a player",
  "examples" : "on join:\\n    set the maximum health of the player to 100\\nspawn a giant\\nset the last spawned entity's max health to 1000"
},
{
  "id" : "ExprMaxStack",
  "name" : "Maximum Stack Size",
  "patterns" : [
    "[the] max[imum] stack[[ ]size] of %<a href='classes.html#itemstack'>item stack</a>%",
"%<a href='classes.html#itemstack'>item stack</a>%'[s] max[imum] stack[[ ]size]",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "The maximum stack size of the specified material, e.g. 64 for torches, 16 for buckets, and 1 for swords.",
  "examples" : "send \"You can only pick up %max stack size of player's tool% of %type of (player's tool)%\" to player"
},
{
  "id" : "ExprMe",
  "name" : "Me",
  "patterns" : [
    "me",
"my[self]",

    "pattern_end"
  ],
  "since" : "2.1.1",
  "description" : "A 'me' expression that can be used in effect commands only.",
  "examples" : "!heal me\\n!kick myself\\n!give a diamond axe to me"
},
{
  "id" : "ExprMessage",
  "name" : "Message",
  "patterns" : [
    "[the] [chat( |-)]message",
"[the] (join|log[ ]in)( |-)message",
"[the] (quit|leave|log[ ]out|kick)( |-)message",
"[the] death( |-)message",

    "pattern_end"
  ],
  "since" : "1.4.6 (chat message), 1.4.9 (join & quit messages), 2.0 (death message)",
  "description" : "The (chat) message of a chat event, the join message of a join event, the quit message of a quit event, or the death message on a death event. This expression is mostly useful for being changed.",
  "examples" : "on chat:\\n    player has permission \"admin\"\\n    set message to \"<red>%message%\"\\n\\non first join:\\n    set join message to \"Welcome %player% to our awesome server!\"\\non join:\\n    player has played before\\n    set join message to \"Welcome back, %player%!\"\\n\\non quit:\\n    set quit message to \"%player% left this awesome server!\"\\n\\non death:\\n    set the death message to \"%player% died!\""
},
{
  "id" : "ExprMetadata",
  "name" : "Metadata",
  "patterns" : [
    "metadata [(value|tag)[s]] %<a href='classes.html#string'>texts</a>% of %<a href='classes.html#metadataholder'>types.metadataholder</a>%",
"%<a href='classes.html#metadataholder'>types.metadataholder</a>%'[s] metadata [(value|tag)[s]] %<a href='classes.html#string'>text</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Metadata is a way to store temporary data on entities, blocks and more thatdisappears after a server restart.",
  "examples" : "set metadata value \"healer\" of player to true\\nbroadcast \"%metadata value \"\"healer\"\" of player%\"\\nclear metadata value \"healer\" of player"
},
{
  "id" : "ExprBalance",
  "name" : "Money",
  "patterns" : [
    "[the] (money|balance|[bank] account) of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] (money|balance|[bank] account)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "How much virtual money a player has (can be changed). This expression requires Vault and a compatible economy plugin to be installed.",
  "examples" : "message \"You have %player's money%\" # the currency name will be added automatically\\nremove 20$ from the player's balance # replace '$' by whatever currency you use\\nadd 200 to the player's account # or omit the currency alltogether"
},
{
  "id" : "ExprPushedBlocks",
  "name" : "Moved blocks",
  "patterns" : [
    "[the] moved blocks",

    "pattern_end"
  ],
  "since" : "2.2-dev27",
  "description" : "Blocks which are moved in piston event. Cannot be used outside of piston events.",
  "examples" : "the moved blocks"
},
{
  "id" : "ExprName",
  "name" : "Name / Display Name",
  "patterns" : [
    "[the] (player|tab)[ ]list name[s] of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] (player|tab)[ ]list name[s]",

    "pattern_end"
  ],
  "since" : "1.4.6 (players' name & display name), <i>unknown</i> (player list name), 2.0 (item name), 2.2-dev20 (inventory name)",
  "description" : "Represents a player's minecraft account name, chat display name, or playerlist name, or the custom name of an item, en entity or an inventory.\\nThe differences between the different names are:\\n<ul>\\n<li>name: Minecraft account name of a player (unmodifiable), or the custom name of an item or mob (modifiable).</li>\\n<li>display name: The name of a player as displayed in the chat and messages, e.g. when including %player% in a message. This name can be changed freely and can include colour codes, and is shared among all plugins (e.g. chat plugins will use a changed name).</li>\\n<li>tab list name: The name of a player used in the player lists that usually opens with the tab key. Please note that this is limited to 16 characters, including colour codes which are counted as 2 characters each, and that no two players can have the same tab list name at the same time.</li>\\n</ul>",
  "examples" : "on join:\\n    player has permission \"name.red\"\\n    set the player's display name to \"<red>[admin]<gold>%name of player%\"\\n    set the player's tablist name to \"<green>%name of player%\"\\nset the name of the player's tool to \"Legendary Sword of Awesomeness\""
},
{
  "id" : "ExprName",
  "name" : "Name / Display Name",
  "patterns" : [
    "[the] (display|nick|chat)[ ]name[s] of %<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#slot'>slots</a>/<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#player'>players</a>/<a href='classes.html#inventory'>inventories</a>%",
"%<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#slot'>slots</a>/<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#player'>players</a>/<a href='classes.html#inventory'>inventories</a>%'[s] (display|nick|chat)[ ]name[s]",

    "pattern_end"
  ],
  "since" : "1.4.6 (players' name & display name), <i>unknown</i> (player list name), 2.0 (item name), 2.2-dev20 (inventory name)",
  "description" : "Represents a player's minecraft account name, chat display name, or playerlist name, or the custom name of an item, en entity or an inventory.\\nThe differences between the different names are:\\n<ul>\\n<li>name: Minecraft account name of a player (unmodifiable), or the custom name of an item or mob (modifiable).</li>\\n<li>display name: The name of a player as displayed in the chat and messages, e.g. when including %player% in a message. This name can be changed freely and can include colour codes, and is shared among all plugins (e.g. chat plugins will use a changed name).</li>\\n<li>tab list name: The name of a player used in the player lists that usually opens with the tab key. Please note that this is limited to 16 characters, including colour codes which are counted as 2 characters each, and that no two players can have the same tab list name at the same time.</li>\\n</ul>",
  "examples" : "on join:\\n    player has permission \"name.red\"\\n    set the player's display name to \"<red>[admin]<gold>%name of player%\"\\n    set the player's tablist name to \"<green>%name of player%\"\\nset the name of the player's tool to \"Legendary Sword of Awesomeness\""
},
{
  "id" : "ExprName",
  "name" : "Name / Display Name",
  "patterns" : [
    "[the] name[s] of %<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#slot'>slots</a>/<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#player'>players</a>/<a href='classes.html#inventory'>inventories</a>%",
"%<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#slot'>slots</a>/<a href='classes.html#livingentity'>living entities</a>/<a href='classes.html#player'>players</a>/<a href='classes.html#inventory'>inventories</a>%'[s] name[s]",

    "pattern_end"
  ],
  "since" : "1.4.6 (players' name & display name), <i>unknown</i> (player list name), 2.0 (item name), 2.2-dev20 (inventory name)",
  "description" : "Represents a player's minecraft account name, chat display name, or playerlist name, or the custom name of an item, en entity or an inventory.\\nThe differences between the different names are:\\n<ul>\\n<li>name: Minecraft account name of a player (unmodifiable), or the custom name of an item or mob (modifiable).</li>\\n<li>display name: The name of a player as displayed in the chat and messages, e.g. when including %player% in a message. This name can be changed freely and can include colour codes, and is shared among all plugins (e.g. chat plugins will use a changed name).</li>\\n<li>tab list name: The name of a player used in the player lists that usually opens with the tab key. Please note that this is limited to 16 characters, including colour codes which are counted as 2 characters each, and that no two players can have the same tab list name at the same time.</li>\\n</ul>",
  "examples" : "on join:\\n    player has permission \"name.red\"\\n    set the player's display name to \"<red>[admin]<gold>%name of player%\"\\n    set the player's tablist name to \"<green>%name of player%\"\\nset the name of the player's tool to \"Legendary Sword of Awesomeness\""
},
{
  "id" : "ExprNamed",
  "name" : "Named Item/Inventory",
  "patterns" : [
    "%<a href='classes.html#itemtype'>item type</a>/<a href='classes.html#inventorytype'>types.inventorytype</a>% (named|with name) %<a href='classes.html#string'>text</a>%",

    "pattern_end"
  ],
  "since" : "2.0, 2.2-dev34 (inventories)",
  "description" : "Directly names an item/inventory, useful for defining a named item/inventory in a script. If you want to (re)name existing items/inventories you can either use this expression or use <code>set <a href='#ExprName'>name of &lt;item/inventory&gt;</a> to &lt;text&gt;</code>.",
  "examples" : "give a diamond sword of sharpness 100 named \"<gold>Excalibur\" to the player\\nset tool of player to the player's tool named \"<gold>Wand\"\\nset the name of the player's tool to \"<gold>Wand\"\\nopen hopper inventory named \"Magic Hopper\" to player"
},
{
  "id" : "ExprNow",
  "name" : "Now",
  "patterns" : [
    "now",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "The current <a href='classes.html#date'>system time</a> of the server. Use <a href='#ExprTime'>time</a> to get the <a href='classes.html#time'>Minecraft time</a> of a world.",
  "examples" : "broadcast \"Current server time: %now%\""
},
{
  "id" : "ExprNumbers",
  "name" : "Numbers",
  "patterns" : [
    "[(all [[of] the]|the)] (numbers|integers) (between|from) %<a href='classes.html#number'>number</a>% (and|to) %<a href='classes.html#number'>number</a>%",
"%<a href='classes.html#number'>number</a>% times",

    "pattern_end"
  ],
  "since" : "1.4.6",
  "description" : "All numbers between two given numbers, useful for looping.\\nUse 'numbers' if your start is not an integer and you want to keep the fractional part of the start number constant, or use 'integers' if you only want to loop integers.\\nAn integer loop from 1 to a number x can also be written as 'loop x times'.",
  "examples" : "loop 5 times: # loops 1, 2, 3, 4, 5\\nloop numbers from 2.5 to 5.5: # loops 2.5, 3.5, 4.5, 5.5\\nloop integers from 2.9 to 5.1: # same as '3 to 5', i.e. loops 3, 4, 5"
},
{
  "id" : "ExprOfflinePlayers",
  "name" : "Offline players",
  "patterns" : [
    "[(all [[of] the]|the)] offline[ ]players",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "All player that have ever joined the server. This includes players currently online.",
  "examples" : "send \"Size of all players who have joined the server: %size of all offline players%\""
},
{
  "id" : "ExprOpenedInventory",
  "name" : "Opened Inventory",
  "patterns" : [
    "[the] (current|open|top) inventory [of %<a href='classes.html#player'>players</a>%]",
"%<a href='classes.html#player'>players</a>%'[s] (current|open|top) inventory",

    "pattern_end"
  ],
  "since" : "2.2-dev24, 2.2-dev35 (Just 'current inventory' works in player events)",
  "description" : "Return the currently opened inventory of a player.\\nIf no inventory is open, it returns the own player's crafting inventory.",
  "examples" : "set slot 1 of player's current inventory to diamond sword"
},
{
  "id" : "ExprParse",
  "name" : "Parse",
  "patterns" : [
    "%<a href='classes.html#string'>text</a>% parsed as (%*<a href='classes.html#classinfo'>type</a>%|&quot;&lt;.*&gt;&quot;)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Parses text as a given type, or as a given pattern.\\nThis expression can be used in two different ways: One which parses the entire text as a single instance of a type, e.g. as a number, and one that parses the text according to a pattern.\\nIf the given text could not be parsed, this expression will return nothing and the <a href='#ExprParseError'>parse error</a> will be set if some information is available.\\nSome notes about parsing with a pattern:\\n- The pattern must be a <a href='../patterns/'>Skript pattern</a>, e.g. percent signs are used to define where to parse which types, e.g. put a %number% or %items% in the pattern if you expect a number or some items there.\\n- You <i>have to</i> save the expression's value in a list variable, e.g. <code>set {parsed::*} to message parsed as \"...\"</code>.\\n- The list variable will contain the parsed values from all %types% in the pattern in order. If a type was plural, e.g. %items%, the variable's value at the respective index will be a list variable, e.g. the values will be stored in {parsed::1::*}, not {parsed::1}.",
  "examples" : "set {var} to line 1 parsed as number\\non chat:\\n    set {var::*} to message parsed as \"buying %items% for %money%\"\\n    if parse error is set:\\n        message \"%parse error%\"\\n    else if {var::*} is set:\\n        cancel event\\n        remove {var::2} from the player's balance\\n        give {var::1::*} to the player"
},
{
  "id" : "ExprParseError",
  "name" : "Parse Error",
  "patterns" : [
    "[the] [last] [parse] error",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The error which caused the last <a href='#ExprParse'>parse operation</a> to fail, which might not be set if a pattern was used and the pattern didn't match the provided text at all.",
  "examples" : "set {var} to line 1 parsed as integer\\nif {var} is not set:\\n    parse error is set:\\n        message \"<red>Line 1 is invalid: %last parse error%\"\\n    else:\\n        message \"<red>Please put an integer on line 1!\""
},
{
  "id" : "ExprPassenger",
  "name" : "Passenger",
  "patterns" : [
    "[the] passenger[s] of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] passenger[s]",

    "pattern_end"
  ],
  "since" : "2.0, 2.2-dev26 (Multiple passengers for 1.11.2+)",
  "description" : "The passenger of a vehicle, or the rider of a mob.\\nSee also: <a href='#ExprVehicle'>vehicle</a>\\nFor 1.11.2 and above, it returns a list of passengers and you can use all changers in it.",
  "examples" : "#for 1.11 and lower\\npassenger of the minecart is a creeper or a cow\\nthe saddled pig's passenger is a player\\n#for 1.11.2+\\npassengers of the minecart contains a creeper or a cow\\nthe boat's passenger contains a pig\\nadd a cow and a zombie to passengers of last spawned boat\\nset passengers of player's vehicle to a pig and a horse\\nremove all pigs from player's vehicle\\nclear passengers of boat"
},
{
  "id" : "ExprPing",
  "name" : "Ping",
  "patterns" : [
    "[the] ping of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] ping",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Pings of players, as Minecraft server knows them. Note that they will almost certainly be different from the ones you'd get from using ICMP echo requests. This expression is only supported on some server software.",
  "examples" : "command /ping <player=%player%>:\\n    trigger:\\n        send \"%arg-1%'s ping is %arg-1's ping%\""
},
{
  "id" : "ExprPlayerWeather",
  "name" : "Player Weather",
  "patterns" : [
    "[the] weather of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] weather",

    "pattern_end"
  ],
  "since" : "2.2-dev34",
  "description" : "The weather for a player.",
  "examples" : "set weather of arg-player to rainy\\nreset player's weather\\nif arg-player's weather is rainy"
},
{
  "id" : "ExprPotionItem",
  "name" : "Potion (item)",
  "patterns" : [
    "[((regular|normal)|(strong|upgraded|level 2)|(extended|long)) ][((splash|exploding)|lingering) ]potion of %<a href='classes.html#potioneffecttype'>potion</a>%",
"[((regular|normal)|(strong|upgraded|level 2)|(extended|long)) ][((splash|exploding)|lingering) ]%<a href='classes.html#potioneffecttype'>potion</a>% potion",
"(water bottle|bottle of water)",
"potion",

    "pattern_end"
  ],
  "since" : "unknown (2.2)",
  "description" : "Potion in item form, with advanced parameters.",
  "examples" : "strong splash potion of instant damage"
},
{
  "id" : "ExprRandom",
  "name" : "Random",
  "patterns" : [
    "[a] random %*<a href='classes.html#classinfo'>type</a>% [out] of %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "1.4.9",
  "description" : "Gets a random item out of a set, e.g. a random player out of all players online.",
  "examples" : "give a diamond to a random player out of all players\\ngive a random item out of all items to the player"
},
{
  "id" : "ExprRandomNumber",
  "name" : "Random Number",
  "patterns" : [
    "[a] random (integer|number) (from|between) %<a href='classes.html#number'>number</a>% (to|and) %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "A random number or integer between two given numbers. Use 'number' if you want any number with decimal parts, or use use 'integer' if you only want whole numbers.\\nPlease note that the order of the numbers doesn't matter, i.e. <code>random number between 2 and 1</code> will work as well as <code>random number between 1 and 2</code>.",
  "examples" : "set the player's health to a random number between 5 and 10\\nsend \"You rolled a %random integer from 1 to 6%!\" to the player"
},
{
  "id" : "ExprRawName",
  "name" : "Raw Name",
  "patterns" : [
    "(raw|minecraft|vanilla) name of %<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "unknown (2.2)",
  "description" : "Raw Minecraft material name for given item. Note that this is not guaranteed to give same results on all servers.",
  "examples" : "raw name of tool of player"
},
{
  "id" : "ExprRemainingAir",
  "name" : "Remaining Air",
  "patterns" : [
    "[the] remaining air of %<a href='classes.html#livingentity'>living entities</a>%",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] remaining air",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "How much time a player has left underwater before starting to drown.",
  "examples" : "player's remaining air is less than 3 seconds:\\n    send \"hurry, get to the surface!\" to the player"
},
{
  "id" : "ExprRespawnLocation",
  "name" : "Respawn location",
  "patterns" : [
    "[the] respawn location",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "The location that a player should respawn at. This is used within the respawn event.",
  "examples" : "on respawn:\\n    set respawn location to {example::spawn}"
},
{
  "id" : "ExprRound",
  "name" : "Rounding",
  "patterns" : [
    "[(a|the)] round[ed] down %<a href='classes.html#number'>number</a>%",
"[(a|the)] round[ed] %<a href='classes.html#number'>number</a>%",
"[(a|the)] round[ed] up %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Rounds numbers normally, up (ceiling) or down (floor) respectively",
  "examples" : "set {var} to rounded health of player\\nset line 1 of the block to round(1.5 * player's level)\\nset {_x} to floor({_y}) - ceil({_x})\\nadd rounded down argument to the player's health"
},
{
  "id" : "ExprSaturation",
  "name" : "Saturation",
  "patterns" : [
    "[the] saturation [of %<a href='classes.html#player'>players</a>%]",
"%<a href='classes.html#player'>players</a>%'[s] saturation",

    "pattern_end"
  ],
  "since" : "2.2-Fixes-v10, 2.2-dev35 (fully modifiable)",
  "description" : "The saturation of a player. If used in a player event, it can be omitted and will default to event-player.",
  "examples" : "set saturation of player to 20"
},
{
  "id" : "ExprScript",
  "name" : "Script Name",
  "patterns" : [
    "[the] script[['s] name]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Holds the current script's name (the file name without '.sk').",
  "examples" : "on script load:\\n    set {running.%script%} to true\\non script unload:\\n    set {running.%script%} to false"
},
{
  "id" : "ExprShooter",
  "name" : "Shooter",
  "patterns" : [
    "[the] shooter [of %<a href='classes.html#projectile'>projectile</a>%]",

    "pattern_end"
  ],
  "since" : "1.3.7",
  "description" : "The shooter of a projectile.",
  "examples" : "shooter is a skeleton"
},
{
  "id" : "ExprShuffledList",
  "name" : "Shuffled List",
  "patterns" : [
    "shuffled %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev32",
  "description" : "Shuffles given list randomly. This is done by replacing indices by random numbers in resulting list.",
  "examples" : "set {_list::*} to shuffled {_list::*}"
},
{
  "id" : "ExprSignText",
  "name" : "Sign Text",
  "patterns" : [
    "[the] line %<a href='classes.html#number'>number</a>% [of %<a href='classes.html#block'>block</a>%]",
"[the] (1st|first|2nd|second|3rd|third|4th|fourth) line [of %<a href='classes.html#block'>block</a>%]",

    "pattern_end"
  ],
  "since" : "1.3",
  "description" : "A line of text on a sign. Can be changed, but remember that there is a 16 character limit per line (including colour codes that use 2 characters each).",
  "examples" : "on rightclick on sign:\\n    line 2 of the clicked block is \"[Heal]\":\\n        heal the player\\n    set line 3 to \"%player%\""
},
{
  "id" : "ExprSkull",
  "name" : "Skull",
  "patterns" : [
    "[the] skull of %<a href='classes.html#offlineplayer'>offline players</a>/<a href='classes.html#entity'>entities</a>/<a href='classes.html#entitydata'>entity types</a>%",
"%<a href='classes.html#offlineplayer'>offline players</a>/<a href='classes.html#entity'>entities</a>/<a href='classes.html#entitydata'>entity types</a>%'[s] skull",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "Gets a skull item representing a player or an entity.",
  "examples" : "give the victim's skull to the attacker\\nset the block at the entity to the entity's skull"
},
{
  "id" : "ExprSlotIndex",
  "name" : "Slot Index",
  "patterns" : [
    "[the] (index|indices) of %<a href='classes.html#slot'>slots</a>%",
"%<a href='classes.html#slot'>slots</a>%'[s] (index|indices)",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "Index of an an inventory slot. Other types of slots may or may not have indices. Note that comparing slots with numbers is also possible; if index of slot is same as the number, comparisonsucceeds. This expression is mainly for the cases where you must for some reason save the slot numbers.",
  "examples" : ""
},
{
  "id" : "ExprSortedList",
  "name" : "Sorted List",
  "patterns" : [
    "sorted %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev19",
  "description" : "Sorts given list in natural order. All objects in list must be comparable; usually if you think you can compare it, it can be compared.",
  "examples" : "set {_list::*} to sorted {_list::*}"
},
{
  "id" : "ExprSpawn",
  "name" : "Spawn",
  "patterns" : [
    "[the] spawn[s] [(point|location)[s]] [of %<a href='classes.html#world'>worlds</a>%]",
"%<a href='classes.html#world'>worlds</a>%'[s] spawn[s] [(point|location)[s]]",

    "pattern_end"
  ],
  "since" : "1.4.2",
  "description" : "The spawnpoint of a world.",
  "examples" : "teleport all players to spawn\\nset the spawn point of \"world\" to the player's location"
},
{
  "id" : "ExprSpecialNumber",
  "name" : "Special Number",
  "patterns" : [
    "(NaN|[(-|minus)](infinity|∞)) value",
"value of (NaN|[(-|minus)](infinity|∞))",

    "pattern_end"
  ],
  "since" : "@VERSION@",
  "description" : "Special number values, namely NaN, Infinity and -Infinity",
  "examples" : "if {_number} is NaN value:"
},
{
  "id" : "ExprSpeed",
  "name" : "Speed",
  "patterns" : [
    "[the] (walk[ing]|fl(y[ing]|ight))[( |-])speed of %<a href='classes.html#player'>players</a>%",
"%<a href='classes.html#player'>players</a>%'[s] (walk[ing]|fl(y[ing]|ight))[( |-])speed",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "A player's walking or flying speed. Both can be changed, but values must be between -1 and 1 (excessive values will be changed to -1 or 1 respectively). Negative values reverse directions.\\nPlease note that changing a player's speed will change his FOV just like potions do.",
  "examples" : "set the player's walk speed to 1\\nincrease the argument's fly speed by 0.1"
},
{
  "id" : "ExprSubstring",
  "name" : "Subtext",
  "patterns" : [
    "[the] [(part|sub[ ](text|string)) of %<a href='classes.html#string'>texts</a>% (between|from) (ind(ex|ices)|character[s])] %<a href='classes.html#number'>number</a>% [(and|to) (index|character)] %<a href='classes.html#number'>number</a>%",
"[the] (first|last) [%<a href='classes.html#number'>number</a>%] character[s] of %<a href='classes.html#string'>texts</a>%",
"[the] %<a href='classes.html#number'>number</a>% (first|last) characters of %<a href='classes.html#string'>texts</a>%",

    "pattern_end"
  ],
  "since" : "2.1",
  "description" : "Extracts part of a text. You can either get the first &lt;x&gt; characters, the last &lt;x&gt; characters, or the characters between indices &lt;x&gt; and &lt;y&gt;. The indices &lt;x&gt; and &lt;y&gt; should be between 1 and the <a href='#ExprLength'>length</a> of the text (other values will be fit into this range).",
  "examples" : "set {_s} to the first 5 characters of the text argument\\nmessage \"%subtext of {_s} from characters 2 to (the length of {_s} - 1)%\" # removes the first and last character from {_s} and sends it to the player or console"
},
{
  "id" : "ExprTPS",
  "name" : "TPS (ticks per second)",
  "patterns" : [
    "tps from [the] last ([1] minute|1[ ]m[inute])",
"tps from [the] last 5[ ]m[inutes]",
"tps from [the] last 15[ ]m[inutes]",
"[the] tps",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "Returns the 3 most recent TPS readings, like the /tps command. This expression is only supported on some server software.",
  "examples" : "broadcast \"%tps%\""
},
{
  "id" : "ExprTamer",
  "name" : "Tamer",
  "patterns" : [
    "[the] tamer",

    "pattern_end"
  ],
  "since" : "2.2-dev25",
  "description" : "The tamer of an entity. Can only be used in entity tame events. You can use 'event-entity' to refer tamed entity itself.",
  "examples" : ""
},
{
  "id" : "ExprTarget",
  "name" : "Target",
  "patterns" : [
    "[the] target[[ed] %*<a href='classes.html#entitydata'>entity type</a>%] [of %<a href='classes.html#livingentity'>living entities</a>%]",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] target[[ed] %*<a href='classes.html#entitydata'>entity type</a>%]",

    "pattern_end"
  ],
  "since" : "<i>unknown</i> (before 2.1)",
  "description" : "For players this is the entity at the crosshair, while for mobs and experience orbs it represents the entity they are attacking/following (if any).",
  "examples" : "on entity target:\\n    entity's target is a player\\n    send \"You're being followed by an %entity%!\" to target of entity"
},
{
  "id" : "ExprTargetedBlock",
  "name" : "Targeted Block",
  "patterns" : [
    "[the] target[ed] block[s] [of %<a href='classes.html#player'>players</a>%]",
"%<a href='classes.html#player'>players</a>%'[s] target[ed] block[s]",
"[the] actual[ly] target[ed] block[s] [of %<a href='classes.html#player'>players</a>%]",
"%<a href='classes.html#player'>players</a>%'[s] actual[ly] target[ed] block[s]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The block at the crosshair. This regards all blocks that are not air as fully opaque, e.g. torches will be like a solid stone block for this expression.",
  "examples" : "# A command to set the block a player looks at to a specific type:\\ncommand /setblock <material>:\\n    trigger:\\n        set targeted block to argument"
},
{
  "id" : "ExprTeleportCause",
  "name" : "Teleport Cause",
  "patterns" : [
    "[the] teleport (cause|reason|type)",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "The <a href='../classes/#teleportcause'>teleport cause</a> within a player teleport event.",
  "examples" : "teleport cause is nether portal, end portal or end gateway"
},
{
  "id" : "ExprTemperature",
  "name" : "Temperature",
  "patterns" : [
    "[the] temperature[s] of %<a href='classes.html#block'>blocks</a>%",
"%<a href='classes.html#block'>blocks</a>%'[s] temperature[s]",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "Temperature at given block.",
  "examples" : ""
},
{
  "id" : "ExprTernary",
  "name" : "Ternary",
  "patterns" : [
    "%<a href='classes.html#object'>objects</a>% if &lt;.+&gt;[,] (otherwise|else) %<a href='classes.html#object'>objects</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev36",
  "description" : "A shorthand expression for returning something based on a condition.",
  "examples" : "set {points} to 500 if {admin::%player's uuid%} is set else 100"
},
{
  "id" : "ExprTime",
  "name" : "Time",
  "patterns" : [
    "[the] time[s] [([with]in|of) %<a href='classes.html#world'>worlds</a>%]",
"%<a href='classes.html#world'>worlds</a>%'[s] time[s]",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The <a href='classes.html#time'>time</a> of a world.",
  "examples" : "time in world is between 18:00 and 6:00:\\n    broadcast \"It's night-time, watch out for monsters!\""
},
{
  "id" : "ExprTool",
  "name" : "Tool",
  "patterns" : [
    "[the] (tool|held item|weapon) [of %<a href='classes.html#livingentity'>living entities</a>%]",
"%<a href='classes.html#livingentity'>living entities</a>%'[s] (tool|held item|weapon)",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The item a player is holding.",
  "examples" : "player is holding a pickaxe\\n# is the same as\\nplayer's tool is a pickaxe\\nplayer's off hand tool is shield #Only for Minecraft 1.9"
},
{
  "id" : "ExprTypeOf",
  "name" : "Type of",
  "patterns" : [
    "[the] type of %<a href='classes.html#entitydata'>entity types</a>/<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#inventory'>inventories</a>%",
"%<a href='classes.html#entitydata'>entity types</a>/<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#inventory'>inventories</a>%'[s] type",

    "pattern_end"
  ],
  "since" : "1.4",
  "description" : "The type of a block/item or entity. The type of an item is only it's id and data value, i.e. it ignores the amount, enchantments etc., and the type of an entity is e.g. 'wolf' or 'player'.",
  "examples" : "on rightclick on an entity:\\n    message \"This is a %type of clicked entity%!\""
},
{
  "id" : "ExprUUID",
  "name" : "UUID",
  "patterns" : [
    "[the] UUID of %<a href='classes.html#offlineplayer'>offline players</a>/<a href='classes.html#world'>worlds</a>/<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#offlineplayer'>offline players</a>/<a href='classes.html#world'>worlds</a>/<a href='classes.html#entity'>entities</a>%'[s] UUID",

    "pattern_end"
  ],
  "since" : "2.1.2, 2.2 (offline players' UUIDs), 2.2-dev24 (other entities' UUIDs)",
  "description" : "The UUID of a player, entity or world.\\nIn the future there will be an option to use a player's UUID instead of the name in variable names (i.e. when %player% is used), but for now this can be used.\\n<em>Please note that this expression does not work for offline players if you are under 1.8!</em>",
  "examples" : "# prevents people from joining the server if they use the name of a player\\n# who has played on this server at least once since this script has been added\\non login:\\n    {uuids.%name of player%} exists:\\n        {uuids.%name of player%} is not UUID of player\\n        kick player due to \"Someone with your name has played on this server before\"\\n    else:\\n        set {uuids.%name of player%} to UUID of player"
},
{
  "id" : "ExprUnbreakable",
  "name" : "Unbreakable Items",
  "patterns" : [
    "unbreakable %<a href='classes.html#itemtype'>item types</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev13b",
  "description" : "Creates unbreakable copies of given items.",
  "examples" : "unbreakable iron sword #Creates unbreakable iron sword"
},
{
  "id" : "ExprUnixTicks",
  "name" : "Unix Timestamp",
  "patterns" : [
    "[the] unix timestamp of %<a href='classes.html#date'>dates</a>%",
"%<a href='classes.html#date'>dates</a>%'[s] unix timestamp",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Converts given date to Unix timestamp. This is roughly how many seconds have elapsed since 1 January 1970.",
  "examples" : "unix timestamp of now"
},
{
  "id" : "ExprStringCase",
  "name" : "Upper/lower Case Text",
  "patterns" : [
    "%<a href='classes.html#string'>text</a>% in (upper|lower) case",
"capitalized %<a href='classes.html#string'>text</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev16",
  "description" : "Copy of given text in upper or lower case.",
  "examples" : "\"oops!\" in upper case # OOPS!"
},
{
  "id" : "ExprVectorAngleBetween",
  "name" : "Vectors - Angle between",
  "patterns" : [
    "angle between %<a href='classes.html#vector'>vector</a>% and %<a href='classes.html#vector'>vector</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets the angle between two vectors",
  "examples" : "send \"%angle between vector 1, 0, 0 and vector 0, 1, 1%\""
},
{
  "id" : "ExprVectorArithmetic",
  "name" : "Vectors - Arithmetic",
  "patterns" : [
    "%<a href='classes.html#vector'>vector</a>%[ ]++[ ]%<a href='classes.html#vector'>vector</a>%",
"%<a href='classes.html#vector'>vector</a>%[ ]--[ ]%<a href='classes.html#vector'>vector</a>%",
"%<a href='classes.html#vector'>vector</a>%[ ]**[ ]%<a href='classes.html#vector'>vector</a>%",
"%<a href='classes.html#vector'>vector</a>%[ ]//[ ]%<a href='classes.html#vector'>vector</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Arithmetic expressions for vectors",
  "examples" : "set {_v} to vector 1, 2, 3 // 5\\nset {_v} to {_v} ++ {_v}\\nset {_v} to {_v} ++ 5\\nset {_v} to {_v} -- {_v}\\nset {_v} to {_v} -- 5\\nset {_v} to {_v} ** {_v}\\nset {_v} to {_v} ** 5\\nset {_v} to {_v} // {_v}\\nset {_v} to {_v} // 5"
},
{
  "id" : "ExprVectorBetweenLocations",
  "name" : "Vectors - Between locations",
  "patterns" : [
    "vector (from|between) %<a href='classes.html#location'>location</a>% (to|and) %<a href='classes.html#location'>location</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Creates a vector between two locations",
  "examples" : "set {_v} to vector between {_loc1} and {_loc2}"
},
{
  "id" : "ExprVectorXYZ",
  "name" : "Vectors - Coordinate",
  "patterns" : [
    "(x|y|z) of %<a href='classes.html#vector'>vector</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets or sets the x, y or z coordinate of a vector",
  "examples" : "set {_v} to vector 1, 2, 3\\nsend \"%x of {_v}%, %y of {_v}%, %z of {_v}%\"\\nadd 1 to x of {_v}\\nadd 2 to y of {_v}\\nadd 3 to z of {_v}\\nsend \"%x of {_v}%, %y of {_v}%, %z of {_v}%\"\\nset x of {_v} to 1\\nset y of {_v} to 2\\nset z of {_v} to 3\\nsend \"%x of {_v}%, %y of {_v}%, %z of {_v}%\""
},
{
  "id" : "ExprVectorFromXYZ",
  "name" : "Vectors - Create from XYZ",
  "patterns" : [
    "[new] vector [(from|at|to)] %<a href='classes.html#number'>number</a>%,[ ]%<a href='classes.html#number'>number</a>%(,[ ]| and )%<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Creates a vector from an x, y and z value",
  "examples" : "set {_v} to vector 0, 1, 0"
},
{
  "id" : "ExprVectorOfLocation",
  "name" : "Vectors - Create from location",
  "patterns" : [
    "vector (of|from|to) %<a href='classes.html#location'>location</a>%",
"%<a href='classes.html#location'>location</a>%['s] vector",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Creates a vector from a location",
  "examples" : "set {_v} to vector of {_loc}"
},
{
  "id" : "ExprVectorFromYawAndPitch",
  "name" : "Vectors - Create from pitch and yaw",
  "patterns" : [
    "[new] vector from yaw %<a href='classes.html#number'>number</a>% and pitch %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Creates a vector from a yaw and pitch value",
  "examples" : "set {_v} to vector from yaw 45 and pitch 45"
},
{
  "id" : "ExprVectorCrossProduct",
  "name" : "Vectors - Cross product",
  "patterns" : [
    "%<a href='classes.html#vector'>vector</a>% cross %<a href='classes.html#vector'>vector</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets the cross product between two vectors",
  "examples" : "send \"%vector 1, 0, 0 cross vector 0, 1, 0%\""
},
{
  "id" : "ExprVectorCylindrical",
  "name" : "Vectors - Cylindrical shape",
  "patterns" : [
    "[new] cylindrical vector [(from|with)] [radius] %<a href='classes.html#number'>number</a>%, [yaw] %<a href='classes.html#number'>number</a>%(,| and) [height] %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Forms a 'cylindrical shaped' vector using yaw to manipulate the current point",
  "examples" : "loop 360 times:\\n    set {_v} to cylindrical vector radius 1, yaw loop-value, height 2\\nset {_v} to cylindrical vector radius 1, yaw 90, height 2"
},
{
  "id" : "ExprVectorDotProduct",
  "name" : "Vectors - Dot product",
  "patterns" : [
    "%<a href='classes.html#vector'>vector</a>% dot %<a href='classes.html#vector'>vector</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets the dot product between two vectors",
  "examples" : "set {_v} to {_v2} dot {_v3}"
},
{
  "id" : "ExprVectorLength",
  "name" : "Vectors - Length",
  "patterns" : [
    "(vector|standard|normal) length of %<a href='classes.html#vector'>vector</a>%",
"%<a href='classes.html#vector'>vector</a>%['s] (vector|standard|normal) length",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets or sets the length of a vector",
  "examples" : "send \"%standard length of vector 1, 2, 3%\"\\nset {_v} to vector 1, 2, 3\\nset standard length of {_v} to 2\\nsend \"%standard length of {_v}%\""
},
{
  "id" : "ExprLocationVectorOffset",
  "name" : "Vectors - Location vector offset",
  "patterns" : [
    "%<a href='classes.html#location'>location</a>%[ ]~[~][ ]%<a href='classes.html#vector'>vectors</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Offset a location by a vector",
  "examples" : "set {_loc} to {_loc} ~ {_v}"
},
{
  "id" : "ExprVectorNormalize",
  "name" : "Vectors - Normalize",
  "patterns" : [
    "normalize %<a href='classes.html#vector'>vector</a>%",
"%<a href='classes.html#vector'>vector</a>% normalized",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Normalizes a vector",
  "examples" : "set {_v} to {_v} normalized"
},
{
  "id" : "ExprVectorRandom",
  "name" : "Vectors - Random",
  "patterns" : [
    "random vector",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Creates a random vector",
  "examples" : "set {_v} to random vector"
},
{
  "id" : "ExprVectorSpherical",
  "name" : "Vectors - Spherical shape",
  "patterns" : [
    "[new] spherical vector [(from|with)] [radius] %<a href='classes.html#number'>number</a>%, [yaw] %<a href='classes.html#number'>number</a>%(,| and) [pitch] %<a href='classes.html#number'>number</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Forms a 'spherical shaped' vector using yaw and pitch to manipulate the current point",
  "examples" : "loop 360 times:\\n    set {_v} to spherical vector radius 1, yaw loop-value, pitch loop-value\\nset {_v} to spherical vector radius 1, yaw 45, pitch 90"
},
{
  "id" : "ExprVectorSquaredLength",
  "name" : "Vectors - Squared length",
  "patterns" : [
    "squared length of %<a href='classes.html#vector'>vector</a>%",
"%<a href='classes.html#vector'>vector</a>%['s] squared length",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets the squared length of a vector",
  "examples" : "send \"%squared length of vector 1, 2, 3%\""
},
{
  "id" : "ExprVelocity",
  "name" : "Vectors - Velocity",
  "patterns" : [
    "[the] velocity of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] velocity",

    "pattern_end"
  ],
  "since" : "2.2-dev31",
  "description" : "Gets, sets, adds or removes velocity to/from/of an entity",
  "examples" : "set player's velocity to {_v}"
},
{
  "id" : "ExprVectorYawPitch",
  "name" : "Vectors - Yaw and pitch",
  "patterns" : [
    "vector (yaw|pitch) of %<a href='classes.html#vector'>vector</a>%",

    "pattern_end"
  ],
  "since" : "2.2-dev28",
  "description" : "Gets or sets the yaw or pitch value of a vector",
  "examples" : "set {_v} to vector -1, 1, 1\\nsend \"%vector yaw of {_v}%, %vector pitch of {_v}%\"\\nadd 45 to vector yaw of {_v}\\nsubtract 45 from vector pitch of {_v}\\nsend \"%vector yaw of {_v}%, %vector pitch of {_v}%\"\\nset vector yaw of {_v} to -45\\nset vector pitch of {_v} to 45\\nsend \"%vector yaw of {_v}%, %vector pitch of {_v}%\""
},
{
  "id" : "ExprVehicle",
  "name" : "Vehicle",
  "patterns" : [
    "[the] vehicle[s] of %<a href='classes.html#entity'>entities</a>%",
"%<a href='classes.html#entity'>entities</a>%'[s] vehicle[s]",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The vehicle an entity is in, if any. This can actually be any entity, e.g. spider jockeys are skeletons that ride on a spider, so the spider is the 'vehicle' of the skeleton.\\nSee also: <a href='#ExprPassenger'>passenger</a>",
  "examples" : "vehicle of the player is a minecart"
},
{
  "id" : "ExprVersion",
  "name" : "Version",
  "patterns" : [
    "([craft]bukkit|minecraft|skript)( |-)version",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The version of Bukkit, Minecraft or Skript respectively.",
  "examples" : "message \"This server is running Minecraft %minecraft version% on Bukkit %bukkit version%\"\\nmessage \"This server is powered by Skript %skript version%\""
},
{
  "id" : "ExprWeather",
  "name" : "Weather",
  "patterns" : [
    "[the] weather [(in|of) %<a href='classes.html#world'>worlds</a>%]",
"%<a href='classes.html#world'>worlds</a>%'[s] weather",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The weather in the given or the current world.",
  "examples" : "set weather to clear\\nweather in \"world\" is rainy"
},
{
  "id" : "ExprWorld",
  "name" : "World",
  "patterns" : [
    "[the] world [of %<a href='classes.html#location'>locations</a>/<a href='classes.html#entity'>entities</a>%]",
"%<a href='classes.html#location'>locations</a>/<a href='classes.html#entity'>entities</a>%'[s] world",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "The world the event occurred in.",
  "examples" : "world is \"world_nether\"\\nteleport the player to the world's spawn\\nset the weather in the player's world to rain"
},
{
  "id" : "ExprSeed",
  "name" : "World Seed",
  "patterns" : [
    "[the] seed[s] (from|of) %<a href='classes.html#world'>worlds</a>%",
"%<a href='classes.html#world'>worlds</a>%'[s] seed[s]",

    "pattern_end"
  ],
  "since" : "2.2-dev35",
  "description" : "The seed of given world. Note that it will be returned as Minecraft internally treats seeds, not as you specified it in world configuration.",
  "examples" : "broadcast \"Seed: %seed of player's world%\""
},
{
  "id" : "ExprWorlds",
  "name" : "Worlds",
  "patterns" : [
    "[(all [[of] the]|the)] worlds",

    "pattern_end"
  ],
  "since" : "1.0",
  "description" : "All worlds of the server, useful for looping.",
  "examples" : "loop all worlds:\\n    broadcast \"You're in %loop-world%\" to loop-world"
},
{
  "id" : "ExprXOf",
  "name" : "X of Item",
  "patterns" : [
    "%<a href='classes.html#number'>number</a>% of %<a href='classes.html#itemstack'>item stacks</a>/<a href='classes.html#entitytype'>entity type</a>%",

    "pattern_end"
  ],
  "since" : "1.2",
  "description" : "An expression to be able to use a certain amount of items where the amount can be any expression. Please note that is expression is not stable and might be replaced in the future.",
  "examples" : "give level of player of pickaxes to the player"
},
{
  "id" : "ExprYawPitch",
  "name" : "Yaw / Pitch",
  "patterns" : [
    "[the] (yaw|pitch) of %<a href='classes.html#location'>locations</a>%",
"%<a href='classes.html#location'>locations</a>%'[s] (yaw|pitch)",

    "pattern_end"
  ],
  "since" : "2.0",
  "description" : "The yaw or pitch of a location. You likely won't need this expression ever if you don't know what this means.",
  "examples" : "log \"%player%: %location of player%, %player's yaw%, %player's pitch%\" to \"playerlocs.log\""
},

    {"end" : true}
  ],

  "functions" : [
    {
  "id" : "abs",
  "name" : "abs",
  "patterns" : [
    "abs(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Returns the absolute value of the argument, i.e. makes the argument positive.",
  "examples" : "abs(3) = 3\\nabs(-2) = 2"
},
{
  "id" : "acos",
  "name" : "acos",
  "patterns" : [
    "acos(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The inverse of the <a href='#cos'>cosine</a>, also called arccos. Returns result in degrees, not radians. Only returns values from 0 to 180.",
  "examples" : "acos(0) = 90\\nacos(1) = 0\\nacos(0.5) = 30"
},
{
  "id" : "asin",
  "name" : "asin",
  "patterns" : [
    "asin(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The inverse of the <a href='#sin'>sine</a>, also called arcsin. Returns result in degrees, not radians. Only returns values from -90 to 90.",
  "examples" : "asin(0) = 0\\nasin(1) = 90\\nasin(0.5) = 30"
},
{
  "id" : "atan",
  "name" : "atan",
  "patterns" : [
    "atan(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The inverse of the <a href='#tan'>tangent</a>, also called arctan. Returns result in degrees, not radians. Only returns values from -90 to 90.",
  "examples" : "atan(0) = 0\\natan(1) = 45\\natan(10000) = 89.9943"
},
{
  "id" : "atan2",
  "name" : "atan2",
  "patterns" : [
    "atan2(x: number, y: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Similar to <a href='#atan'>atan</a>, but requires two coordinates and returns values from -180 to 180.\\nThe returned angle is measured counterclockwise in a standard mathematical coordinate system (x to the right, y to the top).",
  "examples" : "atan2(0, 1) = 0\\natan2(10, 0) = 90\\natan2(-10, 5) = -63.4349"
},
{
  "id" : "calcExperience",
  "name" : "calcExperience",
  "patterns" : [
    "calcExperience(level: long)",

    "pattern_end"
  ],
  "since" : "2.2-dev32",
  "description" : "Calculates experience needed to achieve given level in Minecraft.",
  "examples" : ""
},
{
  "id" : "ceil",
  "name" : "ceil",
  "patterns" : [
    "ceil(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Rounds a number down, i.e. returns the closest integer larger than or equal to the argument.",
  "examples" : "ceil(2.34) = 3\\nceil(2) = 2\\nceil(2.99) = 3"
},
{
  "id" : "ceiling",
  "name" : "ceiling",
  "patterns" : [
    "ceiling(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Alias of <a href='#ceil'>ceil</a>.",
  "examples" : "ceiling(2.34) = 3\\nceiling(2) = 2\\nceiling(2.99) = 3"
},
{
  "id" : "cos",
  "name" : "cos",
  "patterns" : [
    "cos(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The cosine function. This is basically the <a href='#sin'>sine</a> shifted by 90°, i.e. <code>cos(a) = sin(a + 90°)</code>, for any number a. Uses degrees, not radians.",
  "examples" : "cos(0) = 1\\ncos(90) = 0"
},
{
  "id" : "date",
  "name" : "date",
  "patterns" : [
    "date(year: number, month: number, day: number, hour: number = [[integer:0]], minute: number = [[integer:0]], second: number = [[integer:0]], millisecond: number = [[integer:0]], zone_offset: number = [[double:NaN]], dst_offset: number = [[double:NaN]])",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Creates a date from a year, month, and day, and optionally also from hour, minute, second and millisecond.\\nA time zone and DST offset can be specified as well (in minutes), if they are left out the server's time zone and DST offset are used (the created date will not retain this information).",
  "examples" : "date(2014, 10, 1) # 0:00, 1st October 2014\\ndate(1990, 3, 5, 14, 30) # 14:30, 5th May 1990\\ndate(1999, 12, 31, 23, 59, 59, 999, -3*60, 0) # almost year 2000 in parts of Brazil (-3 hours offset, no DST)"
},
{
  "id" : "exp",
  "name" : "exp",
  "patterns" : [
    "exp(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The exponential function. You probably don't need this if you don't know what this is.",
  "examples" : "exp(0) = 1\\nexp(1) = 2.7183"
},
{
  "id" : "floor",
  "name" : "floor",
  "patterns" : [
    "floor(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Rounds a number down, i.e. returns the closest integer smaller than or equal to the argument.",
  "examples" : "floor(2.34) = 2\\nfloor(2) = 2\\nfloor(2.99) = 2"
},
{
  "id" : "ln",
  "name" : "ln",
  "patterns" : [
    "ln(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The natural logarithm. You probably don't need this if you don't know what this is.\\nReturns NaN (not a number) if the argument is negative.",
  "examples" : "ln(1) = 0\\nln(exp(5)) = 5\\nln(2) = 0.6931"
},
{
  "id" : "location",
  "name" : "location",
  "patterns" : [
    "location(x: number, y: number, z: number, world: world = event-world, yaw: number = [[integer:0]], pitch: number = [[integer:0]])",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Creates a location from a world and 3 coordinates, with an optional yaw and pitch.",
  "examples" : "location(0, 128, 0)\\nlocation(player's x-coordinate, player's y-coordinate + 5, player's z-coordinate, player's world, 0, 90)"
},
{
  "id" : "log",
  "name" : "log",
  "patterns" : [
    "log(n: number, base: number = [[integer:10]])",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "A logarithm, with base 10 if none is specified. This is the inverse operation to exponentiation (for positive bases only), i.e. <code>log(base ^ exponent, base) = exponent</code> for any positive number 'base' and any number 'exponent'.\\nAnother useful equation is <code>base ^ log(a, base) = a</code> for any numbers 'base' and 'a'.\\nPlease note that due to how numbers are represented in computers, these equations do not hold for all numbers, as the computed values may slightly differ from the correct value.\\nReturns NaN (not a number) if any of the arguments are negative.",
  "examples" : "log(100) = 2 # 10^2 = 100\\nlog(16, 2) = 4 # 2^4 = 16"
},
{
  "id" : "max",
  "name" : "max",
  "patterns" : [
    "max(ns: numbers)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Returns the maximum number from a list of numbers.",
  "examples" : "max(1) = 1\\nmax(1, 2, 3, 4) = 4\\nmax({some list variable::*})"
},
{
  "id" : "min",
  "name" : "min",
  "patterns" : [
    "min(ns: numbers)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Returns the minimum number from a list of numbers.",
  "examples" : "min(1) = 1\\nmin(1, 2, 3, 4) = 1\\nmin({some list variable::*})"
},
{
  "id" : "mod",
  "name" : "mod",
  "patterns" : [
    "mod(d: number, m: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Returns the modulo of the given arguments, i.e. the remainder of the division <code>d/m</code>, where d and m are the arguments of this function.\\nThe returned value is always positive. Returns NaN (not a number) if the second argument is zero.",
  "examples" : "mod(3, 2) = 1\\nmod(256436, 100) = 36\\nmod(-1, 10) = 9"
},
{
  "id" : "product",
  "name" : "product",
  "patterns" : [
    "product(ns: numbers)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Calculates the product of a list of numbers.",
  "examples" : "product(1) = 1\\nproduct(2, 3, 4) = 24\\nproduct({some list variable::*})\\nproduct(2, {_v::*}, and the player's y-coordinate)"
},
{
  "id" : "round",
  "name" : "round",
  "patterns" : [
    "round(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Rounds a number, i.e. returns the closest integer to the argument.",
  "examples" : "round(2.34) = 2\\nround(2) = 2\\nround(2.99) = 3\\nround(2.5) = 3"
},
{
  "id" : "sin",
  "name" : "sin",
  "patterns" : [
    "sin(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The sine function. It starts at 0° with a value of 0, goes to 1 at 90°, back to 0 at 180°, to -1 at 270° and then repeats every 360°. Uses degrees, not radians.",
  "examples" : "sin(90) = 1\\nsin(60) = 0.866"
},
{
  "id" : "sqrt",
  "name" : "sqrt",
  "patterns" : [
    "sqrt(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The square root, which is the inverse operation to squaring a number (for positive numbers only). This is the same as <code>(argument) ^ (1/2)</code> – other roots can be calculated via <code>number ^ (1/root)</code>, e.g. <code>set {_l} to {_volume}^(1/3)</code>.\\nReturns NaN (not a number) if the argument is negative.",
  "examples" : "sqrt(4) = 2\\nsqrt(2) = 1.4142\\nsqrt(-1) = NaN"
},
{
  "id" : "sum",
  "name" : "sum",
  "patterns" : [
    "sum(ns: numbers)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Sums a list of numbers.",
  "examples" : "sum(1) = 1\\nsum(2, 3, 4) = 9\\nsum({some list variable::*})\\nsum(2, {_v::*}, and the player's y-coordinate)"
},
{
  "id" : "tan",
  "name" : "tan",
  "patterns" : [
    "tan(n: number)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "The tangent function. This is basically <code><a href='#sin'>sin</a>(arg)/<a href='#cos'>cos</a>(arg)</code>. Uses degrees, not radians.",
  "examples" : "tan(0) = 0\\ntan(45) = 1\\ntan(89.99) = 5729.5779"
},
{
  "id" : "vector",
  "name" : "vector",
  "patterns" : [
    "vector(x: number, y: number, z: number)",

    "pattern_end"
  ],
  "since" : "2.2-dev23",
  "description" : "Creates a new vector, which can be used with various expressions, effects and functions.",
  "examples" : "vector(0, 0, 0)"
},
{
  "id" : "world",
  "name" : "world",
  "patterns" : [
    "world(name: string)",

    "pattern_end"
  ],
  "since" : "2.2",
  "description" : "Gets a world from its name.",
  "examples" : "set {_nether} to world(\"%{_world}%_nether\")"
},

    {"end" : true}
  ]
}
